{
  "version": 3,
  "sources": [
    "../node_modules/browser-pack/_prelude.js",
    "../index.js",
    "../node_modules/process/browser.js",
    "../node_modules/underscore/underscore.js",
    "../node_modules/waaclock/index.js",
    "../node_modules/waaclock/lib/WAAClock.js",
    "../src/channelorder_test.js",
    "../src/gain_controller.js",
    "../src/html5_player/core.js",
    "../src/media_controller.js",
    "../src/object.js",
    "../src/object_manager.js",
    "../src/scene_reader.js"
  ],
  "names": [
    "r",
    "e",
    "n",
    "t",
    "o",
    "i",
    "f",
    "c",
    "require",
    "u",
    "a",
    "Error",
    "code",
    "p",
    "exports",
    "call",
    "length",
    "1",
    "module",
    "global",
    "__BROWSERIFY_META_DATA__GIT_VERSION",
    "__BROWSERIFY_META_DATA__CREATED_AT",
    "window",
    "ChannelOrderTest",
    "AudioData",
    "IRTPlayer",
    "GainController",
    "MediaElementController",
    "ObjectController",
    "ObjectManager",
    "SceneReader",
    "cachedSetTimeout",
    "cachedClearTimeout",
    "process",
    "defaultSetTimout",
    "defaultClearTimeout",
    "runTimeout",
    "setTimeout",
    "this",
    "runClearTimeout",
    "clearTimeout",
    "currentQueue",
    "queue",
    "draining",
    "queueIndex",
    "cleanUpNextTick",
    "concat",
    "drainQueue",
    "run",
    "Item",
    "fun",
    "array",
    "noop",
    "nextTick",
    "Array",
    "arguments",
    "push",
    "prototype",
    "apply",
    "title",
    "browser",
    "env",
    "argv",
    "version",
    "versions",
    "on",
    "addListener",
    "once",
    "off",
    "removeListener",
    "removeAllListeners",
    "emit",
    "prependListener",
    "prependOnceListener",
    "listeners",
    "binding",
    "cwd",
    "chdir",
    "umask",
    "3",
    "self",
    "_",
    "Object",
    "Symbol",
    "slice",
    "toString",
    "hasOwnProperty",
    "l",
    "isArray",
    "keys",
    "s",
    "create",
    "h",
    "_wrapped",
    "nodeType",
    "VERSION",
    "v",
    "y",
    "d",
    "iteratee",
    "identity",
    "isFunction",
    "isObject",
    "matcher",
    "property",
    "g",
    "Math",
    "max",
    "m",
    "b",
    "j",
    "x",
    "pow",
    "A",
    "w",
    "each",
    "forEach",
    "map",
    "collect",
    "O",
    "reduce",
    "foldl",
    "inject",
    "reduceRight",
    "foldr",
    "find",
    "detect",
    "findIndex",
    "findKey",
    "filter",
    "select",
    "reject",
    "negate",
    "every",
    "all",
    "some",
    "any",
    "contains",
    "includes",
    "include",
    "values",
    "indexOf",
    "invoke",
    "pluck",
    "where",
    "findWhere",
    "min",
    "shuffle",
    "sample",
    "random",
    "clone",
    "sortBy",
    "value",
    "index",
    "criteria",
    "sort",
    "k",
    "groupBy",
    "indexBy",
    "countBy",
    "S",
    "toArray",
    "isString",
    "match",
    "size",
    "partition",
    "first",
    "head",
    "take",
    "initial",
    "last",
    "rest",
    "tail",
    "drop",
    "compact",
    "Boolean",
    "M",
    "isArguments",
    "flatten",
    "without",
    "difference",
    "uniq",
    "unique",
    "isBoolean",
    "union",
    "intersection",
    "unzip",
    "zip",
    "object",
    "F",
    "findLastIndex",
    "sortedIndex",
    "floor",
    "E",
    "isNaN",
    "lastIndexOf",
    "range",
    "ceil",
    "chunk",
    "N",
    "bind",
    "TypeError",
    "partial",
    "placeholder",
    "bindAll",
    "memoize",
    "cache",
    "delay",
    "defer",
    "throttle",
    "leading",
    "now",
    "trailing",
    "cancel",
    "debounce",
    "wrap",
    "compose",
    "after",
    "before",
    "restArguments",
    "I",
    "propertyIsEnumerable",
    "T",
    "B",
    "constructor",
    "allKeys",
    "mapObject",
    "pairs",
    "invert",
    "functions",
    "methods",
    "R",
    "extend",
    "extendOwn",
    "assign",
    "q",
    "K",
    "z",
    "pick",
    "omit",
    "String",
    "defaults",
    "tap",
    "isMatch",
    "valueOf",
    "pop",
    "isEqual",
    "isEmpty",
    "isElement",
    "D",
    "document",
    "childNodes",
    "Int8Array",
    "isFinite",
    "isSymbol",
    "parseFloat",
    "isNumber",
    "isNull",
    "isUndefined",
    "has",
    "noConflict",
    "constant",
    "propertyOf",
    "matches",
    "times",
    "Date",
    "getTime",
    "L",
    "&",
    "<",
    ">",
    "\"",
    "'",
    "`",
    "P",
    "W",
    "join",
    "RegExp",
    "test",
    "replace",
    "escape",
    "unescape",
    "result",
    "C",
    "uniqueId",
    "templateSettings",
    "evaluate",
    "interpolate",
    "J",
    "U",
    "\\",
    "\r",
    "\n",
    " ",
    " ",
    "V",
    "$",
    "template",
    "source",
    "variable",
    "Function",
    "chain",
    "_chain",
    "G",
    "mixin",
    "toJSON",
    "define",
    "amd",
    "WAAClock",
    "./lib/WAAClock",
    "5",
    "isBrowser",
    "CLOCK_DEFAULTS",
    "toleranceLate",
    "toleranceEarly",
    "Event",
    "clock",
    "func",
    "_cleared",
    "_latestTime",
    "_earliestTime",
    "deadline",
    "repeatTime",
    "schedule",
    "clear",
    "_removeEvent",
    "repeat",
    "_hasEvent",
    "tolerance",
    "late",
    "early",
    "_refreshEarlyLateDates",
    "_insertEvent",
    "isRepeated",
    "context",
    "currentTime",
    "_execute",
    "timeStretch",
    "_started",
    "onexpired",
    "console",
    "warn",
    "tickMethod",
    "_events",
    "_createEvent",
    "_absTime",
    "callbackAtTime",
    "start",
    "_clockNode",
    "createScriptProcessor",
    "connect",
    "destination",
    "onaudioprocess",
    "_tick",
    "stop",
    "disconnect",
    "shift",
    "unshift",
    "splice",
    "_indexByTime",
    "_relTime",
    "AudioContext",
    "webkitAudioContext",
    "alert",
    "ctx",
    "_tracks",
    "parseInt",
    "_splitter",
    "createChannelSplitter",
    "analysers",
    "gainNode",
    "createGain",
    "gain",
    "createAnalyser",
    "fftSize",
    "_loadSound",
    "audio",
    "createElement",
    "src",
    "loop",
    "load",
    "mediaElement",
    "createMediaElementSource",
    "play",
    "onended",
    "debug",
    "then",
    "Promise",
    "testChs",
    "info",
    "triggerHandler",
    "pause",
    "resolve",
    "_getFreqData",
    "Float32Array",
    "frequencyBinCount",
    "getFloatFrequencyData",
    "playAudio",
    "_gain",
    "mute",
    "setGain",
    "unmute",
    "getGain",
    "reconnect",
    "setHighpassFreq",
    "canplay",
    "_checkExtension",
    "url",
    "_playing",
    "_looping",
    "_rangeStart",
    "_rangeEnd",
    "_startTime",
    "_startOffset",
    "_initBuffer",
    "createBufferSource",
    "buffer",
    "_buffer",
    "loopStart",
    "loopEnd",
    "_onendedHandler",
    "duration",
    "toggleLoop",
    "setLoopState",
    "setRangeStart",
    "setRangeEnd",
    "setTime",
    "_checkSupport",
    "exec",
    "error",
    "canPlayType",
    "XMLHttpRequest",
    "open",
    "responseType",
    "onload",
    "decodeAudioData",
    "response",
    "send",
    "loopingState",
    "signals",
    "playing",
    "init",
    "vol",
    "activeSignal",
    "_loaded_counter",
    "_ended_counter",
    "addURL",
    "addAudioData",
    "_addEventListener",
    "togglePlay",
    "_do",
    "muteOthers",
    "unmuteAll",
    "attenuateOthers",
    "_mediaElement",
    "_mediaSourceNode",
    "gainController",
    "onstalled",
    "suspend",
    "onplaying",
    "state",
    "resume",
    "oncanplaythrough",
    "setVolume",
    "volume",
    "getVolume",
    "muted",
    "panner",
    "createPanner",
    "panningType",
    "maxDistance",
    "setPanningType",
    "position",
    "_state",
    "stateNode",
    "interactiveGain",
    "setAudio",
    "setPosition",
    "getPosition",
    "setStatus",
    "setInteractiveGain",
    "_interactiveGain",
    "getStatus",
    "setValueAtTime",
    "linearRampToValueAtTime",
    "panningModel",
    "getPanningType",
    "setRollOffFactor",
    "rolloffFactor",
    "setDistanceModel",
    "distanceModel",
    "setRefDistance",
    "refDistance",
    "setMaxDistance",
    "highpass",
    "frequency",
    "masterGain",
    "reader",
    "_mediaElementTracks",
    "_channorder_root",
    "_clock",
    "_evts",
    "_timer_evt",
    "_audioURLs",
    "_currentKeyframeIndex",
    "_kfMapping",
    "_last_kfMapping",
    "_audiobedTracks",
    "_groupObjURLs",
    "_singleObjURLs",
    "_audiobed",
    "_groupObjPlayers",
    "_singleObjAudios",
    "_kf_canplay",
    "objects",
    "_audioInstances",
    "_panningType",
    "interactive",
    "_listenerOrientation",
    "setListenerOrientation",
    "_keyframes",
    "_sceneInfo",
    "interactiveInfo",
    "object_count",
    "roomDimensions",
    "room_dimensions",
    "_listenerPosition",
    "listener_position",
    "audiobed_url",
    "type",
    "audiobed_tracks",
    "currentSrc",
    "split",
    "_chOrderTest",
    "om",
    "_chOrder",
    "_id",
    "_loadedStateDelegate",
    "switchGroups",
    "iterator",
    "next",
    "done",
    "_initSwitchGroup",
    "return",
    "_checkReadyStart",
    "_processCurrentKeyframes",
    "togglePause",
    "_handleKeyframe",
    "togglePanningType",
    "listener",
    "setOrientation",
    "getListenerOrientation",
    "setListenerPosition",
    "getListenerPosition",
    "obj",
    "cmd",
    "params",
    "_handleKeyframeAssets",
    "_startKeyframeAssets",
    "_checkLoadedState",
    "_handleKeyframeMappings",
    "JSON",
    "stringify",
    "_typeof",
    "trace",
    "parse",
    "_buildKeyframeCallback",
    "_triggerChange",
    "default",
    "switchGroup",
    "items",
    "callback",
    "ajax",
    "dataType",
    "success",
    "_tokenize",
    "_parseSpatdif",
    "name",
    "listener_orientation",
    "_parseFloatArray",
    "startsWith"
  ],
  "mappings": "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",
  "file": "bogJS-latest.min.js",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "\nglobal.__BROWSERIFY_META_DATA__GIT_VERSION = \"9e7bdc3 v0.4.4\";\nglobal.__BROWSERIFY_META_DATA__CREATED_AT = \"Tue Sep 03 2019 08:46:50 GMT+0200 (Mitteleuropäische Sommerzeit)\";\n\n\n// making the objects globally available\nwindow.ChannelOrderTest = require('./src/channelorder_test');\nwindow.AudioData = require('./src/html5_player/core').AudioData;\nwindow.IRTPlayer = require('./src/html5_player/core').IRTPlayer;\nwindow.GainController = require('./src/gain_controller');\nwindow.MediaElementController = require('./src/media_controller');\nwindow.ObjectController = require('./src/object');\nwindow.ObjectManager = require('./src/object_manager');\nwindow.SceneReader = require('./src/scene_reader');\n//window.UIManager = require('./src/ui');\n",
    "var cachedSetTimeout,cachedClearTimeout,process=module.exports={};function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}function runTimeout(e){if(cachedSetTimeout===setTimeout)return setTimeout(e,0);if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout)return cachedSetTimeout=setTimeout,setTimeout(e,0);try{return cachedSetTimeout(e,0)}catch(t){try{return cachedSetTimeout.call(null,e,0)}catch(t){return cachedSetTimeout.call(this,e,0)}}}function runClearTimeout(e){if(cachedClearTimeout===clearTimeout)return clearTimeout(e);if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout)return cachedClearTimeout=clearTimeout,clearTimeout(e);try{return cachedClearTimeout(e)}catch(t){try{return cachedClearTimeout.call(null,e)}catch(t){return cachedClearTimeout.call(this,e)}}}!function(){try{cachedSetTimeout=\"function\"==typeof setTimeout?setTimeout:defaultSetTimout}catch(e){cachedSetTimeout=defaultSetTimout}try{cachedClearTimeout=\"function\"==typeof clearTimeout?clearTimeout:defaultClearTimeout}catch(e){cachedClearTimeout=defaultClearTimeout}}();var currentQueue,queue=[],draining=!1,queueIndex=-1;function cleanUpNextTick(){draining&&currentQueue&&(draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue())}function drainQueue(){if(!draining){var e=runTimeout(cleanUpNextTick);draining=!0;for(var t=queue.length;t;){for(currentQueue=queue,queue=[];++queueIndex<t;)currentQueue&&currentQueue[queueIndex].run();queueIndex=-1,t=queue.length}currentQueue=null,draining=!1,runClearTimeout(e)}}function Item(e,t){this.fun=e,this.array=t}function noop(){}process.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];queue.push(new Item(e,t)),1!==queue.length||draining||runTimeout(drainQueue)},Item.prototype.run=function(){this.fun.apply(null,this.array)},process.title=\"browser\",process.browser=!0,process.env={},process.argv=[],process.version=\"\",process.versions={},process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.prependListener=noop,process.prependOnceListener=noop,process.listeners=function(e){return[]},process.binding=function(e){throw new Error(\"process.binding is not supported\")},process.cwd=function(){return\"/\"},process.chdir=function(e){throw new Error(\"process.chdir is not supported\")},process.umask=function(){return 0};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyb3dzZXIuanMiXSwibmFtZXMiOlsiY2FjaGVkU2V0VGltZW91dCIsImNhY2hlZENsZWFyVGltZW91dCIsInByb2Nlc3MiLCJtb2R1bGUiLCJleHBvcnRzIiwiZGVmYXVsdFNldFRpbW91dCIsIkVycm9yIiwiZGVmYXVsdENsZWFyVGltZW91dCIsInJ1blRpbWVvdXQiLCJmdW4iLCJzZXRUaW1lb3V0IiwiZSIsImNhbGwiLCJ0aGlzIiwicnVuQ2xlYXJUaW1lb3V0IiwibWFya2VyIiwiY2xlYXJUaW1lb3V0IiwiY3VycmVudFF1ZXVlIiwicXVldWUiLCJkcmFpbmluZyIsInF1ZXVlSW5kZXgiLCJjbGVhblVwTmV4dFRpY2siLCJsZW5ndGgiLCJjb25jYXQiLCJkcmFpblF1ZXVlIiwidGltZW91dCIsImxlbiIsInJ1biIsIkl0ZW0iLCJhcnJheSIsIm5vb3AiLCJuZXh0VGljayIsImFyZ3MiLCJBcnJheSIsImFyZ3VtZW50cyIsImkiLCJwdXNoIiwicHJvdG90eXBlIiwiYXBwbHkiLCJ0aXRsZSIsImJyb3dzZXIiLCJlbnYiLCJhcmd2IiwidmVyc2lvbiIsInZlcnNpb25zIiwib24iLCJhZGRMaXN0ZW5lciIsIm9uY2UiLCJvZmYiLCJyZW1vdmVMaXN0ZW5lciIsInJlbW92ZUFsbExpc3RlbmVycyIsImVtaXQiLCJwcmVwZW5kTGlzdGVuZXIiLCJwcmVwZW5kT25jZUxpc3RlbmVyIiwibGlzdGVuZXJzIiwibmFtZSIsImJpbmRpbmciLCJjd2QiLCJjaGRpciIsImRpciIsInVtYXNrIl0sIm1hcHBpbmdzIjoiQUFDQSxJQU9JQSxpQkFDQUMsbUJBUkFDLFFBQVVDLE9BQU9DLFFBQVUsR0FVL0IsU0FBU0MsbUJBQ0wsTUFBTSxJQUFJQyxNQUFNLG1DQUVwQixTQUFTQyxzQkFDTCxNQUFNLElBQUlELE1BQU0scUNBc0JwQixTQUFTRSxXQUFXQyxHQUNoQixHQUFJVCxtQkFBcUJVLFdBRXJCLE9BQU9BLFdBQVdELEVBQUssR0FHM0IsSUFBS1QsbUJBQXFCSyxt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",
    "!function(){var n=\"object\"==typeof self&&self.self===self&&self||\"object\"==typeof global&&global.global===global&&global||this||{},r=n._,t=Array.prototype,e=Object.prototype,u=\"undefined\"!=typeof Symbol?Symbol.prototype:null,i=t.push,o=t.slice,a=e.toString,c=e.hasOwnProperty,l=Array.isArray,f=Object.keys,s=Object.create,p=function(){},h=function(n){return n instanceof h?n:this instanceof h?void(this._wrapped=n):new h(n)};\"undefined\"==typeof exports||exports.nodeType?n._=h:(\"undefined\"!=typeof module&&!module.nodeType&&module.exports&&(exports=module.exports=h),exports._=h),h.VERSION=\"1.9.1\";var v,y=function(n,r,t){if(void 0===r)return n;switch(null==t?3:t){case 1:return function(t){return n.call(r,t)};case 3:return function(t,e,u){return n.call(r,t,e,u)};case 4:return function(t,e,u,i){return n.call(r,t,e,u,i)}}return function(){return n.apply(r,arguments)}},d=function(n,r,t){return h.iteratee!==v?h.iteratee(n,r):null==n?h.identity:h.isFunction(n)?y(n,r,t):h.isObject(n)&&!h.isArray(n)?h.matcher(n):h.property(n)};h.iteratee=v=function(n,r){return d(n,r,1/0)};var g=function(n,r){return r=null==r?n.length-1:+r,function(){for(var t=Math.max(arguments.length-r,0),e=Array(t),u=0;u<t;u++)e[u]=arguments[u+r];switch(r){case 0:return n.call(this,e);case 1:return n.call(this,arguments[0],e);case 2:return n.call(this,arguments[0],arguments[1],e)}var i=Array(r+1);for(u=0;u<r;u++)i[u]=arguments[u];return i[r]=e,n.apply(this,i)}},m=function(n){if(!h.isObject(n))return{};if(s)return s(n);p.prototype=n;var r=new p;return p.prototype=null,r},b=function(n){return function(r){return null==r?void 0:r[n]}},j=function(n,r){return null!=n&&c.call(n,r)},x=function(n,r){for(var t=r.length,e=0;e<t;e++){if(null==n)return;n=n[r[e]]}return t?n:void 0},_=Math.pow(2,53)-1,A=b(\"length\"),w=function(n){var r=A(n);return\"number\"==typeof r&&r>=0&&r<=_};h.each=h.forEach=function(n,r,t){var e,u;if(r=y(r,t),w(n))for(e=0,u=n.length;e<u;e++)r(n[e],e,n);else{var i=h.keys(n);for(e=0,u=i.length;e<u;e++)r(n[i[e]],i[e],n)}return n},h.map=h.collect=function(n,r,t){r=d(r,t);for(var e=!w(n)&&h.keys(n),u=(e||n).length,i=Array(u),o=0;o<u;o++){var a=e?e[o]:o;i[o]=r(n[a],a,n)}return i};var O=function(n){return function(r,t,e,u){var i=arguments.length>=3;return function(r,t,e,u){var i=!w(r)&&h.keys(r),o=(i||r).length,a=n>0?0:o-1;for(u||(e=r[i?i[a]:a],a+=n);a>=0&&a<o;a+=n){var c=i?i[a]:a;e=t(e,r[c],c,r)}return e}(r,y(t,u,4),e,i)}};h.reduce=h.foldl=h.inject=O(1),h.reduceRight=h.foldr=O(-1),h.find=h.detect=function(n,r,t){var e=(w(n)?h.findIndex:h.findKey)(n,r,t);if(void 0!==e&&-1!==e)return n[e]},h.filter=h.select=function(n,r,t){var e=[];return r=d(r,t),h.each(n,function(n,t,u){r(n,t,u)&&e.push(n)}),e},h.reject=function(n,r,t){return h.filter(n,h.negate(d(r)),t)},h.every=h.all=function(n,r,t){r=d(r,t);for(var e=!w(n)&&h.keys(n),u=(e||n).length,i=0;i<u;i++){var o=e?e[i]:i;if(!r(n[o],o,n))return!1}return!0},h.some=h.any=function(n,r,t){r=d(r,t);for(var e=!w(n)&&h.keys(n),u=(e||n).length,i=0;i<u;i++){var o=e?e[i]:i;if(r(n[o],o,n))return!0}return!1},h.contains=h.includes=h.include=function(n,r,t,e){return w(n)||(n=h.values(n)),(\"number\"!=typeof t||e)&&(t=0),h.indexOf(n,r,t)>=0},h.invoke=g(function(n,r,t){var e,u;return h.isFunction(r)?u=r:h.isArray(r)&&(e=r.slice(0,-1),r=r[r.length-1]),h.map(n,function(n){var i=u;if(!i){if(e&&e.length&&(n=x(n,e)),null==n)return;i=n[r]}return null==i?i:i.apply(n,t)})}),h.pluck=function(n,r){return h.map(n,h.property(r))},h.where=function(n,r){return h.filter(n,h.matcher(r))},h.findWhere=function(n,r){return h.find(n,h.matcher(r))},h.max=function(n,r,t){var e,u,i=-1/0,o=-1/0;if(null==r||\"number\"==typeof r&&\"object\"!=typeof n[0]&&null!=n)for(var a=0,c=(n=w(n)?n:h.values(n)).length;a<c;a++)null!=(e=n[a])&&e>i&&(i=e);else r=d(r,t),h.each(n,function(n,t,e){((u=r(n,t,e))>o||u===-1/0&&i===-1/0)&&(i=n,o=u)});return i},h.min=function(n,r,t){var e,u,i=1/0,o=1/0;if(null==r||\"number\"==typeof r&&\"object\"!=typeof n[0]&&null!=n)for(var a=0,c=(n=w(n)?n:h.values(n)).length;a<c;a++)null!=(e=n[a])&&e<i&&(i=e);else r=d(r,t),h.each(n,function(n,t,e){((u=r(n,t,e))<o||u===1/0&&i===1/0)&&(i=n,o=u)});return i},h.shuffle=function(n){return h.sample(n,1/0)},h.sample=function(n,r,t){if(null==r||t)return w(n)||(n=h.values(n)),n[h.random(n.length-1)];var e=w(n)?h.clone(n):h.values(n),u=A(e);r=Math.max(Math.min(r,u),0);for(var i=u-1,o=0;o<r;o++){var a=h.random(o,i),c=e[o];e[o]=e[a],e[a]=c}return e.slice(0,r)},h.sortBy=function(n,r,t){var e=0;return r=d(r,t),h.pluck(h.map(n,function(n,t,u){return{value:n,index:e++,criteria:r(n,t,u)}}).sort(function(n,r){var t=n.criteria,e=r.criteria;if(t!==e){if(t>e||void 0===t)return 1;if(t<e||void 0===e)return-1}return n.index-r.index}),\"value\")};var k=function(n,r){return function(t,e,u){var i=r?[[],[]]:{};return e=d(e,u),h.each(t,function(r,u){var o=e(r,u,t);n(i,r,o)}),i}};h.groupBy=k(function(n,r,t){j(n,t)?n[t].push(r):n[t]=[r]}),h.indexBy=k(function(n,r,t){n[t]=r}),h.countBy=k(function(n,r,t){j(n,t)?n[t]++:n[t]=1});var S=/[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;h.toArray=function(n){return n?h.isArray(n)?o.call(n):h.isString(n)?n.match(S):w(n)?h.map(n,h.identity):h.values(n):[]},h.size=function(n){return null==n?0:w(n)?n.length:h.keys(n).length},h.partition=k(function(n,r,t){n[t?0:1].push(r)},!0),h.first=h.head=h.take=function(n,r,t){return null==n||n.length<1?null==r?void 0:[]:null==r||t?n[0]:h.initial(n,n.length-r)},h.initial=function(n,r,t){return o.call(n,0,Math.max(0,n.length-(null==r||t?1:r)))},h.last=function(n,r,t){return null==n||n.length<1?null==r?void 0:[]:null==r||t?n[n.length-1]:h.rest(n,Math.max(0,n.length-r))},h.rest=h.tail=h.drop=function(n,r,t){return o.call(n,null==r||t?1:r)},h.compact=function(n){return h.filter(n,Boolean)};var M=function(n,r,t,e){for(var u=(e=e||[]).length,i=0,o=A(n);i<o;i++){var a=n[i];if(w(a)&&(h.isArray(a)||h.isArguments(a)))if(r)for(var c=0,l=a.length;c<l;)e[u++]=a[c++];else M(a,r,t,e),u=e.length;else t||(e[u++]=a)}return e};h.flatten=function(n,r){return M(n,r,!1)},h.without=g(function(n,r){return h.difference(n,r)}),h.uniq=h.unique=function(n,r,t,e){h.isBoolean(r)||(e=t,t=r,r=!1),null!=t&&(t=d(t,e));for(var u=[],i=[],o=0,a=A(n);o<a;o++){var c=n[o],l=t?t(c,o,n):c;r&&!t?(o&&i===l||u.push(c),i=l):t?h.contains(i,l)||(i.push(l),u.push(c)):h.contains(u,c)||u.push(c)}return u},h.union=g(function(n){return h.uniq(M(n,!0,!0))}),h.intersection=function(n){for(var r=[],t=arguments.length,e=0,u=A(n);e<u;e++){var i=n[e];if(!h.contains(r,i)){var o;for(o=1;o<t&&h.contains(arguments[o],i);o++);o===t&&r.push(i)}}return r},h.difference=g(function(n,r){return r=M(r,!0,!0),h.filter(n,function(n){return!h.contains(r,n)})}),h.unzip=function(n){for(var r=n&&h.max(n,A).length||0,t=Array(r),e=0;e<r;e++)t[e]=h.pluck(n,e);return t},h.zip=g(h.unzip),h.object=function(n,r){for(var t={},e=0,u=A(n);e<u;e++)r?t[n[e]]=r[e]:t[n[e][0]]=n[e][1];return t};var F=function(n){return function(r,t,e){t=d(t,e);for(var u=A(r),i=n>0?0:u-1;i>=0&&i<u;i+=n)if(t(r[i],i,r))return i;return-1}};h.findIndex=F(1),h.findLastIndex=F(-1),h.sortedIndex=function(n,r,t,e){for(var u=(t=d(t,e,1))(r),i=0,o=A(n);i<o;){var a=Math.floor((i+o)/2);t(n[a])<u?i=a+1:o=a}return i};var E=function(n,r,t){return function(e,u,i){var a=0,c=A(e);if(\"number\"==typeof i)n>0?a=i>=0?i:Math.max(i+c,a):c=i>=0?Math.min(i+1,c):i+c+1;else if(t&&i&&c)return e[i=t(e,u)]===u?i:-1;if(u!=u)return(i=r(o.call(e,a,c),h.isNaN))>=0?i+a:-1;for(i=n>0?a:c-1;i>=0&&i<c;i+=n)if(e[i]===u)return i;return-1}};h.indexOf=E(1,h.findIndex,h.sortedIndex),h.lastIndexOf=E(-1,h.findLastIndex),h.range=function(n,r,t){null==r&&(r=n||0,n=0),t||(t=r<n?-1:1);for(var e=Math.max(Math.ceil((r-n)/t),0),u=Array(e),i=0;i<e;i++,n+=t)u[i]=n;return u},h.chunk=function(n,r){if(null==r||r<1)return[];for(var t=[],e=0,u=n.length;e<u;)t.push(o.call(n,e,e+=r));return t};var N=function(n,r,t,e,u){if(!(e instanceof r))return n.apply(t,u);var i=m(n.prototype),o=n.apply(i,u);return h.isObject(o)?o:i};h.bind=g(function(n,r,t){if(!h.isFunction(n))throw new TypeError(\"Bind must be called on a function\");var e=g(function(u){return N(n,e,r,this,t.concat(u))});return e}),h.partial=g(function(n,r){var t=h.partial.placeholder,e=function(){for(var u=0,i=r.length,o=Array(i),a=0;a<i;a++)o[a]=r[a]===t?arguments[u++]:r[a];for(;u<arguments.length;)o.push(arguments[u++]);return N(n,e,this,this,o)};return e}),h.partial.placeholder=h,h.bindAll=g(function(n,r){var t=(r=M(r,!1,!1)).length;if(t<1)throw new Error(\"bindAll must be passed function names\");for(;t--;){var e=r[t];n[e]=h.bind(n[e],n)}}),h.memoize=function(n,r){var t=function(e){var u=t.cache,i=\"\"+(r?r.apply(this,arguments):e);return j(u,i)||(u[i]=n.apply(this,arguments)),u[i]};return t.cache={},t},h.delay=g(function(n,r,t){return setTimeout(function(){return n.apply(null,t)},r)}),h.defer=h.partial(h.delay,h,1),h.throttle=function(n,r,t){var e,u,i,o,a=0;t||(t={});var c=function(){a=!1===t.leading?0:h.now(),e=null,o=n.apply(u,i),e||(u=i=null)},l=function(){var l=h.now();a||!1!==t.leading||(a=l);var f=r-(l-a);return u=this,i=arguments,f<=0||f>r?(e&&(clearTimeout(e),e=null),a=l,o=n.apply(u,i),e||(u=i=null)):e||!1===t.trailing||(e=setTimeout(c,f)),o};return l.cancel=function(){clearTimeout(e),a=0,e=u=i=null},l},h.debounce=function(n,r,t){var e,u,i=function(r,t){e=null,t&&(u=n.apply(r,t))},o=g(function(o){if(e&&clearTimeout(e),t){var a=!e;e=setTimeout(i,r),a&&(u=n.apply(this,o))}else e=h.delay(i,r,this,o);return u});return o.cancel=function(){clearTimeout(e),e=null},o},h.wrap=function(n,r){return h.partial(r,n)},h.negate=function(n){return function(){return!n.apply(this,arguments)}},h.compose=function(){var n=arguments,r=n.length-1;return function(){for(var t=r,e=n[r].apply(this,arguments);t--;)e=n[t].call(this,e);return e}},h.after=function(n,r){return function(){if(--n<1)return r.apply(this,arguments)}},h.before=function(n,r){var t;return function(){return--n>0&&(t=r.apply(this,arguments)),n<=1&&(r=null),t}},h.once=h.partial(h.before,2),h.restArguments=g;var I=!{toString:null}.propertyIsEnumerable(\"toString\"),T=[\"valueOf\",\"isPrototypeOf\",\"toString\",\"propertyIsEnumerable\",\"hasOwnProperty\",\"toLocaleString\"],B=function(n,r){var t=T.length,u=n.constructor,i=h.isFunction(u)&&u.prototype||e,o=\"constructor\";for(j(n,o)&&!h.contains(r,o)&&r.push(o);t--;)(o=T[t])in n&&n[o]!==i[o]&&!h.contains(r,o)&&r.push(o)};h.keys=function(n){if(!h.isObject(n))return[];if(f)return f(n);var r=[];for(var t in n)j(n,t)&&r.push(t);return I&&B(n,r),r},h.allKeys=function(n){if(!h.isObject(n))return[];var r=[];for(var t in n)r.push(t);return I&&B(n,r),r},h.values=function(n){for(var r=h.keys(n),t=r.length,e=Array(t),u=0;u<t;u++)e[u]=n[r[u]];return e},h.mapObject=function(n,r,t){r=d(r,t);for(var e=h.keys(n),u=e.length,i={},o=0;o<u;o++){var a=e[o];i[a]=r(n[a],a,n)}return i},h.pairs=function(n){for(var r=h.keys(n),t=r.length,e=Array(t),u=0;u<t;u++)e[u]=[r[u],n[r[u]]];return e},h.invert=function(n){for(var r={},t=h.keys(n),e=0,u=t.length;e<u;e++)r[n[t[e]]]=t[e];return r},h.functions=h.methods=function(n){var r=[];for(var t in n)h.isFunction(n[t])&&r.push(t);return r.sort()};var R=function(n,r){return function(t){var e=arguments.length;if(r&&(t=Object(t)),e<2||null==t)return t;for(var u=1;u<e;u++)for(var i=arguments[u],o=n(i),a=o.length,c=0;c<a;c++){var l=o[c];r&&void 0!==t[l]||(t[l]=i[l])}return t}};h.extend=R(h.allKeys),h.extendOwn=h.assign=R(h.keys),h.findKey=function(n,r,t){r=d(r,t);for(var e,u=h.keys(n),i=0,o=u.length;i<o;i++)if(r(n[e=u[i]],e,n))return e};var q,K,z=function(n,r,t){return r in t};h.pick=g(function(n,r){var t={},e=r[0];if(null==n)return t;h.isFunction(e)?(r.length>1&&(e=y(e,r[1])),r=h.allKeys(n)):(e=z,r=M(r,!1,!1),n=Object(n));for(var u=0,i=r.length;u<i;u++){var o=r[u],a=n[o];e(a,o,n)&&(t[o]=a)}return t}),h.omit=g(function(n,r){var t,e=r[0];return h.isFunction(e)?(e=h.negate(e),r.length>1&&(t=r[1])):(r=h.map(M(r,!1,!1),String),e=function(n,t){return!h.contains(r,t)}),h.pick(n,e,t)}),h.defaults=R(h.allKeys,!0),h.create=function(n,r){var t=m(n);return r&&h.extendOwn(t,r),t},h.clone=function(n){return h.isObject(n)?h.isArray(n)?n.slice():h.extend({},n):n},h.tap=function(n,r){return r(n),n},h.isMatch=function(n,r){var t=h.keys(r),e=t.length;if(null==n)return!e;for(var u=Object(n),i=0;i<e;i++){var o=t[i];if(r[o]!==u[o]||!(o in u))return!1}return!0},q=function(n,r,t,e){if(n===r)return 0!==n||1/n==1/r;if(null==n||null==r)return!1;if(n!=n)return r!=r;var u=typeof n;return(\"function\"===u||\"object\"===u||\"object\"==typeof r)&&K(n,r,t,e)},K=function(n,r,t,e){n instanceof h&&(n=n._wrapped),r instanceof h&&(r=r._wrapped);var i=a.call(n);if(i!==a.call(r))return!1;switch(i){case\"[object RegExp]\":case\"[object String]\":return\"\"+n==\"\"+r;case\"[object Number]\":return+n!=+n?+r!=+r:0==+n?1/+n==1/r:+n==+r;case\"[object Date]\":case\"[object Boolean]\":return+n==+r;case\"[object Symbol]\":return u.valueOf.call(n)===u.valueOf.call(r)}var o=\"[object Array]\"===i;if(!o){if(\"object\"!=typeof n||\"object\"!=typeof r)return!1;var c=n.constructor,l=r.constructor;if(c!==l&&!(h.isFunction(c)&&c instanceof c&&h.isFunction(l)&&l instanceof l)&&\"constructor\"in n&&\"constructor\"in r)return!1}e=e||[];for(var f=(t=t||[]).length;f--;)if(t[f]===n)return e[f]===r;if(t.push(n),e.push(r),o){if((f=n.length)!==r.length)return!1;for(;f--;)if(!q(n[f],r[f],t,e))return!1}else{var s,p=h.keys(n);if(f=p.length,h.keys(r).length!==f)return!1;for(;f--;)if(s=p[f],!j(r,s)||!q(n[s],r[s],t,e))return!1}return t.pop(),e.pop(),!0},h.isEqual=function(n,r){return q(n,r)},h.isEmpty=function(n){return null==n||(w(n)&&(h.isArray(n)||h.isString(n)||h.isArguments(n))?0===n.length:0===h.keys(n).length)},h.isElement=function(n){return!(!n||1!==n.nodeType)},h.isArray=l||function(n){return\"[object Array]\"===a.call(n)},h.isObject=function(n){var r=typeof n;return\"function\"===r||\"object\"===r&&!!n},h.each([\"Arguments\",\"Function\",\"String\",\"Number\",\"Date\",\"RegExp\",\"Error\",\"Symbol\",\"Map\",\"WeakMap\",\"Set\",\"WeakSet\"],function(n){h[\"is\"+n]=function(r){return a.call(r)===\"[object \"+n+\"]\"}}),h.isArguments(arguments)||(h.isArguments=function(n){return j(n,\"callee\")});var D=n.document&&n.document.childNodes;\"function\"!=typeof/./&&\"object\"!=typeof Int8Array&&\"function\"!=typeof D&&(h.isFunction=function(n){return\"function\"==typeof n||!1}),h.isFinite=function(n){return!h.isSymbol(n)&&isFinite(n)&&!isNaN(parseFloat(n))},h.isNaN=function(n){return h.isNumber(n)&&isNaN(n)},h.isBoolean=function(n){return!0===n||!1===n||\"[object Boolean]\"===a.call(n)},h.isNull=function(n){return null===n},h.isUndefined=function(n){return void 0===n},h.has=function(n,r){if(!h.isArray(r))return j(n,r);for(var t=r.length,e=0;e<t;e++){var u=r[e];if(null==n||!c.call(n,u))return!1;n=n[u]}return!!t},h.noConflict=function(){return n._=r,this},h.identity=function(n){return n},h.constant=function(n){return function(){return n}},h.noop=function(){},h.property=function(n){return h.isArray(n)?function(r){return x(r,n)}:b(n)},h.propertyOf=function(n){return null==n?function(){}:function(r){return h.isArray(r)?x(n,r):n[r]}},h.matcher=h.matches=function(n){return n=h.extendOwn({},n),function(r){return h.isMatch(r,n)}},h.times=function(n,r,t){var e=Array(Math.max(0,n));r=y(r,t,1);for(var u=0;u<n;u++)e[u]=r(u);return e},h.random=function(n,r){return null==r&&(r=n,n=0),n+Math.floor(Math.random()*(r-n+1))},h.now=Date.now||function(){return(new Date).getTime()};var L={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"`\":\"&#x60;\"},P=h.invert(L),W=function(n){var r=function(r){return n[r]},t=\"(?:\"+h.keys(n).join(\"|\")+\")\",e=RegExp(t),u=RegExp(t,\"g\");return function(n){return n=null==n?\"\":\"\"+n,e.test(n)?n.replace(u,r):n}};h.escape=W(L),h.unescape=W(P),h.result=function(n,r,t){h.isArray(r)||(r=[r]);var e=r.length;if(!e)return h.isFunction(t)?t.call(n):t;for(var u=0;u<e;u++){var i=null==n?void 0:n[r[u]];void 0===i&&(i=t,u=e),n=h.isFunction(i)?i.call(n):i}return n};var C=0;h.uniqueId=function(n){var r=++C+\"\";return n?n+r:r},h.templateSettings={evaluate:/<%([\\s\\S]+?)%>/g,interpolate:/<%=([\\s\\S]+?)%>/g,escape:/<%-([\\s\\S]+?)%>/g};var J=/(.)^/,U={\"'\":\"'\",\"\\\\\":\"\\\\\",\"\\r\":\"r\",\"\\n\":\"n\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},V=/\\\\|'|\\r|\\n|\\u2028|\\u2029/g,$=function(n){return\"\\\\\"+U[n]};h.template=function(n,r,t){!r&&t&&(r=t),r=h.defaults({},r,h.templateSettings);var e,u=RegExp([(r.escape||J).source,(r.interpolate||J).source,(r.evaluate||J).source].join(\"|\")+\"|$\",\"g\"),i=0,o=\"__p+='\";n.replace(u,function(r,t,e,u,a){return o+=n.slice(i,a).replace(V,$),i=a+r.length,t?o+=\"'+\\n((__t=(\"+t+\"))==null?'':_.escape(__t))+\\n'\":e?o+=\"'+\\n((__t=(\"+e+\"))==null?'':__t)+\\n'\":u&&(o+=\"';\\n\"+u+\"\\n__p+='\"),r}),o+=\"';\\n\",r.variable||(o=\"with(obj||{}){\\n\"+o+\"}\\n\"),o=\"var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\\n\"+o+\"return __p;\\n\";try{e=new Function(r.variable||\"obj\",\"_\",o)}catch(n){throw n.source=o,n}var a=function(n){return e.call(this,n,h)},c=r.variable||\"obj\";return a.source=\"function(\"+c+\"){\\n\"+o+\"}\",a},h.chain=function(n){var r=h(n);return r._chain=!0,r};var G=function(n,r){return n._chain?h(r).chain():r};h.mixin=function(n){return h.each(h.functions(n),function(r){var t=h[r]=n[r];h.prototype[r]=function(){var n=[this._wrapped];return i.apply(n,arguments),G(this,t.apply(h,n))}}),h},h.mixin(h),h.each([\"pop\",\"push\",\"reverse\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(n){var r=t[n];h.prototype[n]=function(){var t=this._wrapped;return r.apply(t,arguments),\"shift\"!==n&&\"splice\"!==n||0!==t.length||delete t[0],G(this,t)}}),h.each([\"concat\",\"join\",\"slice\"],function(n){var r=t[n];h.prototype[n]=function(){return G(this,r.apply(this._wrapped,arguments))}}),h.prototype.value=function(){return this._wrapped},h.prototype.valueOf=h.prototype.toJSON=h.prototype.value,h.prototype.toString=function(){return String(this._wrapped)},\"function\"==typeof define&&define.amd&&define(\"underscore\",[],function(){return h})}();\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuZGVyc2NvcmUuanMiXSwibmFtZXMiOlsicm9vdCIsInNlbGYiLCJnbG9iYWwiLCJ0aGlzIiwicHJldmlvdXNVbmRlcnNjb3JlIiwiXyIsIkFycmF5UHJvdG8iLCJBcnJheSIsInByb3RvdHlwZSIsIk9ialByb3RvIiwiT2JqZWN0IiwiU3ltYm9sUHJvdG8iLCJTeW1ib2wiLCJwdXNoIiwic2xpY2UiLCJ0b1N0cmluZyIsImhhc093blByb3BlcnR5IiwibmF0aXZlSXNBcnJheSIsImlzQXJyYXkiLCJuYXRpdmVLZXlzIiwia2V5cyIsIm5hdGl2ZUNyZWF0ZSIsImNyZWF0ZSIsIkN0b3IiLCJvYmoiLCJfd3JhcHBlZCIsImV4cG9ydHMiLCJub2RlVHlwZSIsIm1vZHVsZSIsIlZFUlNJT04iLCJidWlsdGluSXRlcmF0ZWUiLCJvcHRpbWl6ZUNiIiwiZnVuYyIsImNvbnRleHQiLCJhcmdDb3VudCIsInZhbHVlIiwiY2FsbCIsImluZGV4IiwiY29sbGVjdGlvbiIsImFjY3VtdWxhdG9yIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJjYiIsIml0ZXJhdGVlIiwiaWRlbnRpdHkiLCJpc0Z1bmN0aW9uIiwiaXNPYmplY3QiLCJtYXRjaGVyIiwicHJvcGVydHkiLCJJbmZpbml0eSIsInJlc3RBcmd1bWVudHMiLCJzdGFydEluZGV4IiwibGVuZ3RoIiwiTWF0aCIsIm1heCIsInJlc3QiLCJhcmdzIiwiYmFzZUNyZWF0ZSIsInJlc3VsdCIsInNoYWxsb3dQcm9wZXJ0eSIsImtleSIsImhhcyIsInBhdGgiLCJkZWVwR2V0IiwiaSIsIk1BWF9BUlJBWV9JTkRFWCIsInBvdyIsImdldExlbmd0aCIsImlzQXJyYXlMaWtlIiwiZWFjaCIsImZvckVhY2giLCJtYXAiLCJjb2xsZWN0IiwicmVzdWx0cyIsImN1cnJlbnRLZXkiLCJjcmVhdGVSZWR1Y2UiLCJkaXIiLCJtZW1vIiwiaW5pdGlhbCIsInJlZHVjZXIiLCJyZWR1Y2UiLCJmb2xkbCIsImluamVjdCIsInJlZHVjZVJpZ2h0IiwiZm9sZHIiLCJmaW5kIiwiZGV0ZWN0IiwicHJlZGljYXRlIiwiZmluZEluZGV4IiwiZmluZEtleSIsImZpbHRlciIsInNlbGVjdCIsImxpc3QiLCJyZWplY3QiLCJuZWdhdGUiLCJldmVyeSIsImFsbCIsInNvbWUiLCJhbnkiLCJjb250YWlucyIsImluY2x1ZGVzIiwiaW5jbHVkZSIsIml0ZW0iLCJmcm9tSW5kZXgiLCJndWFyZCIsInZhbHVlcyIsImluZGV4T2YiLCJpbnZva2UiLCJjb250ZXh0UGF0aCIsIm1ldGhvZCIsInBsdWNrIiwid2hlcmUiLCJhdHRycyIsImZpbmRXaGVyZSIsImNvbXB1dGVkIiwibGFzdENvbXB1dGVkIiwidiIsIm1pbiIsInNodWZmbGUiLCJzYW1wbGUiLCJuIiwicmFuZG9tIiwiY2xvbmUiLCJsYXN0IiwicmFuZCIsInRlbXAiLCJzb3J0QnkiLCJjcml0ZXJpYSIsInNvcnQiLCJsZWZ0IiwicmlnaHQiLCJhIiwiYiIsImdyb3VwIiwiYmVoYXZpb3IiLCJwYXJ0aXRpb24iLCJncm91cEJ5IiwiaW5kZXhCeSIsImNvdW50QnkiLCJyZVN0clN5bWJvbCIsInRvQXJyYXkiLCJpc1N0cmluZyIsIm1hdGNoIiwic2l6ZSIsInBhc3MiLCJmaXJzdCIsImhlYWQiLCJ0YWtlIiwiYXJyYXkiLCJ0YWlsIiwiZHJvcCIsImNvbXBhY3QiLCJCb29sZWFuIiwiZmxhdHRlbiIsImlucHV0Iiwic2hhbGxvdyIsInN0cmljdCIsIm91dHB1dCIsImlkeCIsImlzQXJndW1lbnRzIiwiaiIsImxlbiIsIndpdGhvdXQiLCJvdGhlckFycmF5cyIsImRpZmZlcmVuY2UiLCJ1bmlxIiwidW5pcXVlIiwiaXNTb3J0ZWQiLCJpc0Jvb2xlYW4iLCJzZWVuIiwidW5pb24iLCJhcnJheXMiLCJpbnRlcnNlY3Rpb24iLCJhcmdzTGVuZ3RoIiwidW56aXAiLCJ6aXAiLCJvYmplY3QiLCJjcmVhdGVQcmVkaWNhdGVJbmRleEZpbmRlciIsImZpbmRMYXN0SW5kZXgiLCJzb3J0ZWRJbmRleCIsImxvdyIsImhpZ2giLCJtaWQiLCJmbG9vciIsImNyZWF0ZUluZGV4RmluZGVyIiwicHJlZGljYXRlRmluZCIsImlzTmFOIiwibGFzdEluZGV4T2YiLCJyYW5nZSIsInN0YXJ0Iiwic3RvcCIsInN0ZXAiLCJjZWlsIiwiY2h1bmsiLCJjb3VudCIsImV4ZWN1dGVCb3VuZCIsInNvdXJjZUZ1bmMiLCJib3VuZEZ1bmMiLCJjYWxsaW5nQ29udGV4dCIsImJpbmQiLCJUeXBlRXJyb3IiLCJib3VuZCIsImNhbGxBcmdzIiwiY29uY2F0IiwicGFydGlhbCIsImJvdW5kQXJncyIsInBsYWNlaG9sZGVyIiwicG9zaXRpb24iLCJiaW5kQWxsIiwiRXJyb3IiLCJtZW1vaXplIiwiaGFzaGVyIiwiY2FjaGUiLCJhZGRyZXNzIiwiZGVsYXkiLCJ3YWl0Iiwic2V0VGltZW91dCIsImRlZmVyIiwidGhyb3R0bGUiLCJvcHRpb25zIiwidGltZW91dCIsInByZXZpb3VzIiwibGF0ZXIiLCJsZWFkaW5nIiwibm93IiwidGhyb3R0bGVkIiwicmVtYWluaW5nIiwiY2xlYXJUaW1lb3V0IiwidHJhaWxpbmciLCJjYW5jZWwiLCJkZWJvdW5jZSIsImltbWVkaWF0ZSIsImRlYm91bmNlZCIsImNhbGxOb3ciLCJ3cmFwIiwid3JhcHBlciIsImNvbXBvc2UiLCJhZnRlciIsInRpbWVzIiwiYmVmb3JlIiwib25jZSIsImhhc0VudW1CdWciLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIm5vbkVudW1lcmFibGVQcm9wcyIsImNvbGxlY3ROb25FbnVtUHJvcHMiLCJub25FbnVtSWR4IiwiY29uc3RydWN0b3IiLCJwcm90byIsInByb3AiLCJhbGxLZXlzIiwibWFwT2JqZWN0IiwicGFpcnMiLCJpbnZlcnQiLCJmdW5jdGlvbnMiLCJtZXRob2RzIiwibmFtZXMiLCJjcmVhdGVBc3NpZ25lciIsImtleXNGdW5jIiwiZGVmYXVsdHMiLCJzb3VyY2UiLCJsIiwiZXh0ZW5kIiwiZXh0ZW5kT3duIiwiYXNzaWduIiwiZXEiLCJkZWVwRXEiLCJrZXlJbk9iaiIsInBpY2siLCJvbWl0IiwiU3RyaW5nIiwicHJvcHMiLCJ0YXAiLCJpbnRlcmNlcHRvciIsImlzTWF0Y2giLCJhU3RhY2siLCJiU3RhY2siLCJ0eXBlIiwiY2xhc3NOYW1lIiwidmFsdWVPZiIsImFyZUFycmF5cyIsImFDdG9yIiwiYkN0b3IiLCJwb3AiLCJpc0VxdWFsIiwiaXNFbXB0eSIsImlzRWxlbWVudCIsIm5hbWUiLCJub2RlbGlzdCIsImRvY3VtZW50IiwiY2hpbGROb2RlcyIsIkludDhBcnJheSIsImlzRmluaXRlIiwiaXNTeW1ib2wiLCJwYXJzZUZsb2F0IiwiaXNOdW1iZXIiLCJpc051bGwiLCJpc1VuZGVmaW5lZCIsIm5vQ29uZmxpY3QiLCJjb25zdGFudCIsIm5vb3AiLCJwcm9wZXJ0eU9mIiwibWF0Y2hlcyIsImFjY3VtIiwiRGF0ZSIsImdldFRpbWUiLCJlc2NhcGVNYXAiLCImIiwiPCIsIj4iLCJcIiIsIiciLCJgIiwidW5lc2NhcGVNYXAiLCJjcmVhdGVFc2NhcGVyIiwiZXNjYXBlciIsImpvaW4iLCJ0ZXN0UmVnZXhwIiwiUmVnRXhwIiwicmVwbGFjZVJlZ2V4cCIsInN0cmluZyIsInRlc3QiLCJyZXBsYWNlIiwiZXNjYXBlIiwidW5lc2NhcGUiLCJmYWxsYmFjayIsImlkQ291bnRlciIsInVuaXF1ZUlkIiwicHJlZml4IiwiaWQiLCJ0ZW1wbGF0ZVNldHRpbmdzIiwiZXZhbHVhdGUiLCJpbnRlcnBvbGF0ZSIsIm5vTWF0Y2giLCJlc2NhcGVzIiwiXFwiLCJcciIsIlxuIiwi4oCoIiwi4oCpIiwiZXNjYXBlUmVnRXhwIiwiZXNjYXBlQ2hhciIsInRlbXBsYXRlIiwidGV4dCIsInNldHRpbmdzIiwib2xkU2V0dGluZ3MiLCJyZW5kZXIiLCJvZmZzZXQiLCJ2YXJpYWJsZSIsIkZ1bmN0aW9uIiwiZSIsImRhdGEiLCJhcmd1bWVudCIsImNoYWluIiwiaW5zdGFuY2UiLCJfY2hhaW4iLCJjaGFpblJlc3VsdCIsIm1peGluIiwidG9KU09OIiwiZGVmaW5lIiwiYW1kIl0sIm1hcHBpbmdzIjoi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QUFPLENBQUNyRCxLQUFLc0IsVUFFakIsT0FEQVosRUFBSzJCLE1BQU1nQixFQUFNZixXQUNWMFQsRUFBWWhXLEtBQU02QixFQUFLUSxNQUFNbkMsRUFBR21ELE9BR3BDbkQsR0FJVEEsRUFBRStWLE1BQU0vVixHQUdSQSxFQUFFZ0UsS0FBSyxDQUFDLE1BQU8sT0FBUSxVQUFXLFFBQVMsT0FBUSxTQUFVLFdBQVksU0FBU3lOLEdBQ2hGLElBQUlqTCxFQUFTdkcsRUFBV3dSLEdBQ3hCelIsRUFBRUcsVUFBVXNSLEdBQVEsV0FDbEIsSUFBSXRRLEVBQU1yQixLQUFLc0IsU0FHZixPQUZBb0YsRUFBT3JFLE1BQU1oQixFQUFLaUIsV0FDSixVQUFUcVAsR0FBNkIsV0FBVEEsR0FBcUMsSUFBZnRRLEVBQUk0QixlQUFxQjVCLEVBQUksR0FDckUyVSxFQUFZaFcsS0FBTXFCLE1BSzdCbkIsRUFBRWdFLEtBQUssQ0FBQyxTQUFVLE9BQVEsU0FBVSxTQUFTeU4sR0FDM0MsSUFBSWpMLEVBQVN2RyxFQUFXd1IsR0FDeEJ6UixFQUFFRyxVQUFVc1IsR0FBUSxXQUNsQixPQUFPcUUsRUFBWWhXLEtBQU0wRyxFQUFPckUsTUFBTXJDLEtBQUtzQixTQUFVZ0IsZUFLekRwQyxFQUFFRyxVQUFVMkIsTUFBUSxXQUNsQixPQUFPaEMsS0FBS3NCLFVBS2RwQixFQUFFRyxVQUFVOFEsUUFBVWpSLEVBQUVHLFVBQVU2VixPQUFTaFcsRUFBRUcsVUFBVTJCLE1BRXZEOUIsRUFBRUcsVUFBVU8sU0FBVyxXQUNyQixPQUFPOFAsT0FBTzFRLEtBQUtzQixXQVVBLG1CQUFWNlUsUUFBd0JBLE9BQU9DLEtBQ3hDRCxPQUFPLGFBQWMsR0FBSSxXQUN2QixPQUFPalcsSUFucERiIiwiZmlsZSI6Ii9Vc2Vycy9taWNoYWVsd2VpdG5hdWVyL0RvY3VtZW50cy9kZXZlbC9odG1sL2JvZ0pTL25vZGVfbW9kdWxlcy91bmRlcnNjb3JlL3VuZGVyc2NvcmUuanMifQ==",
    "var WAAClock=require(\"./lib/WAAClock\");module.exports=WAAClock,\"undefined\"!=typeof window&&(window.WAAClock=WAAClock);\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIldBQUNsb2NrIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ3aW5kb3ciXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLFNBQVdDLFFBQVEsa0JBRXZCQyxPQUFPQyxRQUFVSCxTQUNLLG9CQUFYSSxTQUF3QkEsT0FBT0osU0FBV0EiLCJmaWxlIjoiL1VzZXJzL21pY2hhZWx3ZWl0bmF1ZXIvRG9jdW1lbnRzL2RldmVsL2h0bWwvYm9nSlMvbm9kZV9tb2R1bGVzL3dhYWNsb2NrL2luZGV4LmpzIn0=",
    "var isBrowser=\"undefined\"!=typeof window,CLOCK_DEFAULTS={toleranceLate:.1,toleranceEarly:.001},Event=function(t,e,i){this.clock=t,this.func=i,this._cleared=!1,this.toleranceLate=t.toleranceLate,this.toleranceEarly=t.toleranceEarly,this._latestTime=null,this._earliestTime=null,this.deadline=null,this.repeatTime=null,this.schedule(e)};Event.prototype.clear=function(){return this.clock._removeEvent(this),this._cleared=!0,this},Event.prototype.repeat=function(t){if(0===t)throw new Error(\"delay cannot be 0\");return this.repeatTime=t,this.clock._hasEvent(this)||this.schedule(this.deadline+this.repeatTime),this},Event.prototype.tolerance=function(t){return\"number\"==typeof t.late&&(this.toleranceLate=t.late),\"number\"==typeof t.early&&(this.toleranceEarly=t.early),this._refreshEarlyLateDates(),this.clock._hasEvent(this)&&(this.clock._removeEvent(this),this.clock._insertEvent(this)),this},Event.prototype.isRepeated=function(){return null!==this.repeatTime},Event.prototype.schedule=function(t){this._cleared=!1,this.deadline=t,this._refreshEarlyLateDates(),this.clock.context.currentTime>=this._earliestTime?this._execute():this.clock._hasEvent(this)?(this.clock._removeEvent(this),this.clock._insertEvent(this)):this.clock._insertEvent(this)},Event.prototype.timeStretch=function(t,e){this.isRepeated()&&(this.repeatTime=this.repeatTime*e);var i=t+e*(this.deadline-t);if(this.isRepeated())for(;this.clock.context.currentTime>=i-this.toleranceEarly;)i+=this.repeatTime;this.schedule(i)},Event.prototype._execute=function(){!1!==this.clock._started&&(this.clock._removeEvent(this),this.clock.context.currentTime<this._latestTime?this.func(this):(this.onexpired&&this.onexpired(this),console.warn(\"event expired\")),this.clock._hasEvent(this)||!this.isRepeated()||this._cleared||this.schedule(this.deadline+this.repeatTime))},Event.prototype._refreshEarlyLateDates=function(){this._latestTime=this.deadline+this.toleranceLate,this._earliestTime=this.deadline-this.toleranceEarly};var WAAClock=module.exports=function(t,e){e=e||{},this.tickMethod=e.tickMethod||\"ScriptProcessorNode\",this.toleranceEarly=e.toleranceEarly||CLOCK_DEFAULTS.toleranceEarly,this.toleranceLate=e.toleranceLate||CLOCK_DEFAULTS.toleranceLate,this.context=t,this._events=[],this._started=!1};WAAClock.prototype.setTimeout=function(t,e){return this._createEvent(t,this._absTime(e))},WAAClock.prototype.callbackAtTime=function(t,e){return this._createEvent(t,e)},WAAClock.prototype.timeStretch=function(t,e,i){return e.forEach(function(e){e.timeStretch(t,i)}),e},WAAClock.prototype.start=function(){if(!1===this._started){var t=this;if(this._started=!0,this._events=[],\"ScriptProcessorNode\"===this.tickMethod){this._clockNode=this.context.createScriptProcessor(256,1,1),this._clockNode.connect(this.context.destination),this._clockNode.onaudioprocess=function(){process.nextTick(function(){t._tick()})}}else if(\"manual\"!==this.tickMethod)throw new Error(\"invalid tickMethod \"+this.tickMethod)}},WAAClock.prototype.stop=function(){!0===this._started&&(this._started=!1,this._clockNode.disconnect())},WAAClock.prototype._tick=function(){for(var t=this._events.shift();t&&t._earliestTime<=this.context.currentTime;)t._execute(),t=this._events.shift();t&&this._events.unshift(t)},WAAClock.prototype._createEvent=function(t,e){return new Event(this,e,t)},WAAClock.prototype._insertEvent=function(t){this._events.splice(this._indexByTime(t._earliestTime),0,t)},WAAClock.prototype._removeEvent=function(t){var e=this._events.indexOf(t);-1!==e&&this._events.splice(e,1)},WAAClock.prototype._hasEvent=function(t){return-1!==this._events.indexOf(t)},WAAClock.prototype._indexByTime=function(t){for(var e,i=0,s=this._events.length;i<s;)e=Math.floor((i+s)/2),this._events[e]._earliestTime<t?i=e+1:s=e;return i},WAAClock.prototype._absTime=function(t){return t+this.context.currentTime},WAAClock.prototype._relTime=function(t){return t-this.context.currentTime};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIldBQUNsb2NrLmpzIl0sIm5hbWVzIjpbImlzQnJvd3NlciIsIndpbmRvdyIsIkNMT0NLX0RFRkFVTFRTIiwidG9sZXJhbmNlTGF0ZSIsInRvbGVyYW5jZUVhcmx5IiwiRXZlbnQiLCJjbG9jayIsImRlYWRsaW5lIiwiZnVuYyIsInRoaXMiLCJfY2xlYXJlZCIsIl9sYXRlc3RUaW1lIiwiX2VhcmxpZXN0VGltZSIsInJlcGVhdFRpbWUiLCJzY2hlZHVsZSIsInByb3RvdHlwZSIsImNsZWFyIiwiX3JlbW92ZUV2ZW50IiwicmVwZWF0IiwidGltZSIsIkVycm9yIiwiX2hhc0V2ZW50IiwidG9sZXJhbmNlIiwidmFsdWVzIiwibGF0ZSIsImVhcmx5IiwiX3JlZnJlc2hFYXJseUxhdGVEYXRlcyIsIl9pbnNlcnRFdmVudCIsImlzUmVwZWF0ZWQiLCJjb250ZXh0IiwiY3VycmVudFRpbWUiLCJfZXhlY3V0ZSIsInRpbWVTdHJldGNoIiwidFJlZiIsInJhdGlvIiwiX3N0YXJ0ZWQiLCJvbmV4cGlyZWQiLCJjb25zb2xlIiwid2FybiIsIldBQUNsb2NrIiwibW9kdWxlIiwiZXhwb3J0cyIsIm9wdHMiLCJ0aWNrTWV0aG9kIiwiX2V2ZW50cyIsInNldFRpbWVvdXQiLCJkZWxheSIsIl9jcmVhdGVFdmVudCIsIl9hYnNUaW1lIiwiY2FsbGJhY2tBdFRpbWUiLCJldmVudHMiLCJmb3JFYWNoIiwiZXZlbnQiLCJzdGFydCIsInNlbGYiLCJfY2xvY2tOb2RlIiwiY3JlYXRlU2NyaXB0UHJvY2Vzc29yIiwiY29ubmVjdCIsImRlc3RpbmF0aW9uIiwib25hdWRpb3Byb2Nlc3MiLCJwcm9jZXNzIiwibmV4dFRpY2siLCJfdGljayIsInN0b3AiLCJkaXNjb25uZWN0Iiwic2hpZnQiLCJ1bnNoaWZ0Iiwic3BsaWNlIiwiX2luZGV4QnlUaW1lIiwiaW5kIiwiaW5kZXhPZiIsIm1pZCIsImxvdyIsImhpZ2giLCJsZW5ndGgiLCJNYXRoIiwiZmxvb3IiLCJyZWxUaW1lIiwiX3JlbFRpbWUiLCJhYnNUaW1lIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxVQUErQixvQkFBWEMsT0FFcEJDLGVBQWlCLENBQ25CQyxjQUFlLEdBQ2ZDLGVBQWdCLE1BSWRDLE1BQVEsU0FBU0MsRUFBT0MsRUFBVUMsR0FDcENDLEtBQUtILE1BQVFBLEVBQ2JHLEtBQUtELEtBQU9BLEVBQ1pDLEtBQUtDLFVBQVcsRUFFaEJELEtBQUtOLGNBQWdCRyxFQUFNSCxjQUMzQk0sS0FBS0wsZUFBaUJFLEVBQU1GLGVBQzVCSyxLQUFLRSxZQUFjLEtBQ25CRixLQUFLRyxjQUFnQixLQUNyQkgsS0FBS0YsU0FBVyxLQUNoQkUsS0FBS0ksV0FBYSxLQUVsQkosS0FBS0ssU0FBU1AsSUFJaEJGLE1BQU1VLFVBQVVDLE1BQVEsV0FHdEIsT0FGQVAsS0FBS0gsTUFBTVcsYUFBYVIsTUFDeEJBLEtBQUtDLFVBQVcsRUFDVEQsTUFJVEosTUFBTVUsVUFBVUcsT0FBUyxTQUFTQyxHQUNoQyxHQUFhLElBQVRBLEVBQ0YsTUFBTSxJQUFJQyxNQUFNLHFCQUlsQixPQUhBWCxLQUFLSSxXQUFhTSxFQUNiVixLQUFLSCxNQUFNZSxVQUFVWixPQUN4QkEsS0FBS0ssU0FBU0wsS0FBS0YsU0FBV0UsS0FBS0ksWUFDOUJKLE1BTVRKLE1BQU1VLFVBQVVPLFVBQVksU0FBU0MsR0FVbkMsTUFUMkIsaUJBQWhCQSxFQUFPQyxPQUNoQmYsS0FBS04sY0FBZ0JvQixFQUFPQyxNQUNGLGlCQUFqQkQsRUFBT0UsUUFDaEJoQixLQUFLTCxlQUFpQm1CLEVBQU9FLE9BQy9CaEIsS0FBS2lCLHlCQUNEakIsS0FBS0gsTUFBTWUsVUFBVVosUUFDdkJBLEtBQUtILE1BQU1XLGFBQWFSLE1BQ3hCQSxLQUFLSCxNQUFNcUIsYUFBYWxCLE9BRW5CQSxNQUlUSixNQUFNVSxVQUFVYSxXQUFhLFdBQWEsT0FBMkIsT0FBcEJuQixLQUFLSSxZQUt0RFIsTUFBTVUsVUFBVUQsU0FBVyxTQUFTUCxHQUNsQ0UsS0FBS0MsVUFBVyxFQUNoQkQsS0FBS0YsU0FBV0EsRUFDaEJFLEtBQUtpQix5QkFFRGpCLEtBQUtILE1BQU11QixRQUFRQyxhQUFlckIsS0FBS0csY0FDekNILEtBQUtzQixXQUVJdEIsS0FBS0gsTUFBTWUsVUFBVVosT0FDOUJBLEtBQUtILE1BQU1XLGFBQWFSLE1BQ3hCQSxLQUFLSCxNQUFNcUIsYUFBYWxCLE9BRW5CQSxLQUFLSCxNQUFNcUIsYUFBYWxCLE9BR2pDSixNQUFNVSxVQUFVaUIsWUFBYyxTQUFTQyxFQUFNQyxHQUN2Q3pCLEtBQUttQixlQUNQbkIsS0FBS0ksV0FBYUosS0FBS0ksV0FBYXFCLEdBRXRDLElBQUkzQixFQUFXMEIsRUFBT0MsR0FBU3pCLEtBQUtGLFNBQVcwQixHQUcvQyxHQUFJeEIsS0FBS21CLGFBQ1AsS0FBT25CLEtBQUtILE1BQU11QixRQUFRQyxhQUFldkIsRUFBV0UsS0FBS0wsZ0JBQ3ZERyxHQUFZRSxLQUFLSSxXQUVyQkosS0FBS0ssU0FBU1AsSUFJaEJGLE1BQU1VLFVBQVVnQixTQUFXLFlBQ0csSUFBeEJ0QixLQUFLSCxNQUFNNkIsV0FDZjFCLEtBQUtILE1BQU1XLGFBQWFSLE1BRXBCQSxLQUFLSCxNQUFNdUIsUUFBUUMsWUFBY3JCLEtBQUtFLFlBQ3hDRixLQUFLRCxLQUFLQyxPQUVOQSxLQUFLMkIsV0FBVzNCLEtBQUsyQixVQUFVM0IsTUFDbkM0QixRQUFRQyxLQUFLLGtCQUlWN0IsS0FBS0gsTUFBTWUsVUFBVVosUUFBU0EsS0FBS21CLGNBQWlCbkIsS0FBS0MsVUFDNURELEtBQUtLLFNBQVNMLEtBQUtGLFNBQVdFLEtBQUtJLGNBSXZDUixNQUFNVSxVQUFVVyx1QkFBeUIsV0FDdkNqQixLQUFLRSxZQUFjRixLQUFLRixTQUFXRSxLQUFLTixjQUN4Q00sS0FBS0csY0FBZ0JILEtBQUtGLFNBQVdFLEtBQUtMLGdCQUk1QyxJQUFJbUMsU0FBV0MsT0FBT0MsUUFBVSxTQUFTWixFQUFTYSxHQUVoREEsRUFBT0EsR0FBUSxHQUNmakMsS0FBS2tDLFdBQWFELEVBQUtDLFlBQWMsc0JBQ3JDbEMsS0FBS0wsZUFBaUJzQyxFQUFLdEMsZ0JBQWtCRixlQUFlRSxlQUM1REssS0FBS04sY0FBZ0J1QyxFQUFLdkMsZUFBaUJELGVBQWVDLGNBQzFETSxLQUFLb0IsUUFBVUEsRUFDZnBCLEtBQUttQyxRQUFVLEdBQ2ZuQyxLQUFLMEIsVUFBVyxHQUtsQkksU0FBU3hCLFVBQVU4QixXQUFhLFNBQVNyQyxFQUFNc0MsR0FDN0MsT0FBT3JDLEtBQUtzQyxhQUFhdkMsRUFBTUMsS0FBS3VDLFNBQVNGLEtBSS9DUCxTQUFTeEIsVUFBVWtDLGVBQWlCLFNBQVN6QyxFQUFNRCxHQUNqRCxPQUFPRSxLQUFLc0MsYUFBYXZDLEVBQU1ELElBS2pDZ0MsU0FBU3hCLFVBQVVpQixZQUFjLFNBQVNDLEVBQU1pQixFQUFRaEIsR0FFdEQsT0FEQWdCLEVBQU9DLFFBQVEsU0FBU0MsR0FBU0EsRUFBTXBCLFlBQVlDLEVBQU1DLEtBQ2xEZ0IsR0FJVFgsU0FBU3hCLFVBQVVzQyxNQUFRLFdBQ3pCLElBQXNCLElBQWxCNUMsS0FBSzBCLFNBQW9CLENBQzNCLElBQUltQixFQUFPN0MsS0FJWCxHQUhBQSxLQUFLMEIsVUFBVyxFQUNoQjFCLEtBQUttQyxRQUFVLEdBRVMsd0JBQXBCbkMsS0FBS2tDLFdBQXNDLENBRzdDbEMsS0FBSzhDLFdBQWE5QyxLQUFLb0IsUUFBUTJCLHNCQUZkLElBRWdELEVBQUcsR0FDcEUvQyxLQUFLOEMsV0FBV0UsUUFBUWhELEtBQUtvQixRQUFRNkIsYUFDckNqRCxLQUFLOEMsV0FBV0ksZUFBaUIsV0FDL0JDLFFBQVFDLFNBQVMsV0FBYVAsRUFBS1EsZ0JBRWhDLEdBQXdCLFdBQXBCckQsS0FBS2tDLFdBRVgsTUFBTSxJQUFJdkIsTUFBTSxzQkFBd0JYLEtBQUtrQyxjQUt0REosU0FBU3hCLFVBQVVnRCxLQUFPLFlBQ0YsSUFBbEJ0RCxLQUFLMEIsV0FDUDFCLEtBQUswQixVQUFXLEVBQ2hCMUIsS0FBSzhDLFdBQVdTLGVBUXBCekIsU0FBU3hCLFVBQVUrQyxNQUFRLFdBR3pCLElBRkEsSUFBSVYsRUFBUTNDLEtBQUttQyxRQUFRcUIsUUFFbkJiLEdBQVNBLEVBQU14QyxlQUFpQkgsS0FBS29CLFFBQVFDLGFBQ2pEc0IsRUFBTXJCLFdBQ05xQixFQUFRM0MsS0FBS21DLFFBQVFxQixRQUlwQmIsR0FBTzNDLEtBQUttQyxRQUFRc0IsUUFBUWQsSUFJakNiLFNBQVN4QixVQUFVZ0MsYUFBZSxTQUFTdkMsRUFBTUQsR0FDL0MsT0FBTyxJQUFJRixNQUFNSSxLQUFNRixFQUFVQyxJQUluQytCLFNBQVN4QixVQUFVWSxhQUFlLFNBQVN5QixHQUN6QzNDLEtBQUttQyxRQUFRdUIsT0FBTzFELEtBQUsyRCxhQUFhaEIsRUFBTXhDLGVBQWdCLEVBQUd3QyxJQUlqRWIsU0FBU3hCLFVBQVVFLGFBQWUsU0FBU21DLEdBQ3pDLElBQUlpQixFQUFNNUQsS0FBS21DLFFBQVEwQixRQUFRbEIsSUFDbEIsSUFBVGlCLEdBQVk1RCxLQUFLbUMsUUFBUXVCLE9BQU9FLEVBQUssSUFJM0M5QixTQUFTeEIsVUFBVU0sVUFBWSxTQUFTK0IsR0FDdkMsT0FBd0MsSUFBakMzQyxLQUFLbUMsUUFBUTBCLFFBQVFsQixJQUk3QmIsU0FBU3hCLFVBQVVxRCxhQUFlLFNBQVM3RCxHQUt6QyxJQUhBLElBRUlnRSxFQUZBQyxFQUFNLEVBQ05DLEVBQU9oRSxLQUFLbUMsUUFBUThCLE9BRWpCRixFQUFNQyxHQUNYRixFQUFNSSxLQUFLQyxPQUFPSixFQUFNQyxHQUFRLEdBQzVCaEUsS0FBS21DLFFBQVEyQixHQUFLM0QsY0FBZ0JMLEVBQ3BDaUUsRUFBTUQsRUFBTSxFQUNURSxFQUFPRixFQUVkLE9BQU9DLEdBSVRqQyxTQUFTeEIsVUFBVWlDLFNBQVcsU0FBUzZCLEdBQ3JDLE9BQU9BLEVBQVVwRSxLQUFLb0IsUUFBUUMsYUFJaENTLFNBQVN4QixVQUFVK0QsU0FBVyxTQUFTQyxHQUNyQyxPQUFPQSxFQUFVdEUsS0FBS29CLFFBQVFDIiwiZmlsZSI6Ii9Vc2Vycy9taWNoYWVsd2VpdG5hdWVyL0RvY3VtZW50cy9kZXZlbC9odG1sL2JvZ0pTL25vZGVfbW9kdWxlcy93YWFjbG9jay9saWIvV0FBQ2xvY2suanMifQ==",
    "/*jshint esversion: 6 */\n/**\n * @file channelorder_test.js\n * @author Michael Weitnauer: {@link weitnauer@irt.de}\n */\n\n/**\n * @module bogJS\n */\n\n\nvar _ = require('underscore');\n\n\n/**\n * GainController\n * @constructor\n *\n * @param ctx - Web Audio API Audio Context instance\n * @param [targetNode=ctx.destination] - Web Audio API node to which the\n * output of the GainController shall be connected to.\n */\n\n/**\n * ChannelOrderTest will start loading, deconding and playing as soon as the\n * instance of the class is created. The test files will be looped and for\n * each loop, the [testChs]{@link module:bogJS~ChannelOrderTest#testChs} method\n * is called. If the test file has been played five times and no order could\n * be detected, the default order will be triggered.\n * @constructor\n *\n * @param {String} container - to be tested file extension w/o dot (\"mp4\")\n * @param {Number} tracks - To be tested channel number for container\n * @param {Object.<AudioContext>} [ctx=AudioContext] - if no AudioContext\n *      instance is passed, it will be created.\n * @param {String} [root=\"signals/order\"] - path to test encoded files\n * @fires module:bogJS~ChannelOrderTest#order_ready\n */\nvar ChannelOrderTest = function(container, tracks, ctx, root=\"signals/order/\"){\n    if (typeof ctx === 'undefined') {\n        if (typeof AudioContext !== 'undefined') {\n            var ctx = new AudioContext();\n        } else if (typeof webkitAudioContext !== 'undefined') {\n            var ctx = new webkitAudioContext();\n        } else {\n            alert(\"Your browser doesn't support the Web Audio API!\");\n        }\n    }\n    /** @var {Object.<AudioContext>} */\n    this.ctx = ctx;\n\n    this._tracks = parseInt(tracks);\n    this._splitter = this.ctx.createChannelSplitter(this._tracks);\n    this.analysers = [];\n    this.gainNode = this.ctx.createGain();\n    this.gainNode.gain.value = 0;\n    this.gainNode.connect(this.ctx.destination);\n\n    for (var i = 0; i < this._tracks; i++){\n        this.analysers[i] = this.ctx.createAnalyser();\n        this.analysers[i].fftSize = 2048;  // \"hard-coded\" due to Safari -> analyser chrashes if fftSize value is greater than 2048\n        this._splitter.connect(this.analysers[i], i);\n        this.analysers[i].connect(this.gainNode);\n    }\n    //var root = root || \"http://lab.irt.de/demos/order/\";\n    if (container === \"webm\"){   // we assume opus if webm is used\n        container = \"opus\";\n    }\n    var url = root+tracks+\"chs.\"+container;\n    this._loadSound(url);\n};\n\n\nChannelOrderTest.prototype = {\n    /**\n     * Load and test passed audio signal\n     *\n     * @protected\n     * @param {string} url - URL\n     */\n    _loadSound: function(url){\n        this.audio = document.createElement('audio');\n        this.audio.src = url;\n        this.audio.loop = true;\n        this.audio.load();\n        this.mediaElement = this.ctx.createMediaElementSource(this.audio);\n        this.mediaElement.connect(this._splitter);\n        this.audio.play();\n        var last_unique = [];\n\n        this.audio.onended = function(){\n          console.debug(\"ChannelOrderTest Playback ended\");\n        }\n\n        // onplay will be fired once the audio playback started\n        $(this.audio).on(\"play\", function(){\n            console.debug(\"Channel order testfile started...\");\n            // this is a fix to make the channel order test working on Firefox\n            // the initial attempt (listen on \"playing\") did no more in FF after\n            // an update.\n            for (let i = 0, p = Promise.resolve(); i < 10; i++) {\n                p = p.then(() => new Promise(resolve =>\n                    setTimeout(function () {\n                        var order = this.testChs();\n                        var unique = _.unique(order);\n                        // the returned order should be identical for two consecutive calls\n                        // to make sure we have a reliable result\n                        if ((unique.length === this._tracks) && (_.isEqual(last_unique, unique))) {\n                            console.info('Channel order detected: ' + order);\n                            /**\n                             * If channel order was detected and ensured, the event is\n                             * fired with channel order as array.\n                             * @event module:bogJS~ChannelOrderTest#order_ready\n                             * @property {Number[]} order - Array containing the detected\n                             * order\n                             */\n                            $(document).triggerHandler('order_ready', [order]);\n                            this.audio.pause();\n                            return;\n                        } else if (unique.length === this._tracks){\n                            last_unique = unique;\n                        }\n                        console.debug(\"Channel order not yet detected. Iteration:  \" + i);\n                        if (i >= 9){\n                            console.warn(\"Channel order not detectable. Stopping indentfication and trigger default values.\");\n                            order = _.range(this._tracks);\n                            $(document).triggerHandler('order_ready', [order]);\n                            this.audio.pause();\n                        }\n                        resolve();\n                    }.bind(this), 500)\n                ));\n            }\n        }.bind(this, last_unique));\n    },\n\n    /**\n     * Save frequency bins to arrays for later analysis\n     * @protected\n     * @returns {Number[]}  Nested array (Float32Array) containing the frequency\n     * bins for each channel\n     */\n    _getFreqData: function(){\n        var freqBins = [];\n        var freqBinaryBins = [];\n        for (var i = 0; i < this._tracks; i++){\n            // Float32Array should be the same length as the frequencyBinCount\n            freqBins[i] = new Float32Array(this.analysers[i].frequencyBinCount);\n            // fill the Float32Array with data returned from getFloatFrequencyData()\n            this.analysers[i].getFloatFrequencyData(freqBins[i]);\n        }\n        return freqBins;\n    },\n\n    /**\n     * Will conduct the detection of the channel order.\n     * @returns {Number[]}  Array containing the detected. e.g. [0, 3, 1, 2]\n     * channel order\n     */\n    testChs: function(){\n        var freqBins = this._getFreqData();\n        var indices = [];\n        for (var i = 0; i < freqBins.length; i++){\n            var idx = _.indexOf(freqBins[i], _.max(freqBins[i]));\n            indices[i] = idx;\n        }\n        console.debug(\"Decoded indices: \" + indices);\n        // to avoid the array is mutated and numerical sorted\n        var sorted_indices = indices.concat().sort(function(a, b){return a-b;});\n        console.debug(\"Sorted indices: \" + sorted_indices);\n        var normalized_indices = [];\n        for (var i = 0; i < indices.length; i++){\n            normalized_indices[i] = _.indexOf(sorted_indices, indices[i]);\n        }\n        return normalized_indices;\n    },\n\n    /**\n    * Explicit play function for mobile devices which will not start the media\n    * element automatically without user gesture.\n    */\n    playAudio: function(){\n        this.audio.play();\n    }\n};\n\nmodule.exports = ChannelOrderTest;\n",
    "/*jshint esversion: 6 */\n/**\n * @file media_controller.js\n * @author Michael Weitnauer: {@link weitnauer@irt.de}\n */\n\n/**\n * @module bogJS\n *\n */\n\n/**\n * GainController\n * @constructor\n *\n * @param ctx - Web Audio API Audio Context instance\n * @param [targetNode=ctx.destination] - Web Audio API node to which the\n * output of the GainController shall be connected to.\n */\nvar GainController = function(ctx, targetNode=ctx.destination){\n    this._gain = 1;\n    this.gainNode = ctx.createGain();\n\n    // Experimental highpass to avoid sizzling noinse while chaning view / angle\n    //this.highpass = ctx.createBiquadFilter();\n    //this.highpass.type = \"highpass\";\n    //this.highpass.connect(this.gainNode);\n    //this.setHighpassFreq(80);\n\n    // FIXME: if applied here, the gainNode stays\n    // connected with ctx.destination:\n    this.connect(targetNode);\n};\n\nGainController.prototype = {\n\n    /**\n     * Mutes the node object\n     *\n     */\n    mute: function(){\n        this.setGain(0);\n    },\n\n    /**\n     * Unmutes node object\n     *\n     */\n    unmute: function(){\n        this.setGain(1);\n    },\n\n    /**\n     * setGain\n     *\n     * @param {Float} val - Values between 0 and 1\n     */\n    setGain: function(val){\n        this.gainNode.gain.value = val;\n        this._gain = this.getGain();\n    },\n\n    /**\n     * getGain\n     *\n     * @returns {Float} gain - Float value between 0 and 1\n     */\n    getGain: function(){\n        return this.gainNode.gain.value;\n    },\n\n    /**\n    * Disconnects and reconnects {@link GainController} instance to passed\n    * AudioNode(s)\n    *\n    * @param {(Object|Object[])} nodes - Single of array of AudioNodes to which\n    * the {@link MediaElementController} instance shall be reconnected.\n    */\n    reconnect: function(nodes){\n        this.disconnect();\n        this.connect(nodes);\n    },\n\n    /**\n     * connect\n     *\n     * @param {(Object|Object[])} nodes - one or multple Web Audio API nodes to\n     * which the output of the GainController instance shall be connected to.\n     */\n    connect: function(nodes) {\n        console.debug(\"Connecting GainController to \" + nodes);\n        if (Object.prototype.toString.call(nodes) != \"[object Array]\"){          // == single Node\n            this.gainNode.connect(nodes);\n        } else {                                          // == array of Nodes\n            for (var i=0; i < nodes.length; i++){\n                this.gainNode.connect(nodes[i]);\n            }\n        }\n    },\n\n    /**\n    * This method will disconnect output of the {@link GainController} instance from\n    * a given node or all connected nodes if node is not given/undefined.\n    */\n    disconnect: function(node){\n        //console.debug(\"Disconnecting \", this, \" from \", node);\n        this.gainNode.disconnect(node);\n    },\n\n    setHighpassFreq: function(freq){\n        //this.highpass.frequency.value = freq;\n    }\n};\n\nmodule.exports = GainController;\n",
    "/**\n * @file irtPlayer_new.js\n * @author Michael Weitnauer: {@link weitnauer@irt.de}\n */\n\n/**\n * @license\n * ----------------------------------------------------------------------------\n * irtPlayer, a Javascript HTML5 Audio library for comparing audio files gaplessly\n * v2.0.0\n * Licensed under the MIT license.\n * http://www.irt.de\n * ----------------------------------------------------------------------------\n * Copyright (C) 2015 Institut für Rundfunktechnik GmbH\n * http://www.irt.de\n * ----------------------------------------------------------------------------\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files ( the \"Software\" ), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * ----------------------------------------------------------------------------\n */\n\n/**\n * @module irtPlayer\n *\n */\n\n\n/**\n * Represents AudioData class which has all the logic to control an\n * audio signal\n *\n * @constructor\n *\n * @param {Object} ctx - An AudioContext instance.\n * @param {string} url - URL of the audio source (with or without\n * extension).\n * @param {Object} [targetNode=ctx.destination] - The audio node to which the AudioData\n * instance shall be connected\n * @param {boolean} [checkSupportFlag=true] - Enable / disable extension\n * support for passed url (see [AudioData._checkExtension]{@link AudioData#_checkExtension})\n *\n * @fires module:irtPlayer~AudioData#audio_init\n * @fires module:irtPlayer~AudioData#audio_loaded\n * @fires module:irtPlayer~AudioData#audio_ended\n */\nvar AudioData = function(ctx, url, targetNode, checkSupportFlag) {\n    /** @protected\n     * @var {boolean} */\n    this.canplay = false;\n    var checkSupportFlag = checkSupportFlag || true;\n    if (checkSupportFlag == true){\n        var url = this._checkExtension(url);\n    }\n    /** @var {Object.<AudioContext>} */\n    this.ctx = ctx;\n    this.url = url;\n\n    this._playing = false;\n    this._looping = true;\n    this._rangeStart = 0;\n    this._rangeEnd = 0;\n    this._startTime = 0;\n    this._startOffset = 0;\n\n    /** @var {Object.<GainNode>} */\n    this.gainNode = this.ctx.createGain();\n    this.gain = this.getGain();\n    var targetNode = targetNode || this.ctx.destination;\n    this.gainNode.connect(targetNode);  // FF either refuses to break this connection or simply displays a no more existing connection..\n}\n\nAudioData.prototype = {\n\n    /**\n     * Create instance of new AudioBufferSource every time {@link\n     * AudioData#play} is called and initialize it.\n     *\n     * @protected\n     */\n    _initBuffer: function(){\n        this.audio = this.ctx.createBufferSource();\n        this.audio.loop = this._looping;\n        //this.audio.loop = false;  // workaround to compensate Chrome behavior. see comment in play()\n        this.audio.buffer = this._buffer;\n        this.audio.connect(this.gainNode);\n        this.audio.loopStart = this._rangeStart;\n        this.audio.loopEnd = this._rangeEnd;\n        this.audio.onended = this._onendedHandler.bind(this);\n\n        /**\n         * Will be fired once the new AudioBufferSource has been\n         * initilized.\n         * @event module:irtPlayer~AudioData#audio_init\n         */\n        $(this).triggerHandler(\"audio_init\");\n    },\n\n    /**\n     * Will be called if AudioBufferSource instance has ended\n     *\n     * @protected\n     */\n    _onendedHandler: function(){\n        //console.debug(\"Audio buffer has ended!\");\n        this._playing = false;\n        //this._startOffset = 0;\n\n        /**\n         * Will be fired once the playback has ended\n         * @event module:irtPlayer~AudioData#audio_ended\n         */\n        $(this).triggerHandler(\"audio_ended\");\n    },\n\n    load: function(){\n        this._loadSound(this.url);\n    },\n\n    /**\n    * Start playback of audio signal\n    *\n    * @param {number} [pos] - Position from which the playback shall start\n    * (optional)\n    */\n    play: function(pos){\n        if ((this._playing == false) && (this.canplay)){\n            this._initBuffer();\n            this._startTime = this.audio.context.currentTime;\n            console.debug(\"Start time: \" + this._startTime);\n            if (typeof pos != 'number'){        // detection with _.isNumber() could be more robust\n                var buffer_duration = this._buffer.duration;\n                var offset = (this._rangeStart + this._startOffset) % buffer_duration;\n                var duration = this._rangeEnd - offset;\n                console.debug(\"Offset: \" + offset + \"   Duration: \" + duration);\n\n                // Passing a duration to start() causes undefined\n                // situation in current versions of Chrome. FF, Safari\n                // and Opera seem to treat this situation properly. See\n                // also https://github.com/WebAudio/web-audio-api/issues/421\n                this.audio.start(0, offset, duration);\n                //this.audio.start(0, offset);\n            } else {\n                console.debug(\"Starting playback at \" + pos);\n                this._startOffset = pos;\n                var duration = this._rangeEnd - pos;\n                this.audio.start(0, pos, duration);\n            }\n            // workaround to force looping in Chrome. see comment above.\n            // Chrome seems to ignore looping state if duration is\n            // passed. --> init() with loop = false, then set \"real\"\n            // loop state here:\n            //this.audio.loop = this._looping;\n            this._playing = true;\n        }\n    },\n\n    /**\n     * Pause playback  - will only be executed if {@link\n     * AudioData#_playing} flag is true.\n     *\n     */\n    pause: function(){\n        if (this._playing == true){\n            this.audio.stop(0);\n            // Measure how much time passed since the last pause.\n            this._startOffset += this.audio.context.currentTime - this._startTime;\n            this._playing = false;\n            console.debug(\"Start offset: \"+ this._startOffset);\n        }\n    },\n\n\n    /**\n     * Stops playback - if method is called during the playback\n     * is stopped, the thrown error will be catched.\n     */\n    stop: function(){\n        try {\n            this.audio.stop(0);\n            this._startOffset = 0;\n            this._playing = false;\n        } catch (err) {\n            console.warn(\"Can't stop audio.. \" + err);\n        }\n    },\n\n    /**\n     * Sets gain of {@link AudioData} instance\n     *\n     * @param {float} gain - Value between 0.0 and 1.0\n     */\n    setGain: function(gain){\n        if ((gain >= 0.0) && (gain <= 1.0)){\n            this.gainNode.gain.value = gain;\n            this.gain = this.gainNode.gain.value;  // avoids that we accept uncompatible values\n        }\n        else {\n            console.warn(\"Gain values must be between 0 and 1\");\n        }\n    },\n\n    /**\n     * Returns current gain value of {@link AudioData} instance\n     *\n     * @return {float} value - Float gain value\n     */\n    getGain: function(){\n        return this.gainNode.gain.value;  // or do we trust in this.gain ??\n    },\n\n    /**\n     * Disables / enables the loop of the {@link AudioData} instance\n     */\n    toggleLoop: function() {\n        if (this._looping == false){\n            this._looping = true;\n        } else {\n            this._looping = false;\n        }\n        try {\n            //this.pause();\n            this.audio.loop = this._looping;\n            //this.play();\n        } catch (err) {\n            console.warn(\"Can't set loop state: \" + err);\n        }\n    },\n\n    /**\n     * Disables / enables the loop of the {@link AudioData} instance\n     */\n    setLoopState: function(bool) {\n        this._looping = bool;\n        try {\n            //this.pause();\n            this.audio.loop = this._looping;\n            //this.play();\n        } catch (err) {\n            console.warn(\"Can't set loop state: \" + err);\n        }\n    },\n\n    /**\n     * Sets start position for playback\n     *\n     * @param {float} pos  - Start playback always at passed\n     * position\n     */\n    setRangeStart: function(pos){\n        pos = parseFloat(pos);\n        if (pos >= 0) {\n            pos = pos;\n        } else {\n            pos = 0;\n        }\n        this._rangeStart = pos;\n        try {\n            this.audio.loopStart = this._rangeStart;\n            console.debug(\"Loop start: \" + pos);\n        } catch (err) {\n            console.warn(\"Can't set loop start yet..\" + err);\n        }\n    },\n\n    /**\n     * Sets end position for playback\n     *\n     * @param {float} pos  - Playback end always at passed\n     * position\n     */\n    setRangeEnd: function(pos){\n        pos = parseFloat(pos);\n        if (pos <= this._buffer.duration) {\n            pos = pos;\n        } else {\n            pos = this._buffer.duration;\n        }\n        this._rangeEnd = pos;\n        try {\n            this.audio.loopEnd = this._rangeEnd;\n            console.debug(\"Loop end: \" + pos);\n        } catch (err){\n            console.warn(\"Can't set loop start yet..\" + err);\n        }\n    },\n\n    /**\n     * Mutes {@link AudioData} instance\n     */\n    mute: function(){\n        this.setGain(0.0);\n    },\n\n    /**\n     * Unmutes {@link AudioData} instance\n     */\n    unmute: function(){\n        this.setGain(1.0);\n    },\n\n    /**\n     * Jump to passed position during playback\n     *\n     * @param {float} pos  - Must be between 0 and {@link\n     * AudioData._rangeEnd}\n     */\n    setTime: function(pos){\n        if ((pos >= 0) && (pos <= this._rangeEnd)){\n            this.stop();\n            this.play(pos);\n        }\n    },\n\n    /**\n     * Returns current playback position\n     *\n     * @return {number} value - Current playback position\n     */\n    getTime: function(){\n        if (this._playing) {\n            return this.audio.context.currentTime - this._startTime + this._startOffset;\n        } else {\n            return this._startOffset;\n        }\n    },\n\n    /**\n    * Disconnects and reconnects {@link AudioData} instance to passed\n    * AudioNode(s)\n    *\n    * @param {...Object} nodes - Variable number of AudioNodes to which\n    * the {@link AudioData} instance shall be reconnected.\n    */\n    reconnect: function(nodes){\n        this.disconnect();\n        if (Object.prototype.toString.call(nodes) != \"[object Array]\"){          // == single Node\n            this.gainNode.connect(nodes);\n        }\n        else {                                          // == array of Nodes\n            for (var i=0; i < nodes.length; i++){\n                this.gainNode.connect(nodes[i]);\n            }\n        }\n    },\n\n    /**\n    * This method will disconnect the {@link AudioData} instance from\n    * all connected nodes (afterwards). Should be mostly\n    * ctx.destination.\n    */\n    disconnect: function(){\n        this.gainNode.disconnect();\n    },\n\n    /**\n     * Method will check whether the passed URL has an extension.\n     * Additionaly, {@link AudioData#_checkSupport} will be executed to\n     * identify the possible containers / codecs.\n     *\n     * @protected\n     * @param {string} url - URL\n     *\n     * @return {string} src - URL including file type extension which should be\n     * compatible with browser\n     */\n    _checkExtension: function(url){\n        var supports = this._checkSupport();\n\n        var re = /\\.[0-9a-z]{3,4}$/i;   // strips the file extension (must be 3 or 4 characters)\n        var ext = re.exec(url);\n        if (ext == null){\n            if (supports.indexOf(\".opus\") > -1) {\n                var src = url + \".opus\";\n            }\n            else if (supports.indexOf(\".mp4\") > -1) {\n                var src = url + \".mp4\";\n            }\n            /*\n            else if (supports.indexOf(\".m4a\") > -1) {\n                var src = url + \".m4a\";\n            }*/\n            else if (supports.indexOf(\".ogg\") > -1) {\n                var src = url + \".ogg\";\n            }\n            else if (supports.indexOf(\".mp3\") > -1) {\n                var src = url + \".mp3\";\n            }\n            else if (supports.indexOf(\".wav\") > -1) {\n                var src = url + \".wav\";\n            }\n        } else {\n            if (supports.indexOf(ext[0]) > -1){\n                var src = url;\n            } else {\n                console.error(\"ERROR: Your browser does not support the needed audio codec (\" + ext[0] + \")!\");\n                var src = \"\";\n            }\n        }\n        return src\n    },\n\n    /**\n     * Detects whether the browser can play one of the listed containers\n     * / codecs\n     *\n     * @protected\n     * @return {string[]} support - An array containing all compatible\n     * formats\n     */\n    _checkSupport: function (){\n        var supports = [];\n        if (document.createElement('audio').canPlayType(\"audio/ogg codecs=opus\") != \"\"){\n            supports.push(\".opus\");\n        }\n        if (document.createElement('audio').canPlayType(\"audio/ogg\") != \"\"){\n            supports.push(\".ogg\");\n        }\n        if (document.createElement('audio').canPlayType(\"audio/x-wav\") != \"\"){\n            supports.push(\".wav\");\n        }\n        if (document.createElement('audio').canPlayType(\"audio/mpeg\") != \"\"){\n            supports.push(\".mp3\");\n        }\n        if (document.createElement('audio').canPlayType('audio/mp4') != \"\"){\n            supports.push(\".mp4\");\n        }\n        if (document.createElement('audio').canPlayType('audio/mp4; codecs=\"mp4a.40.5\"') != \"\"){\n            supports.push(\".m4a\");\n        }\n        console.debug(\"Your browser seems to support these containers: \" + supports);\n        return supports;\n    },\n\n    /**\n     * Load passed audio signal\n     *\n     * @protected\n     * @param {string} url - URL\n     */\n    _loadSound: function(url) {\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n\n        // Decode asynchronously\n        var that = this;\n        request.onload = function() {\n            that.ctx.decodeAudioData(request.response, function(buffer) {\n                that._buffer = buffer;\n                that.canplay = true;\n                that._rangeEnd = that._buffer.duration;\n                that.duration = that._buffer.duration;\n                console.debug(\"audio loaded & decoded!\");\n\n                /**\n                 * Will be fired if the audio data has been loaded &\n                 * decoded\n                 * @event module:irtPlayer~AudioData#audio_loaded\n                 */\n                $(that).triggerHandler(\"audio_loaded\");\n            });\n        };\n        request.send();\n    }\n}\n\n\n/**\n * Represents Controller class which has all the logic to control an\n * array of {@link AudioData} instances\n *\n * @constructor\n *\n * @param {Object} [ctx] - An AudioContext instance.\n * @param {string[]} [sounds] - Array with list of URLs of the audio sources (with or without\n * extension).\n * @param {boolean} [checkSupportFlag=true] - Enable / disable extension\n * support for passed url (see [AudioData._checkExtension]{@link AudioData#_checkExtension})\n *\n * @fires module:irtPlayer~IRTPlayer#player_ready\n * @fires module:irtPlayer~IRTPlayer#player_ended\n */\nvar IRTPlayer = function(ctx, sounds, checkSupportFlag){\n    if (typeof ctx === 'undefined') {\n        if (typeof AudioContext !== 'undefined') {\n            var ctx = new AudioContext();\n        } else if (typeof webkitAudioContext !== 'undefined') {\n            var ctx = new webkitAudioContext();\n        } else {\n            alert(\"Your browser doesn't support the Web Audio API!\");\n        }\n    }\n\n    var checkSupportFlag = typeof checkSupportFlag !== 'undefined' ? checkSupportFlag : true;\n    this._checkSupport = checkSupportFlag;\n    this.ctx = ctx;\n\n    /**\n     * @description Flag if audio signals will be looped\n     * @var {boolean} */\n    this.loopingState = true;\n\n    /**\n     * @description Array of {@link AudioData} instances\n     * @var {AudioData[]} */\n    this.signals = [];\n\n    /** @var {boolean} */\n    this.playing = false;\n    this.canplay = false;\n    this.init(sounds);\n\n    /**\n     * @description Global volume for all {@link AudioData} instances\n     * @var {float} */\n    this.vol = 1.0;\n\n    /**\n     * @description Has array entry integer of currently active file.\n     * See {@link IRTPlayer#muteOthers} or  {@link IRTPlayer#attenuateOthers}\n     * @var {integer}\n     */\n    this.activeSignal = null;\n    //this.muteOthers(0);\n    this._loaded_counter = 0;\n    this._ended_counter = 0;\n    }\n\nIRTPlayer.prototype = {\n\n    /**\n     * Adds all audio signals of passed array to the player\n     *\n     * @param {string[]} sounds - Array of URLs\n     */\n    init: function(sounds){\n        if (typeof sounds != \"undefined\"){\n            for (var i=0; i < sounds.length; i++) {\n                //this.signals[i] = new AudioData(this.ctx, sounds[i]); // can be also used to reset tracks array\n                this.addURL(sounds[i]);\n            }\n\n            // we must bind the event listeners here, because within\n            // addURL() it would fulfilled every time the event would\n            // be triggered, since the signals[] array does not yet\n            // contain all signals during addURL() calls here..\n            /*\n            for (var i=0; i < this.signals.length; i++){\n                this._addEventListener(this.signals[i]);\n            }\n            */\n        }\n        else {\n            console.warn('No urls for sounds passed');\n        }\n    },\n\n    /**\n     * Will add audio sources manually to the {@link IRTPlayer} instance\n     *\n     * @param {string} url - URL of to be added audio source\n     */\n    addURL: function(url){\n        var audio = new AudioData(this.ctx, url, this.ctx.destination, this._checkSupport);\n        this.addAudioData(audio);\n\n        // The event listener must be registered before the event trigger can be\n        // created! So we call the load() method explicitely afterwards.\n        audio.load();\n    },\n\n    /**\n     * Will add {@link AudioData} instances to the {@link IRTPlayer} instance\n     *\n     * @param {AudioData} audioData - instance of to be added audio data object\n     */\n    addAudioData: function(audioData){\n        this._addEventListener(audioData);\n        audioData.setLoopState(false);\n        this.signals.push(audioData);\n    },\n\n    _addEventListener: function(audioData){\n        // NOTE: This is likely working only due to the delayed loading of\n        // the audio files. As we all know, the event listener must be already registered\n        // before the event trigger can be registered as well. So in the worst case,\n        // the audio files will be loaded and decoded _before_ the listener is\n        // registered which means that NO event will be triggered and received..!\n        // TODO: find a good workaround for this issue!\n        $(audioData).on(\"audio_loaded\", function(){\n            this._loaded_counter += 1;\n            if (this._loaded_counter == this.signals.length){\n                console.debug(\"All buffers are loaded & decoded\");\n                /**\n                 * Will be fired to the DOM once all audio signals are loaded.\n                 * This event is triggered to the DOM and not to the object instance\n                 * as this would mean that the listener would have to be registered on\n                 * the not yet exisiting object instance... ==> logic proplem.\n                 * TODO: find alternative solution with promises, callback, etc\n                 * @event module:irtPlayer~IRTPlayer#player_ready\n                 */\n                $(this).triggerHandler(\"player_ready\");\n                this.canplay = true;\n                this.duration = this.signals[0].duration;\n            }\n        }.bind(this));\n\n        $(audioData).on(\"audio_ended\", function(){\n            this._ended_counter += 1;\n            if (this._ended_counter == this.signals.length){\n                this.playing = false;\n                console.debug(\"All buffers ended\");\n                /**\n                 * Will be fired to the DOM once all audio signals are loaded.\n                 * This event is triggered to the DOM and not to the object instance\n                 * as this would mean that the listener would have to be registered on\n                 * the not yet exisiting object instance... ==> logic proplem.\n                 * TODO: find alternative solution with promises, callback, etc\n                 * @event module:irtPlayer~IRTPlayer#player_ended\n                 */\n                $(this).triggerHandler(\"player_ended\");\n            }\n        }.bind(this));\n    },\n\n    /**\n     * Toggles play / pause of playback\n     */\n    togglePlay: function(){\n        if (this.playing == false){\n            this.play();\n        }\n        else {\n            this.pause();\n        }\n    },\n\n    /**\n     * Starts playback of all audio sources in {@link IRTPlayer#signals}\n     */\n    play: function(){\n        this._do('play');\n        this.playing = true;\n        this._do('setLoopState', this.loopingState);\n        this._ended_counter = 0;\n    },\n\n    /**\n     * Pauses playback of all audio sources in {@link IRTPlayer#signals}\n     */\n    pause: function(){\n        this._do('pause');\n        this.playing = false;\n    },\n\n    /**\n     * Stops playback of all audio sources in {@link IRTPlayer#signals}\n     */\n    stop: function(){\n        this._do('stop');\n        this.playing = false;\n        this._do(\"setLoopState\", false);\n    },\n\n    /**\n     * Will mute all audio sources of {@link IRTPlayer#signals} but the\n     * one with the passed index\n     *\n     * @param {integer} id - Array index number of active audio source\n     */\n    muteOthers: function(id){\n        id = parseInt(id);\n        if ((id < this.signals.length) && (id >= 0)){\n            this._do('mute');\n            this.signals[id].unmute();\n            this.activeSignal = id;\n        }\n        else{\n            console.error(\"Passed array index invalid!\")\n        }\n    },\n\n    /**\n     * Will unmute all audio sources in {@link IRTPlayer#signals}\n     */\n    unmuteAll: function(){\n        this._do('unmute');\n        this.activeSignal = null;\n    },\n\n    /**\n     * Will attenuate all audio sources of {@link IRTPlayer#signals} but the\n     * one with the passed index. The active one will have gain value of\n     * {@link IRTPlayer#vol}\n     *\n     * @param {integer} id - Array index number of active audio source\n     * @param {float} attenuation - Gain value for other (attenuated)\n     * audio sources\n     */\n    attenuateOthers: function(id, attenuation){\n        id = parseInt(id);\n        if ((id < this.signals.length) && (id >= 0)){\n            this._do('setGain', attenuation);\n            this.signals[id].setGain(this.vol);\n            this.activeSignal = id;\n        }\n        else{\n            console.error(\"Passed array index invalid!\")\n        }\n    },\n\n    /**\n     * Disables / enables looping of the audio sources\n     */\n    toggleLoop: function() {\n        if (this.loopingState == false){\n            this.loopingState = true;\n        }\n        else {\n            this.loopingState = false;\n        }\n        this._do('toggleLoop');\n    },\n\n    /**\n     * Sets start position for playback\n     *\n     * @param {float} pos  - Start playback always at passed\n     * position for all audio sources in {@link IRTPlayer#signals}\n     */\n    setRangeStart: function(pos){\n        console.info(\"Range start: \" + pos);\n        this._do('setRangeStart', pos);\n    },\n\n    /**\n     * Sets end position for playback\n     *\n     * @param {float} pos  - End playback always at passed\n     * position for all audio sources in {@link IRTPlayer#signals}\n     */\n    setRangeEnd: function(pos){\n        console.info(\"Range end: \" + pos);\n        this._do('setRangeEnd', pos);\n    },\n\n    /**\n     * Jump to passed position during playback\n     *\n     * @param {float} time  - Must be between 0 and {@link\n     * AudioData#_rangeEnd}\n     */\n    setTime: function(time){\n        this._do('setTime', time);\n    },\n\n    /**\n     * Returns current position of playback\n     * @return {number} pos - Current playback position\n     */\n    getTime: function(){\n        return this.signals[0].getTime();\n    },\n\n    /**\n     * Helper function to apply AudioData methods for all instances in\n     * {@link IRTPlayer#signals} array\n     * @param {string} func - Name of the method to be executed\n     * @param {...args} args - variable number of additional arguments that\n     * should be passed to the method\n     * @protected\n     */\n    _do: function(func){\n        if (arguments.length == 2){\n            var args = arguments[1];    // prevents that a single argument will be passed as array with one entry\n        } else {\n            var args = Array.prototype.splice.call(arguments, 1);\n        }\n        for (var i=0; i < this.signals.length; i++){\n            this.signals[i][func](args);\n        }\n    }\n}\n\n\nexports.AudioData = AudioData;\nexports.IRTPlayer = IRTPlayer;\n",
    "/*jshint esversion: 6 */\n/**\n * @file media_controller.js\n * @author Michael Weitnauer: {@link weitnauer@irt.de}\n */\n\n/**\n * @module bogJS\n *\n */\n\nvar GainController = require('./gain_controller');\n\n/**\n * Represents MediaElementController class which has all the logic to control a HTML5 media element\n * Every track / channel of the media element can be controlled separately.\n *\n * @constructor\n *\n * @param {Object} ctx - An AudioContext instance.\n * @param {string} mediaElement - HTML5 media element\n * @param {Number} tracks - Number of media element channels\n * @param {Object} [targetNodeList=ctx.destination] - The audio node to which the MediaElementController\n * @fires module:bogJS~MediaElementController#audio_init\n * @fires module:bogJS~MediaElementController#audio_loaded\n * @fires module:bogJS~MediaElementController#audio_ended\n */\nvar MediaElementController = function(ctx, mediaElement, tracks, targetNodeList) {\n    /** @protected\n     * @var {boolean} */\n    this.canplay = false;\n\n    /** @var {Object.<AudioContext>} */\n    this.ctx = ctx;\n\n    this._mediaElement = mediaElement;\n    this._mediaSourceNode = this.ctx.createMediaElementSource(this._mediaElement);\n    this._tracks = tracks;\n    this._splitter = this.ctx.createChannelSplitter(this._tracks);\n    this._mediaSourceNode.connect(this._splitter);\n\n    this.gainController = [];\n    if (typeof targetNodeList === 'undefined') {\n        var targetNodeList = [];\n        for (var i = 0; i < this._tracks; i++){\n            targetNodeList.push(this.ctx.destination);\n        }\n    }\n    for (var i = 0; i < this._tracks; i++){\n        this.gainController[i] = new GainController(this.ctx, targetNodeList[i]);\n\n        // TODO: Workaround for wrong channel order of decoded bitstream\n        this._splitter.connect(this.gainController[i].gainNode, i);\n    }\n\n    this._mediaElement.onended = function(){\n        console.debug(\"Audio buffer has ended!\");\n        this._playing = false;\n\n        /**\n         * Will be fired once the playback has ended\n         * @event module:bogJS~MediaElementController#audio_ended\n         */\n        $(this).triggerHandler(\"audio_ended\");\n    }.bind(this);\n\n    this._mediaElement.onstalled = function(){\n        console.info(\"Pausing playback - need to buffer more\");\n        this.ctx.suspend();\n    }.bind(this);\n\n    this._mediaElement.onplaying = function(){\n        console.info(\"Resuming playback of media element\");\n        if (this.ctx.state === \"suspended\"){\n            this.ctx.resume();\n        }\n    }.bind(this);\n\n    this._mediaElement.oncanplaythrough = function(){\n        this.canplay = true;\n        console.info(\"Playback of media element can start\");\n\n        /**\n         * Will be fired if media element playback can start\n         * @event module:bogJS~MediaElementController#audio_loaded\n         */\n        $(this).triggerHandler('audio_loaded');\n        if (this.ctx.state === \"suspended\"){\n            this.ctx.resume();\n        }\n    }.bind(this);\n\n    this._mediaElement.load();\n    this._playing = false;\n    this._looping = false;\n}\n\nMediaElementController.prototype = {\n    /**\n    * Start playback of audio signal\n    *\n    * @param {number} [pos] - Position from which the playback shall start\n    * (optional)\n    */\n    play: function(pos){\n        if (typeof pos != 'number'){        // detection with _.isNumber() could be more robust\n            this._mediaElement.play();\n        } else {\n            console.debug(\"Starting playback at \" + pos);\n            this.setTime(pos);\n            this._mediaElement.play()\n        }\n        this._playing = true;\n    },\n\n    /**\n     * Pause playback.\n     *\n     */\n    pause: function(){\n        this._mediaElement.pause();\n        this._playing = false;\n    },\n\n    /**\n     * Stops playback.\n     */\n    stop: function(){\n        this._mediaElement.pause();\n        this._playing = false;\n        this._mediaElement.currentTime = 0;\n    },\n\n    /**\n     * Sets gain of {@link MediaElementController} instance\n     *\n     * @param {float} gain - Value between 0.0 and 1.0\n     */\n    setVolume: function(vol){\n        this._mediaElement.volume = vol;\n    },\n\n    /**\n     * Returns current gain value of {@link MediaElementController} instance\n     *\n     * @return {float} value - Float gain value\n     */\n    getVolume: function(){\n        return this._mediaElement.volume;\n    },\n\n    /**\n     * Disables / enables the loop of the {@link MediaElementController} instance\n     */\n    toggleLoop: function() {\n        if (this._looping == false){\n            this._looping = true;\n        } else {\n            this._looping = false;\n        }\n        this._mediaElement.loop = this._looping;\n    },\n\n    /**\n     * Disables / enables the loop of the {@link MediaElementController} instance\n     */\n    setLoopState: function(bool) {\n        this._looping = bool;\n        this._mediaElement.loop = this._looping;\n    },\n\n    /**\n     * Mutes {@link MediaElementController} instance\n     */\n    mute: function(){\n        this._mediaElement.muted = true;\n    },\n\n    /**\n     * Unmutes {@link MediaElementController} instance\n     */\n    unmute: function(){\n        this._mediaElement.muted = false;\n    },\n\n    /**\n     * Jump to passed position during playback\n     *\n     * @param {float} pos  - Must be >= 0\n     */\n    setTime: function(pos){\n        if (pos >= 0){\n            this._mediaElement.currentTime = pos;\n        }\n    },\n\n    /**\n     * Returns current playback position\n     *\n     * @return {number} value - Current playback position\n     */\n    getTime: function(){\n        return this._mediaElement.currentTime;\n    }\n}\n\nmodule.exports = MediaElementController;\n",
    "/*jshint esversion: 6 */\n/**\n * @file object.js\n * @author Michael Weitnauer [weitnauer@irt.de]\n */\n\n/**\n * @module bogJS\n */\n\nvar GainController = require('./gain_controller');\n\n/**\n * Represents ObjectController class which has all the logic to control an\n * audio object\n *\n * @constructor\n *\n * @param {Object} ctx - An AudioContext instance.\n * @param {AudioData} sourceNode - Instance of an {@link\n * module:irtPlayer~AudioData|AudioData} object.\n * @param {AudioData} [targetNode=ctx.destination] - Instance of an\n * Web Audio API node to which the output of the ObjectController\n * shall be connected to.\n */\n\nvar ObjectController = function(ctx, sourceNode, targetNode=ctx.destination) {\n    /**\n     * Instance of Web Audio Panner node\n     * @var {Object.<AudioContext.PannerNode>}\n     */\n    this.panner = ctx.createPanner();\n\n    // Experimental highpass to avoid sizzling noinse while chaning view / angle\n    //this.highpass = ctx.createBiquadFilter();\n    //this.highpass.type = \"highpass\";\n    //this.setHighpassFreq(80);\n    //this.highpass.connect(this.panner);\n\n    /**\n     * Has the current panning mode of the object\n     * @readonly\n     */\n    this.panningType = \"equalpower\";\n    this.panner.maxDistance = 10;\n\n    this.setPanningType(this.panningType);\n    this.position = [0, 0, 0];  // FIXME: make private and use set and get methods\n    this.gain = 1;  // valid values between 0 and 1  // FIXME: make private and use set and get methods\n\n    this._state = false;\n    this.stateNode = new GainController(ctx, this.panner);\n    this.interactiveGain = new GainController(ctx, this.stateNode.gainNode);\n\n    this.setAudio(sourceNode);\n    this.panner.connect(targetNode);\n};\n\nObjectController.prototype = {\n\n    /**\n     * Change position of panner object within 3D space\n     *\n     * @param {Float[]} xyz - An array with three entries: [x, y, z]\n\n     * @see Interpolation as per AudioParam Interface not possible with\n     * current WAA version. The PannerNode will be deprecated in V1\n     * and a new SpatializerNode will be introduced that should\n     * support interpolation _and_ loading own HRTF databases!!\n     * {@link https://github.com/WebAudio/web-audio-api/issues/372| GitHub issue 372}\n     */\n    setPosition: function(xyz){\n        var my_xyz = [parseFloat(xyz[0]), parseFloat(xyz[1]), parseFloat(xyz[2])];\n        this.panner.setPosition(xyz[0], xyz[1], xyz[2]);\n        console.debug(\"New Position: \" + my_xyz);\n        this.position = xyz;\n    },\n\n    /**\n     * Get current Position of object\n     * @return {Float[]} position - Array with current [x, y, z] values\n     */\n    getPosition: function(){\n        return this.position;\n    },\n\n    /**\n     * Enabling / disabling the object\n     *\n     * @param {Boolean} state - Enables / disables the panner object\n     * instance\n     */\n    setStatus: function(state){\n        if ((state === true) || (state == 1)){\n            this.stateNode.unmute();\n            this._state = true;\n        }\n        else if ((state === false) || (state == 0)){\n            this.stateNode.mute();\n            this._state = false;\n        }\n        console.info(\"Setting state to \" + this._state);\n    },\n\n    /**\n     * Sets gain value of {@link\n     * module:bogJS~GainController#gainNode|GainController.gainNode}\n     * Separate GainNode to be used for interactive Gain control, aka\n     * cross-fading between one group and another.\n     * @param {Float} gain - Must be between 0.0 and 1.0\n     */\n    setInteractiveGain: function(gain){\n        this.interactiveGain.setGain(gain);\n        this._interactiveGain = gain;\n    },\n\n    /**\n     * Returns current object state\n     * @return {Boolean} status\n     */\n    getStatus: function(){\n        return this._state;\n    },\n\n    /**\n     * Sets gain value of {@link\n     * module:irtPlayer~AudioData#gainNode|AudioData.gainNode}\n     *\n     * @param {Float} gain - Must be between 0.0 and 1.0\n     * @param {Float} [time=Now] - At which time shall the gain value be applied\n     * @param {Boolean} [interpolation=false] - Set to true if gain\n     * value shall be linear faded to passed gain value from passed time on. If\n     * false, the gain value will be applied immediately.\n     */\n    setGain: function(gain, time=\"now\", interpolation=false){\n        if (time === \"now\") {\n            this.audio.setGain(gain);\n            this.gain = gain;\n        }\n        else if ((time !== \"now\") && (interpolation === false)) {\n            this.audio.gainNode.gain.setValueAtTime(gain, time);\n        }\n        else if ((time !== \"now\") && (interpolation !== false)){\n            this.audio.gainNode.gain.linearRampToValueAtTime(gain, time);\n        }\n    },\n\n    /**\n     * Get current gain value of {@link\n     * module:irtPlayer~AudioData#gainNode|AudioData.gainNode}\n     *\n     * @return {Float} gain\n     */\n    getGain: function(){\n        return this.audio.getGain();  // or do we trust in this.gain ??\n    },\n\n    /**\n     * Set panning type of Panner object instance.\n     * Currently, \"equalpower\" only supports Stereo (2ch) panning.\n     *\n     * @param {(\"HRTF\"|\"equalpower\")} panningType - Choose \"HRTF\" for binaural\n     * rendering or \"equalpower\" for Stereo rendering.\n     */\n    setPanningType: function(panningType){\n        if ((panningType === \"HRTF\") || (panningType === \"equalpower\")){\n            this.panner.panningModel = panningType;\n            this.panningType = this.panner.panningModel;\n        }\n        else {\n            console.error(\"Only >>HRTF<< or >>equalpower<< are valid types\");\n        }\n    },\n\n    /**\n     * Get panning type\n     * @return {(\"HRTF\"|\"equalpower\")} panningType - Either \"HRTF\" or \"equalpower\"\n     */\n    getPanningType: function(){\n        return this.panner.panningModel;\n    },\n\n    /**\n     * Sets the double value describing how quickly the volume is reduced\n     * as the source moves away from the listener. The initial default value\n     * is 1. This value is used by all distance models.\n     *\n     * @param {Float} factor\n     */\n    setRollOffFactor: function(factor){\n        this.panner.rolloffFactor = factor;\n    },\n\n    /**\n     * Sets the value determining which algorithm to use to reduce the\n     * volume of the audio source as it moves away from the listener. The\n     * initial default value is \"inverse\" which should be equivalent to 1/r.\n     *\n     * @param {(\"inverse\"|\"exponential\"|\"linear\")} model - \"inverse\" is the default setting\n     */\n    setDistanceModel: function(model){\n        this.panner.distanceModel = model;\n    },\n\n    /**\n     * Sets the value representing the reference distance for reducing volume\n     * as the audio source moves further from the listener. The initial\n     * default value is 1. This value is used by all distance models.\n     *\n     * @param {float} refDistance\n     */\n    setRefDistance: function(refDistance){\n        this.panner.refDistance = refDistance;\n    },\n\n    /**\n     * Sets the value representing the maximum distance between the audio\n     * source and the listener, after which the volume is not reduced any\n     * further. The initial default value is 10000. This value is used\n     * only by the linear distance model.\n     *\n     * @param {float} maxDistance\n     */\n    setMaxDistance: function(maxDistance){\n        this.panner.maxDistance = maxDistance;\n    },\n\n    /**\n     * Connects the input of the ObjectController instance\n     * with the output of the passed audioNode.\n     *\n     * @param {AudioData} audioNode - Instance of an {@link\n     * module:irtPlayer~AudioData|AudioData} or GainController object.\n     */\n    setAudio: function(audioNode){\n        // call disconnect only if this.audio exists\n        // it is absolutely essential to disconnect the old audio instance\n        // before the new one can be assigned!\n        /* FIXME: clarify the expected behaviour of a setAudio() method!\n        if (this.audio){\n            this.audio.disconnect(this.panner);\n        }\n        */\n        this.audio = audioNode;\n        // just to make sure we assigned a valid audioNode..\n        if (this.audio){\n            // FIXME: AudioData() class should also have a connect method.\n            // Better would be to use derived class mechanisms.\n            if(this.audio.connect) {\n                this.audio.connect(this.interactiveGain.gainNode);\n            }\n            else {\n                this.audio.reconnect(this.interactiveGain.gainNode);\n            }\n        }\n    },\n\n    setHighpassFreq: function(freq){\n        this.highpass.frequency.value = freq;\n    }\n};\n\nmodule.exports = ObjectController;\n",
    "/*jshint esversion: 6 */\n/**\n * @file object_manager.js\n * @author Michael Weitnauer [weitnauer@irt.de]\n */\n\n/**\n * @module bogJS\n */\n\n/**\n * @typedef keyframes\n * @type {object}\n * @example\n * keyframes = {0.0: [{obj: \"Cello\", cmd: \"position\", params: [3.2, 4, 0]},\n *                    {obj: \"Cembalo\", cmd: \"gain\", params: 0.5}],\n *              0.4: [{obj: \"Cembalo\", cmd: \"is_present\", params: 0},\n *                    {obj: \"Cello\", cmd: \"gain\", params: 1.0}],\n *              235: [{obj: \"Viola\", cmd: \"is_present\", params: 1},\n *                    {obj: \"Viola\", cmd: \"position\", params: [0.5, 3.2, 0.5]}]};\n */\n\n/**\n * @typedef audioURLs\n * @type {object}\n * @example\n * audioURLs = {Cello: \"http://sounds.myserver.com/Cello.ogg\",\n *              Cembalo: \"http://sounds.myserver.com/Cembalo.wav\",\n *              Viola: \"../../Viola.m4a\"}\n */\n\n/**\n * @typedef sceneInfo\n * @type {object}\n * @example\n * sceneInfo = {name: \"My fancy scene\",\n *              listener_position: [0, 0, 0],\n *              listener_orientation: [0, 1, 0],\n *              object_count: 3,\n *              room_dimensions: [10, 10, 3]}\n */\n\n/**\n * @typedef singleObjects\n * @type {object}\n * @example\n * singleObjects = {\"70.754\":[\"Birds1_L\",\"Birds1_R\"],\n *                  \"72.0\":[\"Birds2_L\",\"Birds2_R\"],\n *                  \"79.29\":[\"Birds3\"],\n *                  \"90.65\":[\"Crows\"],\n *                  \"102.55\":[\"Vulcano_L\",\"Vulcano_R\"],\n *                  \"117.55\":[\"Stones_L\",\"Stones_R\"]}\n */\n\n/**\n * @typedef groupObjects\n * @type {object}\n * @example\n * groupObjects = {\"78.2\":[\"Birds1_L\",\"Birds1_R\"],\n *                  \"90.65\":[\"Birds\"],\n *                  \"117.55\":[\"Stones_L\",\"Stones_R\"]}\n */\n\n/**\n * @typedef audiobeds\n * @type {object}\n * @example\n * audiobeds =  {Bed0: \"bed_0\", Bed1: \"bed_1\", Bed2: \"bed_2\", Bed3: \"bed_3\", Bed4: \"bed_4\"}\n */\n\nwindow._ = require('underscore');\nvar WAAClock = require('waaclock');\nvar ChannelOrderTest = require('./channelorder_test');\nvar AudioData = require('./html5_player/core').AudioData;\nvar IRTPlayer = require('./html5_player/core').IRTPlayer;\nvar ObjectController = require('./object');\nvar GainController = require('./gain_controller');\nvar MediaElementController = require('./media_controller');\nvar SceneReader = require('./scene_reader');\n\n/**\n * Represents ObjectManager class which has all the logic to control\n * several {@link module:bogJS~ObjectController|ObjectController} instances along with metadata\n *\n * @constructor\n *\n * @param {string} url - URL of the metadata source.\n * @param {Object} [ctx] - An AudioContext instance.\n * @param {Object} [reader] - A reader instance that has a load() method\n * and will fire a event called \"scene_loaded\". The event must also pass\n * {@link module:bogJS~keyframes|keyframes}, {@link module:bogJS~audioURLs|audioURLs}\n * and {@link module:bogJS~sceneInfo|sceneInfo}. See {@link\n * module:bogJS~SceneReader#load|SceneReader.load()}\n * @param {Object} [mediaElement] - A HMTL5 media element instance to be used as\n * audio bed. If passed, any potentially other given audio bed from the scene\n * file will be ignored.\n * @param {Number} [audiobed_tracks] - If mediaElement is passed, the expected\n * channel number must be passed as well.\n * @param {String} [channelorder_root] - Path to encoded channel order detection\n * test files. See also [ChannelOrderTest]{@link module:bogJS~ChannelOrderTest}\n * and the README.md file.\n * @fires module:bogJS~ObjectManager#om_newGain\n * @fires module:bogJS~ObjectManager#om_newPosition\n * @fires module:bogJS~ObjectManager#om_newTrackMapping\n * @fires module:bogJS~ObjectManager#om_isActive\n *\n */\nvar ObjectManager = function(url, ctx, reader, mediaElement, audiobed_tracks, channelorder_root){\n    if (typeof ctx === 'undefined') {\n        if (typeof AudioContext !== 'undefined') {\n            var ctx = new AudioContext();\n        } else if (typeof webkitAudioContext !== 'undefined') {\n            var ctx = new webkitAudioContext();\n        } else {\n            alert(\"Your browser doesn't support the Web Audio API!\");\n        }\n    }\n    /**\n     * Instance of Web Audio AudioContext\n     * @var {Object.<AudioContext>}\n     */\n    this.ctx = ctx;\n    this.masterGain = new GainController(this.ctx, ctx.destination);\n    /**\n     * Instance of {@link SceneReader}\n     * @var {(CustomReaderInstance|Object.<module:bogJS~SceneReader>)}\n     */\n    this.reader = reader || new SceneReader();\n\n    this._mediaElement = mediaElement;\n    this._mediaElementTracks = audiobed_tracks;\n    this._channorder_root = channelorder_root;\n\n    /**\n     * Instance of {@link module:irtPlayer~IRTPlayer|IRTPlayer}\n     * @var {Object.<module:irtPlayer~IRTPlayer>}\n     */\n    this._clock = new WAAClock(this.ctx);\n    this._evts = {};\n    this._timer_evt = false;\n    this._audioURLs = {};\n    this._currentKeyframeIndex = 0;\n    this._kfMapping = {};\n    this._last_kfMapping = {};\n\n    this._audiobedTracks = {};\n    this._groupObjURLs = {};\n    this._singleObjURLs = {};\n    this._audiobed = false;\n    this._groupObjPlayers = {};\n    this._singleObjAudios = {};\n    this._kf_canplay = {};\n\n    /**\n     * Array of all {@link module:bogJS~ObjectController|ObjectController} instances that are controlled\n     * by the {@link module:bogJS~ObjectManager|ObjectManager}\n     * @var {module:bogJS~ObjectController[]}\n     */\n    this.objects = {};\n    this._audioInstances = {};\n    this._panningType = \"equalpower\";\n\n    /**\n     * If set to true, the ObjectManager will ignore keyframe updates!\n     * @var {boolean}\n     * @default false\n     */\n    this.interactive = false;\n    this.playing = false;\n\n    this._listenerOrientation = [0, 0, -1];\n    this.setListenerOrientation(0, 0, -1);\n\n    $(this.reader).on('scene_loaded', function(e, keyframes, audioURLs, sceneInfo, groupObjects, singleObjects, audiobeds, interactiveInfo){\n        console.debug('Scene data loaded!');\n\n        /**\n         * 'Dictionary' containing keyframes + commands triplets per keyframe.\n         * @abstract\n         * @var {module:bogJS~keyframes}\n         */\n        this._keyframes = keyframes;\n\n        /**\n         * 'Dictionary' containing mapping for objects and URLs.\n         * @abstract\n         * @var {module:bogJS~audioURLs}\n         */\n        this._audioURLs = audioURLs;\n\n        /**\n         * 'Dictionary' containing additional scene info\n         * @abstract\n         * @var {module:bogJS~sceneInfo}\n         */\n        this._sceneInfo = sceneInfo;\n        /**\n         * 'Dictionary' containing interactive info\n         * @abstract\n         * @var {module:bogJS~interactiveInfo}\n         */\n        this.interactiveInfo = interactiveInfo;\n        this.object_count = sceneInfo.object_count || 0;\n        this.roomDimensions = sceneInfo.room_dimensions || [10, 10, 3];\n        this._listenerPosition = sceneInfo.listener_position || [0, 0, 0];\n\n        /**\n         * 'Dictionary' containing mapping for objects and audiobed tracks\n         * @abstract\n         * @var {module:bogJS~audiobeds}\n         */\n        this._audiobedTracks = audiobeds;\n\n        /**\n         * 'Dictionary' containing info to identify grouped objects\n         * @abstract\n         * @var {module:bogJS~groupObjects}\n         */\n        this._groupObjURLs = groupObjects;\n\n        /**\n         * 'Dictionary' containing info to identify single objects\n         * @abstract\n         * @var {module:bogJS~singleObjects}\n         */\n        this._singleObjURLs = singleObjects;\n\n        this.init();\n    }.bind(this));\n    this.reader.load(url);\n};\n\nObjectManager.prototype = {\n\n    /**\n     * Creates [AudioData]{@link module:irtPlayer~AudioData} and\n     * [ObjectController]{@link module:bogJS~ObjectController} instances and\n     * adds the AudioData instances to the {@link module:bogJS~ObjectManager#player}\n     */\n    init: function(){\n        if (typeof this._mediaElement !== 'undefined'){\n            this._audiobed = new MediaElementController(this.ctx, this._mediaElement, this._mediaElementTracks);\n        } else if (this._sceneInfo.audiobed_url){\n            var a = document.createElement(\"audio\");\n            var src = this._sceneInfo.audiobed_url;\n            if (/\\.[0-9a-z]{3,4}$/i.exec(src) === null){  // if no file extension is stated\n                if (a.canPlayType('audio/ogg codecs=opus')) {\n                    a.type= 'audio/ogg codecs=opus';\n                    src = src + '.opus';\n                } else {\n                    a.type = 'audio/mp4';\n                    src = src + '.mp4';\n                }\n            }\n            a.src = src;\n            this._mediaElementTracks = parseInt(this._sceneInfo.audiobed_tracks);\n            this._audiobed = new MediaElementController(this.ctx, a, this._mediaElementTracks);\n        }\n        if (this._audiobed !== false){\n            // If there is an audiobed, we can trigger the om_ready event even\n            // though other keyframe assets are not yet ready. We need to trigger\n            // the event here in case NO other assets are used.\n            // This is for sure not really a sophisticated way to solve this but it\n            // should work. In the worst case, the playback will pause again if\n            // the assets are not yet loaded and decoded.\n            $(this._audiobed).on('audio_loaded', function(){\n                console.debug(\"Audiobed loaded, detect channel order..\");\n                var url = \"\";\n                if (this._audiobed._mediaElement.src !== \"\"){\n                    url = this._audiobed._mediaElement.src;\n                } else if (this._audiobed._mediaElement.currentSrc !== \"\") {\n                    url = this._audiobed._mediaElement.currentSrc;\n                } else {\n                    console.error(\"The src of the audiobed couldn't be detected!\");\n                }\n                var re = /\\.[0-9a-z]{3,4}$/i;  // strips the file extension (must be 3 or 4 characters)\n                var container = re.exec(url)[0];\n                container = container.split('.').join(\"\"); // removes dot from the string\n                this._chOrderTest = new ChannelOrderTest(container,\n                                                     this._mediaElementTracks,\n                                                     this.ctx,\n                                                     this._channorder_root);\n                $(document).triggerHandler('om_ready');\n                console.debug('Audiobed ready for playback');\n                //var chOrder = this._chOrderTest.testChs();\n            }.bind(this));\n\n            $(this._audiobed).on('audio_ended', function(){\n                $(document).triggerHandler('om_ended');\n                om.stop();\n            }.bind(this));\n\n            $(document).on('order_ready', function(e, order){\n                console.debug('Got channel order: ' + order);\n                this._chOrder = order;\n                // firstly, disconnect any connections to other nodes to avoid\n                // confusions and strange behaviours..\n                for (var i = 0; i < order.length; i++){\n                    this.objects[\"Bed\"+order[i]].audio.disconnect();\n                }\n                // now assign correct gainController to corresponding\n                // pannerNode\n                for (var i = 0; i < order.length; i++){\n                    console.debug(\"Reconnecting GainController \" + i + \" with Bed \" + order[i]);\n                    this.objects[\"Bed\"+order[i]].setAudio(this._audiobed.gainController[i]);\n                }\n            }.bind(this));\n\n        }\n\n        for (var obj in this._audiobedTracks){\n            var trackNr = parseInt(this._audiobedTracks[obj].split(\"_\")[1]);\n            this.objects[obj] = new ObjectController(this.ctx,\n                                                     this._audiobed.gainController[trackNr],\n                                                     this.masterGain.gainNode);\n            this.objects[obj].audio._id = obj;\n            this.objects[obj].panner._id = obj;\n        }\n\n        for (var kf in this._groupObjURLs){\n            this._groupObjPlayers[kf] = {};\n            this._kf_canplay[kf] = {};\n            for (var group in this._groupObjURLs[kf]){\n                this._kf_canplay[kf][group] = false;\n                var player = new IRTPlayer(this.ctx);\n                $(player).on('player_ready', this._loadedStateDelegate(kf, group));\n                for (var idx in this._groupObjURLs[kf][group]){\n                    var obj = this._groupObjURLs[kf][group][idx];\n                    var url = this._audioURLs[obj];\n                    var audioInstance = new AudioData(this.ctx, url);\n                    audioInstance.load();\n                    audioInstance.setLoopState(false);\n                    this.objects[obj] = new ObjectController(this.ctx,\n                                                             audioInstance,\n                                                             this.masterGain.gainNode);\n                    player.addAudioData(audioInstance);\n                    this._groupObjPlayers[kf][group] = player;\n                }\n            }\n        }\n\n        for (var kf in this._singleObjURLs){\n            this._singleObjAudios[kf] = {};\n            if (!this._kf_canplay[kf]){\n                this._kf_canplay[kf] = {};\n            }\n            for (var idx in this._singleObjURLs[kf]){\n                var obj = this._singleObjURLs[kf][idx];\n                var url = this._audioURLs[obj];\n                this._kf_canplay[kf][obj] = false;\n                var audioInstance = new AudioData(this.ctx, url);\n                $(audioInstance).on(\"audio_loaded\", this._loadedStateDelegate(kf, obj));\n                audioInstance.load();\n                audioInstance.setLoopState(false);\n                this.objects[obj] = new ObjectController(this.ctx,\n                                                         audioInstance,\n                                                         this.masterGain.gainNode);\n                this._singleObjAudios[kf][obj] = audioInstance;\n            }\n        }\n        this.setPanningType(this._panningType);\n        $(document).triggerHandler('om_initialized');\n        console.debug('Scene sucessfully initialized!');\n        if (this.interactiveInfo.switchGroups){\n            for (var g of Object.keys(this.interactiveInfo.switchGroups)){\n                this._initSwitchGroup(g);\n            }\n        }\n        //this.start();\n    },\n\n    /**\n     * Starts playback and rendering of audio scene\n     */\n    start: function(){\n        if ((this._checkReadyStart() === true) && (this.playing === false)) {\n            this._clock.start();\n            this._startTime = this.ctx.currentTime;\n            this._processCurrentKeyframes();\n            if (this._audiobed !== false){\n                this._audiobed.play();\n            }\n            var that = this;\n            if (!this._timer_evt){\n                this._timer_evt = this._clock.setTimeout(function(){\n                    console.debug(that.ctx.currentTime);\n                }, 1).repeat(1);\n            }\n            this.playing = true;\n            return true;\n        } else {\n            console.info(\"Audio signals not yet ready for playing.\");\n            return false;\n        }\n    },\n\n    /**\n     * Pauses playback\n     */\n    pause: function(){\n        this.ctx.suspend();\n        if (this._audiobed !== false){\n            this._audiobed.pause();\n        }\n        this.playing = false;\n    },\n\n    /**\n     * Resumes playback of all objects if paused.\n     *\n     */\n    resume: function(){\n        this.ctx.resume();\n        if (this._audiobed !== false){\n            this._audiobed.play();\n        }\n        this.playing = true;\n    },\n\n    /**\n     * togglePause\n     *\n     */\n    togglePause: function(){\n        if(this.ctx.state === 'running') {\n            this.pause();\n        }\n        else if(this.ctx.state === 'suspended') {\n            this.resume();\n        }\n    },\n\n    /**\n     * Stops playback and internal clock\n     */\n    stop: function(){\n        this._clock.stop();\n        if (this._audiobed !== false){\n            this._audiobed.stop();\n        }\n        for (var kf in this._groupObjPlayers){\n            for (var group in this._groupObjPlayers[kf]){\n                this._groupObjPlayers[kf][group].stop();\n            }\n        }\n        for (var kf in this._singleObjAudios){\n            for (var idx in this._singleObjAudios[kf]){\n                this._singleObjAudios[kf][idx].stop();\n            }\n        }\n        this.playing = false;\n    },\n\n    /**\n     * Will change the playback position of all single, group and audiobed\n     * signals. Further, the closes keyframe ahead of the passed time will be\n     * activated.\n     *\n     * @param {float} time - Desired playback position\n     */\n    setTime: function(time, set_audiobed_time=true){\n        // activate closest keyframe before time to avoid\n        // missing / \"forgetting\" object commands..\n        var times = Object.keys(this._keyframes);\n\n        // works even in case the keys are strings\n        var closest_kf = _.min(times); //Get the lowest numberin case it match nothing.\n        for(var i = 0; i < times.length; i++){\n            if ((times[i] <= time) && (times[i] > closest_kf)){\n                closest_kf = times[i];\n            }\n        }\n        this._handleKeyframe(closest_kf);\n\n        for (var key in this._evts){\n            var evt = this._evts[key];\n            var evt_time = parseFloat(key);\n            var newTime = evt_time - time + this.ctx.currentTime;\n            //console.debug(\"Evt \" + key + \" rescheduled from \" + evt.deadline + \" to \" + newTime);\n            evt.schedule(newTime);\n        }\n\n        // set single and grouped audio signals to the passed position and\n        // check if passed time > duration of the single and grouped audio\n        // signals:\n        var now = this.ctx.currentTime - this._startTime;\n        for (var kf in this._singleObjAudios){\n            var audioStartPos = parseFloat(kf);\n            for (var idx in this._singleObjAudios[kf]){\n                var duration = this._singleObjAudios[kf][idx].duration;\n                var audioNewPos = time - audioStartPos;\n                // negative time values shall stop the signal.\n                if (audioNewPos <= 0){\n                    this._singleObjAudios[kf][idx].stop();\n                } else {\n                    // should stop audio if audioNewPos > duration\n                    this._singleObjAudios[kf][idx].setTime(audioNewPos);\n                    console.debug(\"Set audio \" + idx + \" to position \" + audioNewPos);\n                }\n            }\n        }\n        for (var kf in this._groupObjPlayers){\n            var audioStartPos = parseFloat(kf);\n            for (var group in this._groupObjPlayers[kf]){\n                var duration = this._groupObjPlayers[kf][group].duration;\n                var audioNewPos = time - audioStartPos;\n                // negative time values shall stop the signal.\n                if (audioNewPos <= 0){\n                    this._groupObjPlayers[kf][group].stop();\n                } else {\n                    // should stop audio if audioNewPos > duration\n                    this._groupObjPlayers[kf][group].setTime(audioNewPos);\n                    console.debug(\"Set group \" + group + \" to position \" + audioNewPos);\n                }\n            }\n        }\n        if ((this._audiobed !== false) && (set_audiobed_time)){\n            this._audiobed.setTime(time);\n        }\n    },\n\n    /**\n     * Toggle panning type between Headphones (binaural) and Stereo rendering\n     */\n    togglePanningType: function(){\n        if (this._panningType === \"HRTF\"){\n            this.setPanningType(\"equalpower\");\n            this._panningType = \"equalpower\";\n        } else if (this._panningType === \"equalpower\"){\n            this.setPanningType(\"HRTF\");\n            this._panningType = \"HRTF\";\n        }\n    },\n\n    /**\n     * @param {(\"HRTF\"|\"equalpower\")} type - Panning type for all\n     * objects\n     */\n    setPanningType: function(type){\n        for (var key in this.objects){\n            this.objects[key].setPanningType(type);\n        }\n        this._panningType = type;\n    },\n\n    /**\n     * @returns {(\"HRTF\"|\"equalpower\")} panningType\n     */\n    getPanningType: function(){\n        return this._panningType;\n    },\n\n    /**\n     * Sets listener orientation. Coordinate usage as intended by the Web\n     * Audio API. See also {@link https://webaudio.github.io/web-audio-api/#the-audiolistener-interface}\n     * NOTE: This function currently takes only the head rotation but not the\n     * tilt into account.\n     *\n     * @param x\n     * @param y\n     * @param z\n     */\n    setListenerOrientation: function(x, y, z){\n        this._listenerOrientation = [x, y, z];\n        this.ctx.listener.setOrientation(x, y, z, 0, 1, 0);\n    },\n\n    /**\n     * getListenerOrientation\n     * @returns listenerOrientation\n     */\n    getListenerOrientation: function(){\n        return this._listenerOrientation;\n    },\n\n    /**\n     * setListenerPosition\n     * Coordinate usage as intended by the Web\n     * Audio API. See also {@link https://webaudio.github.io/web-audio-api/#the-audiolistener-interface}\n     * @param x\n     * @param y\n     * @param z\n     */\n    setListenerPosition: function(x, y, z){\n        this._listenerPosition = [x, y, z];\n        this.ctx.listener.setPosition(x, y, 0);\n    },\n\n    /**\n     * getListenerPosition\n     * @returns listenerPosition\n     */\n    getListenerPosition: function(){\n        return this._listenerPosition;\n    },\n\n    _handleKeyframe: function(key){\n        console.debug(\"Activating keyframe: \" + key);\n        var keyframe = this._keyframes[key];\n        //this._kfMapping = {};\n        if (this.interactive === false){\n            for (var i = 0; i < keyframe.length; i++){\n                var triplet = keyframe[i];\n                var obj = triplet.obj;\n                var cmd = triplet.cmd;\n                var params = triplet.params;\n                if (cmd === \"position\"){\n                    this.objects[obj].setPosition(params);\n                    /**\n                     * Will be fired if object from list gets new Position as per\n                     * the scene data\n                     * @event module:bogJS~ObjectManager#om_newPosition\n                     * @property {string} obj - Name of object\n                     * @property {float[]} pos - New position values as array [x, y, z]\n                     */\n                    $(this).triggerHandler('om_newPosition', [obj, params]);\n                }\n                else if (cmd === \"gain\"){\n                    this.objects[obj].setGain(params);\n                    /**\n                     * Will be fired if object from list gets new Gain\n                     * value as per scene data / {@link module:bogJS~ObjectManager#_keyframes}\n                     * @event module:bogJS~ObjectManager#om_newGain\n                     * @property {string} obj - Name of object\n                     * @property {number} gain - New gain value\n                     */\n                    $(this).triggerHandler('om_newGain', [obj, params]);\n                }\n                else if (cmd === \"track_mapping\"){\n                    var url = params;\n                    if (url in this._kfMapping === false){\n                        this._kfMapping[url] = obj;\n                    }\n                    else if ((url in this._kfMapping === true) && (this._kfMapping[url] !== obj)){\n                        var objs = [];\n                        var alreadyThere = [this._kfMapping[url]];\n                        this._kfMapping[url] = objs.concat.apply(obj, alreadyThere);\n                    }\n                }\n                else if (cmd === \"is_present\"){\n                    var state;\n                    if (params === 0) {\n                        state = false;\n                    } else if (params === 1) {\n                        state = true;\n                    } else {\n                        state = params;\n                    }\n                    // Removing as it was never really used and conflicts with switchGroups??\n                    this.objects[obj].setStatus(state);\n                    /**\n                     * Will be fired if object from list has new State\n                     * @event module:bogJS~ObjectManager#om_isActive\n                     * @property {string} obj - Name of object\n                     * @property {boolean} bool - Bool value if active or not\n                     */\n                    $(this).triggerHandler('om_isActive', [obj, state]);\n                }\n            }\n        }\n        this._handleKeyframeAssets(key);\n        //this._handleKeyframeMappings();\n    },\n\n    _handleKeyframeAssets: function(kf){\n        //this._kf_canplay = {};\n        if (kf in this._groupObjPlayers){\n            for (var group in this._groupObjPlayers[kf]){\n                var tmpGrp = this._groupObjPlayers[kf][group]; // TODO: does this cause additional delay?\n                if (tmpGrp.canplay === false){\n                    $(tmpGrp).on(\"audio_loaded\", this._loadedStateDelegate(kf, group));\n                }\n            }\n        }\n        if (kf in this._singleObjAudios){\n            for (var obj in this._singleObjAudios[kf]){\n                var tmpAudio = this._singleObjAudios[kf][obj]; // TODO: does this cause additional delay?\n                if (tmpAudio.canplay === false){\n                    $(tmpAudio).on(\"audio_loaded\", this._loadedStateDelegate(kf, obj));\n                }\n            }\n        }\n\n        // now check if all assets are ready for playing:\n        for (var el in this._kf_canplay[kf]){\n            console.debug(el);\n            if (this._kf_canplay[kf][el] === false){\n                console.debug(\"Pausing playback as not all assets are decoded yet.. \");\n                this.pause();\n                break;\n            }\n        }\n        // if we came to this point: start playback of all keyframe assets\n        this._startKeyframeAssets(kf);\n    },\n\n    _startKeyframeAssets: function(kf){\n        if (kf in this._groupObjPlayers){\n            for (var group in this._groupObjPlayers[kf]){\n                var tmpGrp = this._groupObjPlayers[kf][group]; // TODO: does this cause additional delay?\n                tmpGrp.play();\n            }\n        }\n        if (kf in this._singleObjAudios){\n            for (var obj in this._singleObjAudios[kf]){\n                var tmpAudio = this._singleObjAudios[kf][obj]; // TODO: does this cause additional delay?\n                tmpAudio.play();\n            }\n        }\n    },\n\n    _loadedStateDelegate: function(kf, obj){\n        return function(){\n            console.debug(\"Asset now ready: \" + obj);\n            this._kf_canplay[kf][obj] = true;\n            this._checkLoadedState(kf);\n        }.bind(this);\n    },\n\n    _checkLoadedState: function(kf){\n        console.debug(this._kf_canplay[kf]);\n        for (var obj in this._kf_canplay[kf]) {\n            if (this._kf_canplay[kf][obj] !== true){\n                console.debug(\"We still need to wait for decoding of asset(s)\");\n                return;  // break loop and return in case any of the objects is not yet ready\n            }\n        }\n\n        var first_kf = _.min(Object.keys(this._keyframes)); //Get the first keyframe\n        if (kf === first_kf){\n            $(document).triggerHandler('om_ready');\n        }\n        if (this.ctx.state === \"suspended\"){\n            console.debug(\"Resuming playback - all assets are decoded now\");\n            this.resume();\n        }\n    },\n\n    _handleKeyframeMappings: function(){\n        if (JSON.stringify(this._last_kfMapping) !== JSON.stringify(this._kfMapping)){\n            console.info(\"Track mapping has changed\" + JSON.stringify(this._kfMapping));\n            // Firstly disconnect everything to make sure that no old\n            // mappings stay connected\n            // That means that changes have to be made explicitely and\n            // not implicitely!\n            for (var key in this._audioInstances){\n                this._audioInstances[key].disconnect();\n            }\n            /*\n            TODO: Irgendwie herausfinden, was sich zum aktuellen Mapping geändert hat.\n            Dann dementsprechend connecten /disconnecten.\n            */\n\n            // And now connect all the mappings as per the keyframe\n            for (var key in this._kfMapping){\n                var pannerObjects = [];\n                var objs = this._kfMapping[key];\n                if (typeof objs === \"string\"){    // == attribute\n                    pannerObjects = this.objects[objs].highpass;\n                }\n                else if (typeof objs === \"object\"){   // == array\n                    for (var i = 0; i < objs.length; i++){\n                        console.trace(\"Adding \" + objs[i] + \" to the pannerObject array\");\n                        pannerObjects.push(this.objects[objs[i]].highpass);\n                    }\n                }\n                this._audioInstances[key].reconnect(pannerObjects);\n                console.debug(\"Reconnecting \" + key + \" with \" + objs);\n\n                /**\n                 * Will be fired if track mapping for object from list changes\n                 * @event module:bogJS~ObjectManager#om_newTrackMapping\n                 * @property {string} obj - Name of object\n                 * @property {string[]} objs - Array of to be connected objects\n                 */\n                $(this).triggerHandler('om_newTrackMapping', [key, objs]);\n            }\n        }\n        this._last_kfMapping = JSON.parse(JSON.stringify(this._kfMapping));  // making a \"copy\" and not a reference\n    },\n\n    _processCurrentKeyframes: function(){\n        for (var key in this._keyframes){\n            console.debug(\"Processing keyframe \" + key);\n            var relTime = parseFloat(this.ctx.currentTime - this._startTime + parseFloat(key));\n            this._evts[key] = this._clock.setTimeout(this._buildKeyframeCallback(key, relTime),relTime);\n        }\n    },\n\n    _buildKeyframeCallback: function(key, relTime){\n        var that = this;\n        return function(){\n            that._handleKeyframe(key);\n            that._currentKeyframeIndex = parseFloat(key);\n            console.debug('Keyframe ' + key + ' reached at context time: ' + relTime);\n        };\n    },\n\n    /*\n    update: function(){\n        console.trace(\"Updating scene..\")\n        // neue metadaten lesen\n        // aktuelle Zeit vom AudioContext holen\n        // Objekt-Eigenschaften entsprechend ändern\n        // this.readMetadata();\n        // this.processCurrentKeyframes();\n    },\n    */\n\n    _checkReadyStart: function(){\n        if (this._audiobed !== false){\n            return this._audiobed.canplay;\n        } else {\n            return true;\n        }\n    },\n\n\n    /**\n     * Sets RollOffFactor for all objects via\n     * {@link module:bogJS~ObjectController#setRollOffFactor}\n     * @param factor\n     */\n    setRollOffFactor: function(factor){\n        for (var key in this.objects){\n            this.objects[key].setRollOffFactor(factor);\n        }\n        this._triggerChange();\n    },\n\n    /**\n     * Sets DistanceModel for all objects via\n     * {@link module:bogJS~ObjectController#setDistanceModel}\n     * @param model\n     */\n    setDistanceModel: function(model){\n        for (var key in this.objects){\n            this.objects[key].setDistanceModel(model);\n        }\n        this._triggerChange();\n    },\n\n    /**\n     * Sets RefDistance for all objects via\n     * {@link module:bogJS~ObjectController#setRefDistance}\n     * @param refDistance\n     */\n    setRefDistance: function(refDistance){\n        for (var key in this.objects){\n            this.objects[key].setRefDistance(refDistance);\n        }\n        this._triggerChange();\n    },\n\n    /**\n     * Sets MaxDistance for all objects via\n     * {@link module:bogJS~ObjectController#setMaxDistance}\n     * @param maxDistance\n     */\n    setMaxDistance: function(maxDistance){\n        for (var key in this.objects){\n            this.objects[key].setMaxDistance(maxDistance);\n        }\n        this._triggerChange();\n    },\n\n    setHighpassFreq: function(freq){\n        for (var key in this.objects){\n            this.objects[key].setHighpassFreq(freq);\n        }\n    },\n\n    _initSwitchGroup: function(groupName){\n        var item = this.interactiveInfo.switchGroups[groupName].default;\n        this.switchGroup(groupName, item);\n    },\n\n    switchGroup: function(groupName, item){\n        var objects = Object.values(this.interactiveInfo.switchGroups[groupName].items);\n        for (var obj of objects){\n            this.objects[obj].setStatus(false);\n        }\n        var active_obj = this.interactiveInfo.switchGroups[groupName].items[item];\n        console.info(\"SwitchGroup \" + groupName + \" enable \" + active_obj);\n        this.objects[active_obj].setStatus(true);\n    },\n\n    setInteractiveGain: function(groupName, dBValue){\n        var minLogGain = parseFloat(this.interactiveInfo.gain[groupName].range[0]);\n        var maxLogGain = parseFloat(this.interactiveInfo.gain[groupName].range[1]);\n        var gainValue;\n        if (parseFloat(dBValue) > maxLogGain) {\n            gainValue = maxLogGain;\n        } else if(parseFloat(dBValue) < minLogGain) {\n            gainValue = minLogGain;\n        } else {\n            gainValue = dBValue;\n        }\n        // Crossfading\n        //var range = Math.abs(minLogGain) * 0.5 + maxLogGain * 0.5;\n        var gainGroup = Math.pow(10, (gainValue * 0.5) / 20);\n        var gainOther = Math.pow(10, ((-1 * gainValue) * 0.5) / 20);\n        var groupObjects = this.interactiveInfo.gain[groupName].objects;\n        for (var obj of groupObjects){\n            this.objects[obj].setInteractiveGain(gainGroup);\n        }\n        // find other objects\n        var otherObjects = _.difference(Object.keys(this.objects), groupObjects);\n        for (var oth of otherObjects){\n            this.objects[oth].setInteractiveGain(gainOther);\n        }\n        console.debug(\"Set group \" + groupName + \" gain to \" + gainGroup + \" and other objects to \" + gainOther);\n    },\n\n    /**\n     * @private\n     * As Chrome (FF works) does not automatically use the new paramters of\n     * distanceModle, refDistance and maxDistance, we need to trigger a change\n     * by ourself. The additional value of 0.000001 for x seems to be the\n     * threshold for Chrome to change the rendering.\n     */\n    _triggerChange: function(){\n        var pos = this.getListenerPosition();\n        this.setListenerPosition(pos[0] + 0.000001, pos[1], pos[2]);\n        this.setListenerPosition(pos[0], pos[1], pos[2]);\n    }\n};\n\n\n\nmodule.exports = ObjectManager;\n",
    "/**\n * @file scene_reader.js\n * @author Michael Weitnauer [weitnauer@irt.de]\n */\n\n/**\n * @module bogJS\n */\n\n/**\n * @callback loaded_callback\n */\n\n\n/**\n * Represents SceneReader class. Will load and parse scene data from URL for the\n * {@link module:bogJS~ObjectManager|ObjectManager} instance\n *\n * @constructor\n * @abstract\n *\n * @param {loaded_callback} [loaded_callback=undefined] - Callback that will be executed\n * if scene data is loaded and parsed.\n * @fires module:bogJS~SceneReader#scene_loaded\n *\n */\nvar SceneReader = function(loaded_callback){\n    //this.load(url);\n    this.callback = loaded_callback || undefined;\n}\n\nSceneReader.prototype = {\n\n    /**\n     * Executes XHR to load and parse the scene data from the passed URL\n     *\n     * @param {string} url - URL to scene data target\n     * @fires module:bogJS~SceneReader#scene_loaded\n     */\n    load: function(url){\n        // we need to do this as within the anonymous success function of the ajax call,\n        // 'this' will refer to the window object and NOT to the SceneReader instance!\n        var that = this;\n        $.ajax({\n            type: \"GET\",\n\t        url: url,\n    \t    dataType: \"text\",\n\t        success: function(text) {\n                that.parse(text);\n                if (that.callback !== undefined){\n                    that.callback.call();\n                }\n\t        }\n        });\n    },\n\n    parse: function(rawText) {\n        var commands = this._tokenize(rawText);\n        var data = this._parseSpatdif(commands);\n        var keyframes = data[0];\n        var audioURLs = data[1];\n        var sceneInfo = data[2];\n        var groupObjects = data[3];\n        var audiobeds = data[4];\n        var extraObjects = data[5];\n        var interactiveInfo = data[6];\n        var singleObjects = {};\n        for (var kf in extraObjects){\n            for (var group in groupObjects[kf]){\n                for (var el in groupObjects[kf][group]){\n                    var obj = groupObjects[kf][group][el];\n                    var idx = extraObjects[kf].indexOf(obj);\n                    console.debug('Checking for double entry for object ' + obj);\n                    if (idx > -1) {\n                        extraObjects[kf].splice(idx, 1);\n                        console.debug('Found group object ' + obj + ' also as single objects entry. Removing if from the list.');\n                    }\n                }\n            }\n        }\n        singleObjects = extraObjects;\n\n        /**\n         * Will be fired if scene data is loaded and parsed\n         * @event module:bogJS~SceneReader#scene_loaded\n         * @abstract\n         *\n         * @property {module:bogJS~keyframes} keyframes - 'Dictionary' with keyframes\n         * (Array with commands per detected keyframe in scene)\n         *\n         * @property {module:bogJS~audioURLs} audioURLs - 'Dictionary' with audioURLs\n         * per Object in Scene (to be used for mapping of objects to\n         * audio signals)\n         *\n         * @property {module:bogJS~sceneInfo} sceneInfo - 'Dictionary' with additional sceneInfo\n         * (Can contain 'name', 'object_count', 'listener_orientation',\n         * 'listener_position' and / or 'room_dimensions')\n         *\n         * @property {module:bogJS~groupObjects} groupObjects - 'Dictionary'\n         * containing info to identify grouped objects\n         *\n         * @property {module:bogJS~singleObjects} singleObjects - 'Dictionary'\n         * containing info to identify single objects\n         *\n         * @property {module:bogJS~audiobeds} audiobeds - 'Dictionary'\n         * containing objects and their \"track mapping\" info\n         *\n         * @property {module:bogJS~interactiveInfo} interactiveInfo - 'Dictionary'\n         * containing info for interactive objects and groups\n         */\n        $(this).triggerHandler('scene_loaded', [keyframes, audioURLs, sceneInfo, groupObjects, singleObjects, audiobeds, interactiveInfo])\n    },\n\n    _tokenize: function(d){\n        var lines = [];\n        var data = d.split('\\n');\n        for (var i = 0; i < data.length; i++){\n            if (data[i].indexOf(\"/spatdif\") === 0){   //String.prototype.startsWith() not yet widely supported\n                var l = {};\n                var line = data[i].split(' ');\n                var command = line[0].split('/');\n                l.cmd = command.slice(1, command.length);\n                l.params = line.slice(1, line.length);\n                if (l.params.length === 1){\n                    l.params = l.params[0];  // avoids having an array for a single value\n                }\n                lines[lines.length] = l;     // makes sure that we append the data at the end and won't skip indices\n            }\n        }\n        return lines;\n    },\n\n    _parseSpatdif: function(m){\n        var keyframes = {};\n        var audioURLs = {};\n        var sceneInfo = {};\n        var interactiveInfo = {};\n        interactiveInfo.switchGroups = {};\n        interactiveInfo.gain = {};\n        var groups = {};\n        var extraObjects = {};\n        var audiobeds = {};\n        var keyframe = null;\n        for (var i = 0; i < m.length; i++) {\n            if (m[i].cmd[0] === \"spatdif\"){  // darauf verzichten um die lesbarkeit des codes zu verbesern?\n                if (m[i].cmd[1] === \"meta\"){\n                    var meta = m[i];\n                    if (meta.cmd[3] === \"name\") {\n                        sceneInfo.name = meta.params;\n                    } else if (meta.cmd[2] === \"objects\") {\n                        sceneInfo.object_count = meta.params;\n                    } else if ((meta.cmd[2] === \"reference\") && (meta.cmd[3] === \"orientation\")){\n                        sceneInfo.listener_orientation = this._parseFloatArray(meta.params);\n                    } else if ((meta.cmd[2] === \"room\") && (meta.cmd[3] === \"origin\")){\n                        sceneInfo.listener_position = this._parseFloatArray(meta.params);\n                    } else if ((meta.cmd[2] === \"room\") && (meta.cmd[3] === \"dimension\")){\n                        sceneInfo.room_dimensions = this._parseFloatArray(meta.params);\n                    } else if ((meta.cmd[2] === \"audiobed\") && (meta.cmd[3] === \"url\")) {\n                        sceneInfo.audiobed_url = meta.params;\n                    } else if ((meta.cmd[2] === \"audiobed\") && (meta.cmd[3] === \"tracks\")) {\n                        sceneInfo.audiobed_tracks = meta.params;\n                    } else if (meta.cmd[2] === \"interactive\") {\n                        if (meta.cmd[3] === \"switchGroup\") {\n                            if (meta.cmd[4] === \"label\") {\n                                var label = meta.params[0];\n                                interactiveInfo.switchGroups[label] = {};\n                                interactiveInfo.switchGroups[label].default = meta.params[1];\n                                interactiveInfo.switchGroups[label].items = {};\n                            } else {\n                                var item_label = meta.params[0];\n                                interactiveInfo.switchGroups[label].items[item_label] = meta.params[1];\n                            }\n                        } else if (meta.cmd[3] === \"gain\"){\n                            if (meta.cmd[4] === \"label\") {\n                                var label = meta.params[0];\n                                interactiveInfo.gain[label] = {};\n                                interactiveInfo.gain[label].range = [meta.params[1], meta.params[2]];\n                                interactiveInfo.gain[label].objects = [];\n                            } else {\n                                interactiveInfo.gain[label].objects.push(meta.params);\n                            }\n                        }\n                    }\n\n                } else if (m[i].cmd[1] === \"time\") {\n                    keyframe = m[i].params;\n                    keyframes[keyframe] = [];\n                } else if ((m[i].cmd[1] === \"source\") && (keyframe !== null)) {\n                    // ignore the commands until the first keyframe appears\n                    var obj = m[i].cmd[2];\n                    var cmd = m[i].cmd[3];\n                    var params = m[i].params;\n\n                    if (cmd === \"track_mapping\"){\n                        if ((params.startsWith(\"bed_\")) && (obj in audiobeds ===  false)){\n                            audiobeds[obj] = params;\n                        } else if ((params.startsWith(\"bed_\") === false) && (obj in audioURLs === false)) {\n                            audioURLs[obj] = params;\n                            if (keyframe in extraObjects ===  false){\n                                extraObjects[keyframe] = [];\n                            }\n                            extraObjects[keyframe].push(obj);\n                        }\n                    }\n\n                    if (cmd === \"group\") {\n                        if (keyframe in groups === false){\n                            groups[keyframe] = {};\n                        }\n                        if (params in groups[keyframe] === false){\n                            groups[keyframe][params] = [];\n                        }\n                        if (groups[keyframe][params].indexOf(obj) === -1){\n                            groups[keyframe][params].push(obj)  // == groups.keyframe.params.push(obj)\n                            console.debug(\"Adding \" + obj + \" to group \" + params + \" at keyframe \" + keyframe);\n                        }\n                    }\n                    var triplet = {};\n                    triplet.obj = obj;\n                    if (cmd === \"active\"){\n                        cmd = \"is_present\";\n                    }\n                    triplet.cmd = cmd;\n                    triplet.params = m[i].params;\n                    keyframes[keyframe].push(triplet);\n                }\n            }\n        }\n        return [keyframes, audioURLs, sceneInfo, groups, audiobeds, extraObjects, interactiveInfo];\n    },\n\n    _parseFloatArray: function(array){\n        var tmp_array = [];\n        for (var n in array){\n            var number = parseFloat(array[n]);\n            if (!isNaN(number)){\n                tmp_array[tmp_array.length] = number;\n            }\n        }\n        return tmp_array;\n    }\n\n}\n\n\nmodule.exports = SceneReader;\n"
  ]
}