{
  "version": 3,
  "sources": [
    "../node_modules/browser-pack/_prelude.js",
    "../index.js",
    "../node_modules/process/browser.js",
    "../node_modules/underscore/underscore.js",
    "../node_modules/waaclock/index.js",
    "../node_modules/waaclock/lib/WAAClock.js",
    "../src/channelorder_test.js",
    "../src/gain_controller.js",
    "../src/html5_player/core.js",
    "../src/media_controller.js",
    "../src/object.js",
    "../src/object_manager.js",
    "../src/scene_reader.js"
  ],
  "names": [
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "require",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "1",
    "module",
    "global",
    "__BROWSERIFY_META_DATA__GIT_VERSION",
    "__BROWSERIFY_META_DATA__CREATED_AT",
    "window",
    "ChannelOrderTest",
    "AudioData",
    "IRTPlayer",
    "GainController",
    "MediaElementController",
    "ObjectController",
    "ObjectManager",
    "SceneReader",
    "cachedSetTimeout",
    "cachedClearTimeout",
    "process",
    "defaultSetTimout",
    "defaultClearTimeout",
    "runTimeout",
    "setTimeout",
    "this",
    "runClearTimeout",
    "clearTimeout",
    "currentQueue",
    "queue",
    "draining",
    "queueIndex",
    "cleanUpNextTick",
    "concat",
    "drainQueue",
    "run",
    "Item",
    "fun",
    "array",
    "noop",
    "nextTick",
    "Array",
    "arguments",
    "push",
    "prototype",
    "apply",
    "title",
    "browser",
    "env",
    "argv",
    "version",
    "versions",
    "on",
    "addListener",
    "once",
    "off",
    "removeListener",
    "removeAllListeners",
    "emit",
    "prependListener",
    "prependOnceListener",
    "listeners",
    "binding",
    "cwd",
    "chdir",
    "umask",
    "3",
    "_",
    "Object",
    "Function",
    "slice",
    "toString",
    "c",
    "hasOwnProperty",
    "isArray",
    "keys",
    "bind",
    "p",
    "create",
    "h",
    "v",
    "_wrapped",
    "VERSION",
    "y",
    "d",
    "identity",
    "isFunction",
    "isObject",
    "matcher",
    "property",
    "iteratee",
    "g",
    "m",
    "b",
    "x",
    "Math",
    "pow",
    "j",
    "w",
    "each",
    "forEach",
    "map",
    "collect",
    "reduce",
    "foldl",
    "inject",
    "reduceRight",
    "foldr",
    "find",
    "detect",
    "findIndex",
    "findKey",
    "filter",
    "select",
    "reject",
    "negate",
    "every",
    "all",
    "some",
    "any",
    "contains",
    "includes",
    "include",
    "values",
    "indexOf",
    "invoke",
    "pluck",
    "where",
    "findWhere",
    "max",
    "min",
    "shuffle",
    "random",
    "sample",
    "sortBy",
    "value",
    "index",
    "criteria",
    "sort",
    "A",
    "groupBy",
    "has",
    "indexBy",
    "countBy",
    "toArray",
    "size",
    "partition",
    "first",
    "head",
    "take",
    "initial",
    "last",
    "rest",
    "tail",
    "drop",
    "compact",
    "O",
    "isArguments",
    "k",
    "F",
    "isNaN",
    "flatten",
    "without",
    "difference",
    "uniq",
    "unique",
    "isBoolean",
    "union",
    "intersection",
    "zip",
    "unzip",
    "object",
    "findLastIndex",
    "sortedIndex",
    "floor",
    "lastIndexOf",
    "range",
    "ceil",
    "S",
    "TypeError",
    "partial",
    "bindAll",
    "memoize",
    "cache",
    "delay",
    "defer",
    "throttle",
    "leading",
    "now",
    "trailing",
    "debounce",
    "wrap",
    "compose",
    "after",
    "before",
    "E",
    "propertyIsEnumerable",
    "M",
    "I",
    "constructor",
    "allKeys",
    "mapObject",
    "pairs",
    "invert",
    "functions",
    "methods",
    "extend",
    "extendOwn",
    "assign",
    "pick",
    "omit",
    "String",
    "defaults",
    "clone",
    "tap",
    "isMatch",
    "N",
    "pop",
    "isEqual",
    "isEmpty",
    "isString",
    "isElement",
    "nodeType",
    "Int8Array",
    "isFinite",
    "parseFloat",
    "isNumber",
    "isNull",
    "isUndefined",
    "noConflict",
    "constant",
    "propertyOf",
    "matches",
    "times",
    "Date",
    "getTime",
    "B",
    "&",
    "<",
    ">",
    "\"",
    "'",
    "`",
    "T",
    "R",
    "join",
    "RegExp",
    "test",
    "replace",
    "escape",
    "unescape",
    "result",
    "q",
    "uniqueId",
    "templateSettings",
    "evaluate",
    "interpolate",
    "K",
    "z",
    "\\",
    "\r",
    "\n",
    " ",
    " ",
    "D",
    "L",
    "template",
    "source",
    "variable",
    "chain",
    "_chain",
    "P",
    "mixin",
    "valueOf",
    "toJSON",
    "define",
    "amd",
    "4",
    "WAAClock",
    "./lib/WAAClock",
    "5",
    "isBrowser",
    "CLOCK_DEFAULTS",
    "toleranceLate",
    "toleranceEarly",
    "Event",
    "clock",
    "func",
    "_cleared",
    "_latestTime",
    "_earliestTime",
    "deadline",
    "repeatTime",
    "schedule",
    "clear",
    "_removeEvent",
    "repeat",
    "_hasEvent",
    "tolerance",
    "late",
    "early",
    "_refreshEarlyLateDates",
    "_insertEvent",
    "isRepeated",
    "context",
    "currentTime",
    "_execute",
    "timeStretch",
    "_started",
    "onexpired",
    "console",
    "warn",
    "tickMethod",
    "_events",
    "_createEvent",
    "_absTime",
    "callbackAtTime",
    "start",
    "_clockNode",
    "createScriptProcessor",
    "connect",
    "destination",
    "onaudioprocess",
    "_tick",
    "stop",
    "disconnect",
    "shift",
    "unshift",
    "splice",
    "_indexByTime",
    "_relTime",
    "AudioContext",
    "webkitAudioContext",
    "alert",
    "ctx",
    "_tracks",
    "parseInt",
    "_splitter",
    "createChannelSplitter",
    "analysers",
    "gainNode",
    "createGain",
    "gain",
    "createAnalyser",
    "fftSize",
    "_loadSound",
    "audio",
    "document",
    "createElement",
    "src",
    "loop",
    "load",
    "mediaElement",
    "createMediaElementSource",
    "play",
    "onended",
    "debug",
    "$",
    "then",
    "Promise",
    "testChs",
    "info",
    "triggerHandler",
    "pause",
    "resolve",
    "_getFreqData",
    "Float32Array",
    "frequencyBinCount",
    "getFloatFrequencyData",
    "playAudio",
    "_gain",
    "mute",
    "setGain",
    "unmute",
    "getGain",
    "reconnect",
    "setHighpassFreq",
    "canplay",
    "_checkExtension",
    "url",
    "_playing",
    "_looping",
    "_rangeStart",
    "_rangeEnd",
    "_startTime",
    "_startOffset",
    "_initBuffer",
    "createBufferSource",
    "buffer",
    "_buffer",
    "loopStart",
    "loopEnd",
    "_onendedHandler",
    "duration",
    "toggleLoop",
    "setLoopState",
    "setRangeStart",
    "setRangeEnd",
    "setTime",
    "_checkSupport",
    "exec",
    "error",
    "canPlayType",
    "XMLHttpRequest",
    "open",
    "responseType",
    "onload",
    "decodeAudioData",
    "response",
    "send",
    "loopingState",
    "signals",
    "playing",
    "init",
    "vol",
    "activeSignal",
    "_loaded_counter",
    "_ended_counter",
    "addURL",
    "addAudioData",
    "_addEventListener",
    "togglePlay",
    "_do",
    "muteOthers",
    "unmuteAll",
    "attenuateOthers",
    "_mediaElement",
    "_mediaSourceNode",
    "gainController",
    "onstalled",
    "suspend",
    "onplaying",
    "state",
    "resume",
    "oncanplaythrough",
    "setVolume",
    "volume",
    "getVolume",
    "muted",
    "panner",
    "createPanner",
    "panningType",
    "maxDistance",
    "setPanningType",
    "position",
    "_state",
    "stateNode",
    "interactiveGain",
    "setAudio",
    "setPosition",
    "getPosition",
    "setStatus",
    "setInteractiveGain",
    "_interactiveGain",
    "getStatus",
    "setValueAtTime",
    "linearRampToValueAtTime",
    "panningModel",
    "getPanningType",
    "setRollOffFactor",
    "rolloffFactor",
    "setDistanceModel",
    "distanceModel",
    "setRefDistance",
    "refDistance",
    "setMaxDistance",
    "highpass",
    "frequency",
    "masterGain",
    "reader",
    "_mediaElementTracks",
    "_channorder_root",
    "_clock",
    "_evts",
    "_timer_evt",
    "_audioURLs",
    "_currentKeyframeIndex",
    "_kfMapping",
    "_last_kfMapping",
    "_audiobedTracks",
    "_groupObjURLs",
    "_singleObjURLs",
    "_audiobed",
    "_groupObjPlayers",
    "_singleObjAudios",
    "_kf_canplay",
    "objects",
    "_audioInstances",
    "_panningType",
    "interactive",
    "_listenerOrientation",
    "setListenerOrientation",
    "_keyframes",
    "_sceneInfo",
    "interactiveInfo",
    "object_count",
    "roomDimensions",
    "room_dimensions",
    "_listenerPosition",
    "listener_position",
    "audiobed_url",
    "type",
    "audiobed_tracks",
    "currentSrc",
    "split",
    "_chOrderTest",
    "om",
    "_chOrder",
    "_id",
    "_loadedStateDelegate",
    "switchGroups",
    "Symbol",
    "iterator",
    "next",
    "done",
    "_initSwitchGroup",
    "return",
    "_checkReadyStart",
    "_processCurrentKeyframes",
    "togglePause",
    "_handleKeyframe",
    "togglePanningType",
    "listener",
    "setOrientation",
    "getListenerOrientation",
    "setListenerPosition",
    "getListenerPosition",
    "obj",
    "cmd",
    "params",
    "_handleKeyframeAssets",
    "_startKeyframeAssets",
    "_checkLoadedState",
    "_handleKeyframeMappings",
    "JSON",
    "stringify",
    "_typeof",
    "trace",
    "parse",
    "_buildKeyframeCallback",
    "_triggerChange",
    "default",
    "switchGroup",
    "items",
    "callback",
    "ajax",
    "dataType",
    "success",
    "_tokenize",
    "_parseSpatdif",
    "name",
    "listener_orientation",
    "_parseFloatArray",
    "startsWith"
  ],
  "mappings": "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",
  "file": "bogJS-latest.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\nglobal.__BROWSERIFY_META_DATA__GIT_VERSION = \"264b307 v0.4.3\";\nglobal.__BROWSERIFY_META_DATA__CREATED_AT = \"Tue Mar 26 2019 09:59:57 GMT+0100 (Mitteleuropäische Normalzeit)\";\n\n\n// making the objects globally available\nwindow.ChannelOrderTest = require('./src/channelorder_test');\nwindow.AudioData = require('./src/html5_player/core').AudioData;\nwindow.IRTPlayer = require('./src/html5_player/core').IRTPlayer;\nwindow.GainController = require('./src/gain_controller');\nwindow.MediaElementController = require('./src/media_controller');\nwindow.ObjectController = require('./src/object');\nwindow.ObjectManager = require('./src/object_manager');\nwindow.SceneReader = require('./src/scene_reader');\n//window.UIManager = require('./src/ui');\n",
    "var cachedSetTimeout,cachedClearTimeout,process=module.exports={};function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}function runTimeout(e){if(cachedSetTimeout===setTimeout)return setTimeout(e,0);if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout)return cachedSetTimeout=setTimeout,setTimeout(e,0);try{return cachedSetTimeout(e,0)}catch(t){try{return cachedSetTimeout.call(null,e,0)}catch(t){return cachedSetTimeout.call(this,e,0)}}}function runClearTimeout(e){if(cachedClearTimeout===clearTimeout)return clearTimeout(e);if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout)return cachedClearTimeout=clearTimeout,clearTimeout(e);try{return cachedClearTimeout(e)}catch(t){try{return cachedClearTimeout.call(null,e)}catch(t){return cachedClearTimeout.call(this,e)}}}!function(){try{cachedSetTimeout=\"function\"==typeof setTimeout?setTimeout:defaultSetTimout}catch(e){cachedSetTimeout=defaultSetTimout}try{cachedClearTimeout=\"function\"==typeof clearTimeout?clearTimeout:defaultClearTimeout}catch(e){cachedClearTimeout=defaultClearTimeout}}();var currentQueue,queue=[],draining=!1,queueIndex=-1;function cleanUpNextTick(){draining&&currentQueue&&(draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue())}function drainQueue(){if(!draining){var e=runTimeout(cleanUpNextTick);draining=!0;for(var t=queue.length;t;){for(currentQueue=queue,queue=[];++queueIndex<t;)currentQueue&&currentQueue[queueIndex].run();queueIndex=-1,t=queue.length}currentQueue=null,draining=!1,runClearTimeout(e)}}function Item(e,t){this.fun=e,this.array=t}function noop(){}process.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];queue.push(new Item(e,t)),1!==queue.length||draining||runTimeout(drainQueue)},Item.prototype.run=function(){this.fun.apply(null,this.array)},process.title=\"browser\",process.browser=!0,process.env={},process.argv=[],process.version=\"\",process.versions={},process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.prependListener=noop,process.prependOnceListener=noop,process.listeners=function(e){return[]},process.binding=function(e){throw new Error(\"process.binding is not supported\")},process.cwd=function(){return\"/\"},process.chdir=function(e){throw new Error(\"process.chdir is not supported\")},process.umask=function(){return 0};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJyb3dzZXIuanMiXSwibmFtZXMiOlsiY2FjaGVkU2V0VGltZW91dCIsImNhY2hlZENsZWFyVGltZW91dCIsInByb2Nlc3MiLCJtb2R1bGUiLCJleHBvcnRzIiwiZGVmYXVsdFNldFRpbW91dCIsIkVycm9yIiwiZGVmYXVsdENsZWFyVGltZW91dCIsInJ1blRpbWVvdXQiLCJmdW4iLCJzZXRUaW1lb3V0IiwiZSIsImNhbGwiLCJ0aGlzIiwicnVuQ2xlYXJUaW1lb3V0IiwibWFya2VyIiwiY2xlYXJUaW1lb3V0IiwiY3VycmVudFF1ZXVlIiwicXVldWUiLCJkcmFpbmluZyIsInF1ZXVlSW5kZXgiLCJjbGVhblVwTmV4dFRpY2siLCJsZW5ndGgiLCJjb25jYXQiLCJkcmFpblF1ZXVlIiwidGltZW91dCIsImxlbiIsInJ1biIsIkl0ZW0iLCJhcnJheSIsIm5vb3AiLCJuZXh0VGljayIsImFyZ3MiLCJBcnJheSIsImFyZ3VtZW50cyIsImkiLCJwdXNoIiwicHJvdG90eXBlIiwiYXBwbHkiLCJ0aXRsZSIsImJyb3dzZXIiLCJlbnYiLCJhcmd2IiwidmVyc2lvbiIsInZlcnNpb25zIiwib24iLCJhZGRMaXN0ZW5lciIsIm9uY2UiLCJvZmYiLCJyZW1vdmVMaXN0ZW5lciIsInJlbW92ZUFsbExpc3RlbmVycyIsImVtaXQiLCJwcmVwZW5kTGlzdGVuZXIiLCJwcmVwZW5kT25jZUxpc3RlbmVyIiwibGlzdGVuZXJzIiwibmFtZSIsImJpbmRpbmciLCJjd2QiLCJjaGRpciIsImRpciIsInVtYXNrIl0sIm1hcHBpbmdzIjoiQUFDQSxJQU9JQSxpQkFDQUMsbUJBUkFDLFFBQVVDLE9BQU9DLFFBQVUsR0FVL0IsU0FBU0MsbUJBQ0wsTUFBTSxJQUFJQyxNQUFNLG1DQUVwQixTQUFTQyxzQkFDTCxNQUFNLElBQUlELE1BQU0scUNBc0JwQixTQUFTRSxXQUFXQyxHQUNoQixHQUFJVCxtQkFBcUJVLFdBRXJCLE9BQU9BLFdBQVdELEVBQUssR0FHM0IsSUFBS1QsbUJBQXFCSyxt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",
    "(function(){var n=this,r=n._,t=Array.prototype,e=Object.prototype,u=Function.prototype,i=t.push,o=t.slice,a=e.toString,c=e.hasOwnProperty,f=Array.isArray,l=Object.keys,s=u.bind,p=Object.create,h=function(){},v=function(n){return n instanceof v?n:this instanceof v?void(this._wrapped=n):new v(n)};\"undefined\"!=typeof exports?(\"undefined\"!=typeof module&&module.exports&&(exports=module.exports=v),exports._=v):n._=v,v.VERSION=\"1.8.3\";var y=function(n,r,t){if(void 0===r)return n;switch(null==t?3:t){case 1:return function(t){return n.call(r,t)};case 2:return function(t,e){return n.call(r,t,e)};case 3:return function(t,e,u){return n.call(r,t,e,u)};case 4:return function(t,e,u,i){return n.call(r,t,e,u,i)}}return function(){return n.apply(r,arguments)}},d=function(n,r,t){return null==n?v.identity:v.isFunction(n)?y(n,r,t):v.isObject(n)?v.matcher(n):v.property(n)};v.iteratee=function(n,r){return d(n,r,1/0)};var g=function(n,r){return function(t){var e=arguments.length;if(e<2||null==t)return t;for(var u=1;u<e;u++)for(var i=arguments[u],o=n(i),a=o.length,c=0;c<a;c++){var f=o[c];r&&void 0!==t[f]||(t[f]=i[f])}return t}},m=function(n){if(!v.isObject(n))return{};if(p)return p(n);h.prototype=n;var r=new h;return h.prototype=null,r},b=function(n){return function(r){return null==r?void 0:r[n]}},x=Math.pow(2,53)-1,_=b(\"length\"),j=function(n){var r=_(n);return\"number\"==typeof r&&r>=0&&r<=x};function w(n){return function(r,t,e,u){t=y(t,u,4);var i=!j(r)&&v.keys(r),o=(i||r).length,a=n>0?0:o-1;return arguments.length<3&&(e=r[i?i[a]:a],a+=n),function(r,t,e,u,i,o){for(;i>=0&&i<o;i+=n){var a=u?u[i]:i;e=t(e,r[a],a,r)}return e}(r,t,e,i,a,o)}}v.each=v.forEach=function(n,r,t){var e,u;if(r=y(r,t),j(n))for(e=0,u=n.length;e<u;e++)r(n[e],e,n);else{var i=v.keys(n);for(e=0,u=i.length;e<u;e++)r(n[i[e]],i[e],n)}return n},v.map=v.collect=function(n,r,t){r=d(r,t);for(var e=!j(n)&&v.keys(n),u=(e||n).length,i=Array(u),o=0;o<u;o++){var a=e?e[o]:o;i[o]=r(n[a],a,n)}return i},v.reduce=v.foldl=v.inject=w(1),v.reduceRight=v.foldr=w(-1),v.find=v.detect=function(n,r,t){var e;if(void 0!==(e=j(n)?v.findIndex(n,r,t):v.findKey(n,r,t))&&-1!==e)return n[e]},v.filter=v.select=function(n,r,t){var e=[];return r=d(r,t),v.each(n,function(n,t,u){r(n,t,u)&&e.push(n)}),e},v.reject=function(n,r,t){return v.filter(n,v.negate(d(r)),t)},v.every=v.all=function(n,r,t){r=d(r,t);for(var e=!j(n)&&v.keys(n),u=(e||n).length,i=0;i<u;i++){var o=e?e[i]:i;if(!r(n[o],o,n))return!1}return!0},v.some=v.any=function(n,r,t){r=d(r,t);for(var e=!j(n)&&v.keys(n),u=(e||n).length,i=0;i<u;i++){var o=e?e[i]:i;if(r(n[o],o,n))return!0}return!1},v.contains=v.includes=v.include=function(n,r,t,e){return j(n)||(n=v.values(n)),(\"number\"!=typeof t||e)&&(t=0),v.indexOf(n,r,t)>=0},v.invoke=function(n,r){var t=o.call(arguments,2),e=v.isFunction(r);return v.map(n,function(n){var u=e?r:n[r];return null==u?u:u.apply(n,t)})},v.pluck=function(n,r){return v.map(n,v.property(r))},v.where=function(n,r){return v.filter(n,v.matcher(r))},v.findWhere=function(n,r){return v.find(n,v.matcher(r))},v.max=function(n,r,t){var e,u,i=-1/0,o=-1/0;if(null==r&&null!=n)for(var a=0,c=(n=j(n)?n:v.values(n)).length;a<c;a++)(e=n[a])>i&&(i=e);else r=d(r,t),v.each(n,function(n,t,e){((u=r(n,t,e))>o||u===-1/0&&i===-1/0)&&(i=n,o=u)});return i},v.min=function(n,r,t){var e,u,i=1/0,o=1/0;if(null==r&&null!=n)for(var a=0,c=(n=j(n)?n:v.values(n)).length;a<c;a++)(e=n[a])<i&&(i=e);else r=d(r,t),v.each(n,function(n,t,e){((u=r(n,t,e))<o||u===1/0&&i===1/0)&&(i=n,o=u)});return i},v.shuffle=function(n){for(var r,t=j(n)?n:v.values(n),e=t.length,u=Array(e),i=0;i<e;i++)(r=v.random(0,i))!==i&&(u[i]=u[r]),u[r]=t[i];return u},v.sample=function(n,r,t){return null==r||t?(j(n)||(n=v.values(n)),n[v.random(n.length-1)]):v.shuffle(n).slice(0,Math.max(0,r))},v.sortBy=function(n,r,t){return r=d(r,t),v.pluck(v.map(n,function(n,t,e){return{value:n,index:t,criteria:r(n,t,e)}}).sort(function(n,r){var t=n.criteria,e=r.criteria;if(t!==e){if(t>e||void 0===t)return 1;if(t<e||void 0===e)return-1}return n.index-r.index}),\"value\")};var A=function(n){return function(r,t,e){var u={};return t=d(t,e),v.each(r,function(e,i){var o=t(e,i,r);n(u,e,o)}),u}};v.groupBy=A(function(n,r,t){v.has(n,t)?n[t].push(r):n[t]=[r]}),v.indexBy=A(function(n,r,t){n[t]=r}),v.countBy=A(function(n,r,t){v.has(n,t)?n[t]++:n[t]=1}),v.toArray=function(n){return n?v.isArray(n)?o.call(n):j(n)?v.map(n,v.identity):v.values(n):[]},v.size=function(n){return null==n?0:j(n)?n.length:v.keys(n).length},v.partition=function(n,r,t){r=d(r,t);var e=[],u=[];return v.each(n,function(n,t,i){(r(n,t,i)?e:u).push(n)}),[e,u]},v.first=v.head=v.take=function(n,r,t){if(null!=n)return null==r||t?n[0]:v.initial(n,n.length-r)},v.initial=function(n,r,t){return o.call(n,0,Math.max(0,n.length-(null==r||t?1:r)))},v.last=function(n,r,t){if(null!=n)return null==r||t?n[n.length-1]:v.rest(n,Math.max(0,n.length-r))},v.rest=v.tail=v.drop=function(n,r,t){return o.call(n,null==r||t?1:r)},v.compact=function(n){return v.filter(n,v.identity)};var O=function(n,r,t,e){for(var u=[],i=0,o=e||0,a=_(n);o<a;o++){var c=n[o];if(j(c)&&(v.isArray(c)||v.isArguments(c))){r||(c=O(c,r,t));var f=0,l=c.length;for(u.length+=l;f<l;)u[i++]=c[f++]}else t||(u[i++]=c)}return u};function k(n){return function(r,t,e){t=d(t,e);for(var u=_(r),i=n>0?0:u-1;i>=0&&i<u;i+=n)if(t(r[i],i,r))return i;return-1}}function F(n,r,t){return function(e,u,i){var a=0,c=_(e);if(\"number\"==typeof i)n>0?a=i>=0?i:Math.max(i+c,a):c=i>=0?Math.min(i+1,c):i+c+1;else if(t&&i&&c)return e[i=t(e,u)]===u?i:-1;if(u!=u)return(i=r(o.call(e,a,c),v.isNaN))>=0?i+a:-1;for(i=n>0?a:c-1;i>=0&&i<c;i+=n)if(e[i]===u)return i;return-1}}v.flatten=function(n,r){return O(n,r,!1)},v.without=function(n){return v.difference(n,o.call(arguments,1))},v.uniq=v.unique=function(n,r,t,e){v.isBoolean(r)||(e=t,t=r,r=!1),null!=t&&(t=d(t,e));for(var u=[],i=[],o=0,a=_(n);o<a;o++){var c=n[o],f=t?t(c,o,n):c;r?(o&&i===f||u.push(c),i=f):t?v.contains(i,f)||(i.push(f),u.push(c)):v.contains(u,c)||u.push(c)}return u},v.union=function(){return v.uniq(O(arguments,!0,!0))},v.intersection=function(n){for(var r=[],t=arguments.length,e=0,u=_(n);e<u;e++){var i=n[e];if(!v.contains(r,i)){for(var o=1;o<t&&v.contains(arguments[o],i);o++);o===t&&r.push(i)}}return r},v.difference=function(n){var r=O(arguments,!0,!0,1);return v.filter(n,function(n){return!v.contains(r,n)})},v.zip=function(){return v.unzip(arguments)},v.unzip=function(n){for(var r=n&&v.max(n,_).length||0,t=Array(r),e=0;e<r;e++)t[e]=v.pluck(n,e);return t},v.object=function(n,r){for(var t={},e=0,u=_(n);e<u;e++)r?t[n[e]]=r[e]:t[n[e][0]]=n[e][1];return t},v.findIndex=k(1),v.findLastIndex=k(-1),v.sortedIndex=function(n,r,t,e){for(var u=(t=d(t,e,1))(r),i=0,o=_(n);i<o;){var a=Math.floor((i+o)/2);t(n[a])<u?i=a+1:o=a}return i},v.indexOf=F(1,v.findIndex,v.sortedIndex),v.lastIndexOf=F(-1,v.findLastIndex),v.range=function(n,r,t){null==r&&(r=n||0,n=0),t=t||1;for(var e=Math.max(Math.ceil((r-n)/t),0),u=Array(e),i=0;i<e;i++,n+=t)u[i]=n;return u};var S=function(n,r,t,e,u){if(!(e instanceof r))return n.apply(t,u);var i=m(n.prototype),o=n.apply(i,u);return v.isObject(o)?o:i};v.bind=function(n,r){if(s&&n.bind===s)return s.apply(n,o.call(arguments,1));if(!v.isFunction(n))throw new TypeError(\"Bind must be called on a function\");var t=o.call(arguments,2),e=function(){return S(n,e,r,this,t.concat(o.call(arguments)))};return e},v.partial=function(n){var r=o.call(arguments,1),t=function(){for(var e=0,u=r.length,i=Array(u),o=0;o<u;o++)i[o]=r[o]===v?arguments[e++]:r[o];for(;e<arguments.length;)i.push(arguments[e++]);return S(n,t,this,this,i)};return t},v.bindAll=function(n){var r,t,e=arguments.length;if(e<=1)throw new Error(\"bindAll must be passed function names\");for(r=1;r<e;r++)n[t=arguments[r]]=v.bind(n[t],n);return n},v.memoize=function(n,r){var t=function(e){var u=t.cache,i=\"\"+(r?r.apply(this,arguments):e);return v.has(u,i)||(u[i]=n.apply(this,arguments)),u[i]};return t.cache={},t},v.delay=function(n,r){var t=o.call(arguments,2);return setTimeout(function(){return n.apply(null,t)},r)},v.defer=v.partial(v.delay,v,1),v.throttle=function(n,r,t){var e,u,i,o=null,a=0;t||(t={});var c=function(){a=!1===t.leading?0:v.now(),o=null,i=n.apply(e,u),o||(e=u=null)};return function(){var f=v.now();a||!1!==t.leading||(a=f);var l=r-(f-a);return e=this,u=arguments,l<=0||l>r?(o&&(clearTimeout(o),o=null),a=f,i=n.apply(e,u),o||(e=u=null)):o||!1===t.trailing||(o=setTimeout(c,l)),i}},v.debounce=function(n,r,t){var e,u,i,o,a,c=function(){var f=v.now()-o;f<r&&f>=0?e=setTimeout(c,r-f):(e=null,t||(a=n.apply(i,u),e||(i=u=null)))};return function(){i=this,u=arguments,o=v.now();var f=t&&!e;return e||(e=setTimeout(c,r)),f&&(a=n.apply(i,u),i=u=null),a}},v.wrap=function(n,r){return v.partial(r,n)},v.negate=function(n){return function(){return!n.apply(this,arguments)}},v.compose=function(){var n=arguments,r=n.length-1;return function(){for(var t=r,e=n[r].apply(this,arguments);t--;)e=n[t].call(this,e);return e}},v.after=function(n,r){return function(){if(--n<1)return r.apply(this,arguments)}},v.before=function(n,r){var t;return function(){return--n>0&&(t=r.apply(this,arguments)),n<=1&&(r=null),t}},v.once=v.partial(v.before,2);var E=!{toString:null}.propertyIsEnumerable(\"toString\"),M=[\"valueOf\",\"isPrototypeOf\",\"toString\",\"propertyIsEnumerable\",\"hasOwnProperty\",\"toLocaleString\"];function I(n,r){var t=M.length,u=n.constructor,i=v.isFunction(u)&&u.prototype||e,o=\"constructor\";for(v.has(n,o)&&!v.contains(r,o)&&r.push(o);t--;)(o=M[t])in n&&n[o]!==i[o]&&!v.contains(r,o)&&r.push(o)}v.keys=function(n){if(!v.isObject(n))return[];if(l)return l(n);var r=[];for(var t in n)v.has(n,t)&&r.push(t);return E&&I(n,r),r},v.allKeys=function(n){if(!v.isObject(n))return[];var r=[];for(var t in n)r.push(t);return E&&I(n,r),r},v.values=function(n){for(var r=v.keys(n),t=r.length,e=Array(t),u=0;u<t;u++)e[u]=n[r[u]];return e},v.mapObject=function(n,r,t){r=d(r,t);for(var e,u=v.keys(n),i=u.length,o={},a=0;a<i;a++)o[e=u[a]]=r(n[e],e,n);return o},v.pairs=function(n){for(var r=v.keys(n),t=r.length,e=Array(t),u=0;u<t;u++)e[u]=[r[u],n[r[u]]];return e},v.invert=function(n){for(var r={},t=v.keys(n),e=0,u=t.length;e<u;e++)r[n[t[e]]]=t[e];return r},v.functions=v.methods=function(n){var r=[];for(var t in n)v.isFunction(n[t])&&r.push(t);return r.sort()},v.extend=g(v.allKeys),v.extendOwn=v.assign=g(v.keys),v.findKey=function(n,r,t){r=d(r,t);for(var e,u=v.keys(n),i=0,o=u.length;i<o;i++)if(r(n[e=u[i]],e,n))return e},v.pick=function(n,r,t){var e,u,i={},o=n;if(null==o)return i;v.isFunction(r)?(u=v.allKeys(o),e=y(r,t)):(u=O(arguments,!1,!1,1),e=function(n,r,t){return r in t},o=Object(o));for(var a=0,c=u.length;a<c;a++){var f=u[a],l=o[f];e(l,f,o)&&(i[f]=l)}return i},v.omit=function(n,r,t){if(v.isFunction(r))r=v.negate(r);else{var e=v.map(O(arguments,!1,!1,1),String);r=function(n,r){return!v.contains(e,r)}}return v.pick(n,r,t)},v.defaults=g(v.allKeys,!0),v.create=function(n,r){var t=m(n);return r&&v.extendOwn(t,r),t},v.clone=function(n){return v.isObject(n)?v.isArray(n)?n.slice():v.extend({},n):n},v.tap=function(n,r){return r(n),n},v.isMatch=function(n,r){var t=v.keys(r),e=t.length;if(null==n)return!e;for(var u=Object(n),i=0;i<e;i++){var o=t[i];if(r[o]!==u[o]||!(o in u))return!1}return!0};var N=function(n,r,t,e){if(n===r)return 0!==n||1/n==1/r;if(null==n||null==r)return n===r;n instanceof v&&(n=n._wrapped),r instanceof v&&(r=r._wrapped);var u=a.call(n);if(u!==a.call(r))return!1;switch(u){case\"[object RegExp]\":case\"[object String]\":return\"\"+n==\"\"+r;case\"[object Number]\":return+n!=+n?+r!=+r:0==+n?1/+n==1/r:+n==+r;case\"[object Date]\":case\"[object Boolean]\":return+n==+r}var i=\"[object Array]\"===u;if(!i){if(\"object\"!=typeof n||\"object\"!=typeof r)return!1;var o=n.constructor,c=r.constructor;if(o!==c&&!(v.isFunction(o)&&o instanceof o&&v.isFunction(c)&&c instanceof c)&&\"constructor\"in n&&\"constructor\"in r)return!1}e=e||[];for(var f=(t=t||[]).length;f--;)if(t[f]===n)return e[f]===r;if(t.push(n),e.push(r),i){if((f=n.length)!==r.length)return!1;for(;f--;)if(!N(n[f],r[f],t,e))return!1}else{var l,s=v.keys(n);if(f=s.length,v.keys(r).length!==f)return!1;for(;f--;)if(l=s[f],!v.has(r,l)||!N(n[l],r[l],t,e))return!1}return t.pop(),e.pop(),!0};v.isEqual=function(n,r){return N(n,r)},v.isEmpty=function(n){return null==n||(j(n)&&(v.isArray(n)||v.isString(n)||v.isArguments(n))?0===n.length:0===v.keys(n).length)},v.isElement=function(n){return!(!n||1!==n.nodeType)},v.isArray=f||function(n){return\"[object Array]\"===a.call(n)},v.isObject=function(n){var r=typeof n;return\"function\"===r||\"object\"===r&&!!n},v.each([\"Arguments\",\"Function\",\"String\",\"Number\",\"Date\",\"RegExp\",\"Error\"],function(n){v[\"is\"+n]=function(r){return a.call(r)===\"[object \"+n+\"]\"}}),v.isArguments(arguments)||(v.isArguments=function(n){return v.has(n,\"callee\")}),\"function\"!=typeof/./&&\"object\"!=typeof Int8Array&&(v.isFunction=function(n){return\"function\"==typeof n||!1}),v.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},v.isNaN=function(n){return v.isNumber(n)&&n!==+n},v.isBoolean=function(n){return!0===n||!1===n||\"[object Boolean]\"===a.call(n)},v.isNull=function(n){return null===n},v.isUndefined=function(n){return void 0===n},v.has=function(n,r){return null!=n&&c.call(n,r)},v.noConflict=function(){return n._=r,this},v.identity=function(n){return n},v.constant=function(n){return function(){return n}},v.noop=function(){},v.property=b,v.propertyOf=function(n){return null==n?function(){}:function(r){return n[r]}},v.matcher=v.matches=function(n){return n=v.extendOwn({},n),function(r){return v.isMatch(r,n)}},v.times=function(n,r,t){var e=Array(Math.max(0,n));r=y(r,t,1);for(var u=0;u<n;u++)e[u]=r(u);return e},v.random=function(n,r){return null==r&&(r=n,n=0),n+Math.floor(Math.random()*(r-n+1))},v.now=Date.now||function(){return(new Date).getTime()};var B={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"`\":\"&#x60;\"},T=v.invert(B),R=function(n){var r=function(r){return n[r]},t=\"(?:\"+v.keys(n).join(\"|\")+\")\",e=RegExp(t),u=RegExp(t,\"g\");return function(n){return n=null==n?\"\":\"\"+n,e.test(n)?n.replace(u,r):n}};v.escape=R(B),v.unescape=R(T),v.result=function(n,r,t){var e=null==n?void 0:n[r];return void 0===e&&(e=t),v.isFunction(e)?e.call(n):e};var q=0;v.uniqueId=function(n){var r=++q+\"\";return n?n+r:r},v.templateSettings={evaluate:/<%([\\s\\S]+?)%>/g,interpolate:/<%=([\\s\\S]+?)%>/g,escape:/<%-([\\s\\S]+?)%>/g};var K=/(.)^/,z={\"'\":\"'\",\"\\\\\":\"\\\\\",\"\\r\":\"r\",\"\\n\":\"n\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},D=/\\\\|'|\\r|\\n|\\u2028|\\u2029/g,L=function(n){return\"\\\\\"+z[n]};v.template=function(n,r,t){!r&&t&&(r=t),r=v.defaults({},r,v.templateSettings);var e=RegExp([(r.escape||K).source,(r.interpolate||K).source,(r.evaluate||K).source].join(\"|\")+\"|$\",\"g\"),u=0,i=\"__p+='\";n.replace(e,function(r,t,e,o,a){return i+=n.slice(u,a).replace(D,L),u=a+r.length,t?i+=\"'+\\n((__t=(\"+t+\"))==null?'':_.escape(__t))+\\n'\":e?i+=\"'+\\n((__t=(\"+e+\"))==null?'':__t)+\\n'\":o&&(i+=\"';\\n\"+o+\"\\n__p+='\"),r}),i+=\"';\\n\",r.variable||(i=\"with(obj||{}){\\n\"+i+\"}\\n\"),i=\"var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\\n\"+i+\"return __p;\\n\";try{var o=new Function(r.variable||\"obj\",\"_\",i)}catch(n){throw n.source=i,n}var a=function(n){return o.call(this,n,v)},c=r.variable||\"obj\";return a.source=\"function(\"+c+\"){\\n\"+i+\"}\",a},v.chain=function(n){var r=v(n);return r._chain=!0,r};var P=function(n,r){return n._chain?v(r).chain():r};v.mixin=function(n){v.each(v.functions(n),function(r){var t=v[r]=n[r];v.prototype[r]=function(){var n=[this._wrapped];return i.apply(n,arguments),P(this,t.apply(v,n))}})},v.mixin(v),v.each([\"pop\",\"push\",\"reverse\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(n){var r=t[n];v.prototype[n]=function(){var t=this._wrapped;return r.apply(t,arguments),\"shift\"!==n&&\"splice\"!==n||0!==t.length||delete t[0],P(this,t)}}),v.each([\"concat\",\"join\",\"slice\"],function(n){var r=t[n];v.prototype[n]=function(){return P(this,r.apply(this._wrapped,arguments))}}),v.prototype.value=function(){return this._wrapped},v.prototype.valueOf=v.prototype.toJSON=v.prototype.value,v.prototype.toString=function(){return\"\"+this._wrapped},\"function\"==typeof define&&define.amd&&define(\"underscore\",[],function(){return v})}).call(this);\n\n//# sourceMappingURL=data:application/json;base64,",
    "var WAAClock=require(\"./lib/WAAClock\");module.exports=WAAClock,\"undefined\"!=typeof window&&(window.WAAClock=WAAClock);\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIldBQUNsb2NrIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ3aW5kb3ciXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLFNBQVdDLFFBQVEsa0JBRXZCQyxPQUFPQyxRQUFVSCxTQUNLLG9CQUFYSSxTQUF3QkEsT0FBT0osU0FBV0EiLCJmaWxlIjoiL1VzZXJzL21pY2hhZWx3ZWl0bmF1ZXIvRG9jdW1lbnRzL2RldmVsL2h0bWwvYm9nSlMvbm9kZV9tb2R1bGVzL3dhYWNsb2NrL2luZGV4LmpzIn0=",
    "var isBrowser=\"undefined\"!=typeof window,CLOCK_DEFAULTS={toleranceLate:.1,toleranceEarly:.001},Event=function(t,e,i){this.clock=t,this.func=i,this._cleared=!1,this.toleranceLate=t.toleranceLate,this.toleranceEarly=t.toleranceEarly,this._latestTime=null,this._earliestTime=null,this.deadline=null,this.repeatTime=null,this.schedule(e)};Event.prototype.clear=function(){return this.clock._removeEvent(this),this._cleared=!0,this},Event.prototype.repeat=function(t){if(0===t)throw new Error(\"delay cannot be 0\");return this.repeatTime=t,this.clock._hasEvent(this)||this.schedule(this.deadline+this.repeatTime),this},Event.prototype.tolerance=function(t){return\"number\"==typeof t.late&&(this.toleranceLate=t.late),\"number\"==typeof t.early&&(this.toleranceEarly=t.early),this._refreshEarlyLateDates(),this.clock._hasEvent(this)&&(this.clock._removeEvent(this),this.clock._insertEvent(this)),this},Event.prototype.isRepeated=function(){return null!==this.repeatTime},Event.prototype.schedule=function(t){this._cleared=!1,this.deadline=t,this._refreshEarlyLateDates(),this.clock.context.currentTime>=this._earliestTime?this._execute():this.clock._hasEvent(this)?(this.clock._removeEvent(this),this.clock._insertEvent(this)):this.clock._insertEvent(this)},Event.prototype.timeStretch=function(t,e){this.isRepeated()&&(this.repeatTime=this.repeatTime*e);var i=t+e*(this.deadline-t);if(this.isRepeated())for(;this.clock.context.currentTime>=i-this.toleranceEarly;)i+=this.repeatTime;this.schedule(i)},Event.prototype._execute=function(){!1!==this.clock._started&&(this.clock._removeEvent(this),this.clock.context.currentTime<this._latestTime?this.func(this):(this.onexpired&&this.onexpired(this),console.warn(\"event expired\")),this.clock._hasEvent(this)||!this.isRepeated()||this._cleared||this.schedule(this.deadline+this.repeatTime))},Event.prototype._refreshEarlyLateDates=function(){this._latestTime=this.deadline+this.toleranceLate,this._earliestTime=this.deadline-this.toleranceEarly};var WAAClock=module.exports=function(t,e){e=e||{},this.tickMethod=e.tickMethod||\"ScriptProcessorNode\",this.toleranceEarly=e.toleranceEarly||CLOCK_DEFAULTS.toleranceEarly,this.toleranceLate=e.toleranceLate||CLOCK_DEFAULTS.toleranceLate,this.context=t,this._events=[],this._started=!1};WAAClock.prototype.setTimeout=function(t,e){return this._createEvent(t,this._absTime(e))},WAAClock.prototype.callbackAtTime=function(t,e){return this._createEvent(t,e)},WAAClock.prototype.timeStretch=function(t,e,i){return e.forEach(function(e){e.timeStretch(t,i)}),e},WAAClock.prototype.start=function(){if(!1===this._started){var t=this;if(this._started=!0,this._events=[],\"ScriptProcessorNode\"===this.tickMethod){this._clockNode=this.context.createScriptProcessor(256,1,1),this._clockNode.connect(this.context.destination),this._clockNode.onaudioprocess=function(){process.nextTick(function(){t._tick()})}}else if(\"manual\"!==this.tickMethod)throw new Error(\"invalid tickMethod \"+this.tickMethod)}},WAAClock.prototype.stop=function(){!0===this._started&&(this._started=!1,this._clockNode.disconnect())},WAAClock.prototype._tick=function(){for(var t=this._events.shift();t&&t._earliestTime<=this.context.currentTime;)t._execute(),t=this._events.shift();t&&this._events.unshift(t)},WAAClock.prototype._createEvent=function(t,e){return new Event(this,e,t)},WAAClock.prototype._insertEvent=function(t){this._events.splice(this._indexByTime(t._earliestTime),0,t)},WAAClock.prototype._removeEvent=function(t){var e=this._events.indexOf(t);-1!==e&&this._events.splice(e,1)},WAAClock.prototype._hasEvent=function(t){return-1!==this._events.indexOf(t)},WAAClock.prototype._indexByTime=function(t){for(var e,i=0,s=this._events.length;i<s;)e=Math.floor((i+s)/2),this._events[e]._earliestTime<t?i=e+1:s=e;return i},WAAClock.prototype._absTime=function(t){return t+this.context.currentTime},WAAClock.prototype._relTime=function(t){return t-this.context.currentTime};\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIldBQUNsb2NrLmpzIl0sIm5hbWVzIjpbImlzQnJvd3NlciIsIndpbmRvdyIsIkNMT0NLX0RFRkFVTFRTIiwidG9sZXJhbmNlTGF0ZSIsInRvbGVyYW5jZUVhcmx5IiwiRXZlbnQiLCJjbG9jayIsImRlYWRsaW5lIiwiZnVuYyIsInRoaXMiLCJfY2xlYXJlZCIsIl9sYXRlc3RUaW1lIiwiX2VhcmxpZXN0VGltZSIsInJlcGVhdFRpbWUiLCJzY2hlZHVsZSIsInByb3RvdHlwZSIsImNsZWFyIiwiX3JlbW92ZUV2ZW50IiwicmVwZWF0IiwidGltZSIsIkVycm9yIiwiX2hhc0V2ZW50IiwidG9sZXJhbmNlIiwidmFsdWVzIiwibGF0ZSIsImVhcmx5IiwiX3JlZnJlc2hFYXJseUxhdGVEYXRlcyIsIl9pbnNlcnRFdmVudCIsImlzUmVwZWF0ZWQiLCJjb250ZXh0IiwiY3VycmVudFRpbWUiLCJfZXhlY3V0ZSIsInRpbWVTdHJldGNoIiwidFJlZiIsInJhdGlvIiwiX3N0YXJ0ZWQiLCJvbmV4cGlyZWQiLCJjb25zb2xlIiwid2FybiIsIldBQUNsb2NrIiwibW9kdWxlIiwiZXhwb3J0cyIsIm9wdHMiLCJ0aWNrTWV0aG9kIiwiX2V2ZW50cyIsInNldFRpbWVvdXQiLCJkZWxheSIsIl9jcmVhdGVFdmVudCIsIl9hYnNUaW1lIiwiY2FsbGJhY2tBdFRpbWUiLCJldmVudHMiLCJmb3JFYWNoIiwiZXZlbnQiLCJzdGFydCIsInNlbGYiLCJfY2xvY2tOb2RlIiwiY3JlYXRlU2NyaXB0UHJvY2Vzc29yIiwiY29ubmVjdCIsImRlc3RpbmF0aW9uIiwib25hdWRpb3Byb2Nlc3MiLCJwcm9jZXNzIiwibmV4dFRpY2siLCJfdGljayIsInN0b3AiLCJkaXNjb25uZWN0Iiwic2hpZnQiLCJ1bnNoaWZ0Iiwic3BsaWNlIiwiX2luZGV4QnlUaW1lIiwiaW5kIiwiaW5kZXhPZiIsIm1pZCIsImxvdyIsImhpZ2giLCJsZW5ndGgiLCJNYXRoIiwiZmxvb3IiLCJyZWxUaW1lIiwiX3JlbFRp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",
    "/*jshint esversion: 6 */\n/**\n * @file channelorder_test.js\n * @author Michael Weitnauer: {@link weitnauer@irt.de}\n */\n\n/**\n * @module bogJS\n */\n\n\nvar _ = require('underscore');\n\n\n/**\n * GainController\n * @constructor\n *\n * @param ctx - Web Audio API Audio Context instance\n * @param [targetNode=ctx.destination] - Web Audio API node to which the\n * output of the GainController shall be connected to.\n */\n\n/**\n * ChannelOrderTest will start loading, deconding and playing as soon as the\n * instance of the class is created. The test files will be looped and for\n * each loop, the [testChs]{@link module:bogJS~ChannelOrderTest#testChs} method\n * is called. If the test file has been played five times and no order could\n * be detected, the default order will be triggered.\n * @constructor\n *\n * @param {String} container - to be tested file extension w/o dot (\"mp4\")\n * @param {Number} tracks - To be tested channel number for container\n * @param {Object.<AudioContext>} [ctx=AudioContext] - if no AudioContext\n *      instance is passed, it will be created.\n * @param {String} [root=\"signals/order\"] - path to test encoded files\n * @fires module:bogJS~ChannelOrderTest#order_ready\n */\nvar ChannelOrderTest = function(container, tracks, ctx, root=\"signals/order/\"){\n    if (typeof ctx === 'undefined') {\n        if (typeof AudioContext !== 'undefined') {\n            var ctx = new AudioContext();\n        } else if (typeof webkitAudioContext !== 'undefined') {\n            var ctx = new webkitAudioContext();\n        } else {\n            alert(\"Your browser doesn't support the Web Audio API!\");\n        }\n    }\n    /** @var {Object.<AudioContext>} */\n    this.ctx = ctx;\n\n    this._tracks = parseInt(tracks);\n    this._splitter = this.ctx.createChannelSplitter(this._tracks);\n    this.analysers = [];\n    this.gainNode = this.ctx.createGain();\n    this.gainNode.gain.value = 0;\n    this.gainNode.connect(this.ctx.destination);\n\n    for (var i = 0; i < this._tracks; i++){\n        this.analysers[i] = this.ctx.createAnalyser();\n        this.analysers[i].fftSize = 2048;  // \"hard-coded\" due to Safari -> analyser chrashes if fftSize value is greater than 2048\n        this._splitter.connect(this.analysers[i], i);\n        this.analysers[i].connect(this.gainNode);\n    }\n    //var root = root || \"http://lab.irt.de/demos/order/\";\n    if (container === \"webm\"){   // we assume opus if webm is used\n        container = \"opus\";\n    }\n    var url = root+tracks+\"chs.\"+container;\n    this._loadSound(url);\n};\n\n\nChannelOrderTest.prototype = {\n    /**\n     * Load and test passed audio signal\n     *\n     * @protected\n     * @param {string} url - URL\n     */\n    _loadSound: function(url){\n        this.audio = document.createElement('audio');\n        this.audio.src = url;\n        this.audio.loop = true;\n        this.audio.load();\n        this.mediaElement = this.ctx.createMediaElementSource(this.audio);\n        this.mediaElement.connect(this._splitter);\n        this.audio.play();\n        var last_unique = [];\n\n        this.audio.onended = function(){\n          console.debug(\"ChannelOrderTest Playback ended\");\n        }\n\n        // onplay will be fired once the audio playback started\n        $(this.audio).on(\"play\", function(){\n            console.debug(\"Channel order testfile started...\");\n            // this is a fix to make the channel order test working on Firefox\n            // the initial attempt (listen on \"playing\") did no more in FF after\n            // an update.\n            for (let i = 0, p = Promise.resolve(); i < 10; i++) {\n                p = p.then(() => new Promise(resolve =>\n                    setTimeout(function () {\n                        var order = this.testChs();\n                        var unique = _.unique(order);\n                        // the returned order should be identical for two consecutive calls\n                        // to make sure we have a reliable result\n                        if ((unique.length === this._tracks) && (_.isEqual(last_unique, unique))) {\n                            console.info('Channel order detected: ' + order);\n                            /**\n                             * If channel order was detected and ensured, the event is\n                             * fired with channel order as array.\n                             * @event module:bogJS~ChannelOrderTest#order_ready\n                             * @property {Number[]} order - Array containing the detected\n                             * order\n                             */\n                            $(document).triggerHandler('order_ready', [order]);\n                            this.audio.pause();\n                            return;\n                        } else if (unique.length === this._tracks){\n                            last_unique = unique;\n                        }\n                        console.debug(\"Channel order not yet detected. Iteration:  \" + i);\n                        if (i >= 9){\n                            console.warn(\"Channel order not detectable. Stopping indentfication and trigger default values.\");\n                            order = _.range(this._tracks);\n                            $(document).triggerHandler('order_ready', [order]);\n                            this.audio.pause();\n                        }\n                        resolve();\n                    }.bind(this), 500)\n                ));\n            }\n        }.bind(this, last_unique));\n    },\n\n    /**\n     * Save frequency bins to arrays for later analysis\n     * @protected\n     * @returns {Number[]}  Nested array (Float32Array) containing the frequency\n     * bins for each channel\n     */\n    _getFreqData: function(){\n        var freqBins = [];\n        var freqBinaryBins = [];\n        for (var i = 0; i < this._tracks; i++){\n            // Float32Array should be the same length as the frequencyBinCount\n            freqBins[i] = new Float32Array(this.analysers[i].frequencyBinCount);\n            // fill the Float32Array with data returned from getFloatFrequencyData()\n            this.analysers[i].getFloatFrequencyData(freqBins[i]);\n        }\n        return freqBins;\n    },\n\n    /**\n     * Will conduct the detection of the channel order.\n     * @returns {Number[]}  Array containing the detected. e.g. [0, 3, 1, 2]\n     * channel order\n     */\n    testChs: function(){\n        var freqBins = this._getFreqData();\n        var indices = [];\n        for (var i = 0; i < freqBins.length; i++){\n            var idx = _.indexOf(freqBins[i], _.max(freqBins[i]));\n            indices[i] = idx;\n        }\n        console.debug(\"Decoded indices: \" + indices);\n        // to avoid the array is mutated and numerical sorted\n        var sorted_indices = indices.concat().sort(function(a, b){return a-b;});\n        console.debug(\"Sorted indices: \" + sorted_indices);\n        var normalized_indices = [];\n        for (var i = 0; i < indices.length; i++){\n            normalized_indices[i] = _.indexOf(sorted_indices, indices[i]);\n        }\n        return normalized_indices;\n    },\n\n    /**\n    * Explicit play function for mobile devices which will not start the media\n    * element automatically without user gesture.\n    */\n    playAudio: function(){\n        this.audio.play();\n    }\n};\n\nmodule.exports = ChannelOrderTest;\n",
    "/*jshint esversion: 6 */\n/**\n * @file media_controller.js\n * @author Michael Weitnauer: {@link weitnauer@irt.de}\n */\n\n/**\n * @module bogJS\n *\n */\n\n/**\n * GainController\n * @constructor\n *\n * @param ctx - Web Audio API Audio Context instance\n * @param [targetNode=ctx.destination] - Web Audio API node to which the\n * output of the GainController shall be connected to.\n */\nvar GainController = function(ctx, targetNode=ctx.destination){\n    this._gain = 1;\n    this.gainNode = ctx.createGain();\n\n    // Experimental highpass to avoid sizzling noinse while chaning view / angle\n    //this.highpass = ctx.createBiquadFilter();\n    //this.highpass.type = \"highpass\";\n    //this.highpass.connect(this.gainNode);\n    //this.setHighpassFreq(80);\n\n    // FIXME: if applied here, the gainNode stays\n    // connected with ctx.destination:\n    this.connect(targetNode);\n};\n\nGainController.prototype = {\n\n    /**\n     * Mutes the node object\n     *\n     */\n    mute: function(){\n        this.setGain(0);\n    },\n\n    /**\n     * Unmutes node object\n     *\n     */\n    unmute: function(){\n        this.setGain(1);\n    },\n\n    /**\n     * setGain\n     *\n     * @param {Float} val - Values between 0 and 1\n     */\n    setGain: function(val){\n        this.gainNode.gain.value = val;\n        this._gain = this.getGain();\n    },\n\n    /**\n     * getGain\n     *\n     * @returns {Float} gain - Float value between 0 and 1\n     */\n    getGain: function(){\n        return this.gainNode.gain.value;\n    },\n\n    /**\n    * Disconnects and reconnects {@link GainController} instance to passed\n    * AudioNode(s)\n    *\n    * @param {(Object|Object[])} nodes - Single of array of AudioNodes to which\n    * the {@link MediaElementController} instance shall be reconnected.\n    */\n    reconnect: function(nodes){\n        this.disconnect();\n        this.connect(nodes);\n    },\n\n    /**\n     * connect\n     *\n     * @param {(Object|Object[])} nodes - one or multple Web Audio API nodes to\n     * which the output of the GainController instance shall be connected to.\n     */\n    connect: function(nodes) {\n        console.debug(\"Connecting GainController to \" + nodes);\n        if (Object.prototype.toString.call(nodes) != \"[object Array]\"){          // == single Node\n            this.gainNode.connect(nodes);\n        } else {                                          // == array of Nodes\n            for (var i=0; i < nodes.length; i++){\n                this.gainNode.connect(nodes[i]);\n            }\n        }\n    },\n\n    /**\n    * This method will disconnect output of the {@link GainController} instance from\n    * a given node or all connected nodes if node is not given/undefined.\n    */\n    disconnect: function(node){\n        //console.debug(\"Disconnecting \", this, \" from \", node);\n        this.gainNode.disconnect(node);\n    },\n\n    setHighpassFreq: function(freq){\n        //this.highpass.frequency.value = freq;\n    }\n};\n\nmodule.exports = GainController;\n",
    "/**\n * @file irtPlayer_new.js\n * @author Michael Weitnauer: {@link weitnauer@irt.de}\n */\n\n/**\n * @license\n * ----------------------------------------------------------------------------\n * irtPlayer, a Javascript HTML5 Audio library for comparing audio files gaplessly\n * v2.0.0\n * Licensed under the MIT license.\n * http://www.irt.de\n * ----------------------------------------------------------------------------\n * Copyright (C) 2015 Institut für Rundfunktechnik GmbH\n * http://www.irt.de\n * ----------------------------------------------------------------------------\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files ( the \"Software\" ), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * ----------------------------------------------------------------------------\n */\n\n/**\n * @module irtPlayer\n *\n */\n\n\n/**\n * Represents AudioData class which has all the logic to control an\n * audio signal\n *\n * @constructor\n *\n * @param {Object} ctx - An AudioContext instance.\n * @param {string} url - URL of the audio source (with or without\n * extension).\n * @param {Object} [targetNode=ctx.destination] - The audio node to which the AudioData\n * instance shall be connected\n * @param {boolean} [checkSupportFlag=true] - Enable / disable extension\n * support for passed url (see [AudioData._checkExtension]{@link AudioData#_checkExtension})\n *\n * @fires module:irtPlayer~AudioData#audio_init\n * @fires module:irtPlayer~AudioData#audio_loaded\n * @fires module:irtPlayer~AudioData#audio_ended\n */\nvar AudioData = function(ctx, url, targetNode, checkSupportFlag) {\n    /** @protected\n     * @var {boolean} */\n    this.canplay = false;\n    var checkSupportFlag = checkSupportFlag || true;\n    if (checkSupportFlag == true){\n        var url = this._checkExtension(url);\n    }\n    /** @var {Object.<AudioContext>} */\n    this.ctx = ctx;\n    this.url = url;\n\n    this._playing = false;\n    this._looping = true;\n    this._rangeStart = 0;\n    this._rangeEnd = 0;\n    this._startTime = 0;\n    this._startOffset = 0;\n\n    /** @var {Object.<GainNode>} */\n    this.gainNode = this.ctx.createGain();\n    this.gain = this.getGain();\n    var targetNode = targetNode || this.ctx.destination;\n    this.gainNode.connect(targetNode);  // FF either refuses to break this connection or simply displays a no more existing connection..\n}\n\nAudioData.prototype = {\n\n    /**\n     * Create instance of new AudioBufferSource every time {@link\n     * AudioData#play} is called and initialize it.\n     *\n     * @protected\n     */\n    _initBuffer: function(){\n        this.audio = this.ctx.createBufferSource();\n        this.audio.loop = this._looping;\n        //this.audio.loop = false;  // workaround to compensate Chrome behavior. see comment in play()\n        this.audio.buffer = this._buffer;\n        this.audio.connect(this.gainNode);\n        this.audio.loopStart = this._rangeStart;\n        this.audio.loopEnd = this._rangeEnd;\n        this.audio.onended = this._onendedHandler.bind(this);\n\n        /**\n         * Will be fired once the new AudioBufferSource has been\n         * initilized.\n         * @event module:irtPlayer~AudioData#audio_init\n         */\n        $(this).triggerHandler(\"audio_init\");\n    },\n\n    /**\n     * Will be called if AudioBufferSource instance has ended\n     *\n     * @protected\n     */\n    _onendedHandler: function(){\n        //console.debug(\"Audio buffer has ended!\");\n        this._playing = false;\n        //this._startOffset = 0;\n\n        /**\n         * Will be fired once the playback has ended\n         * @event module:irtPlayer~AudioData#audio_ended\n         */\n        $(this).triggerHandler(\"audio_ended\");\n    },\n\n    load: function(){\n        this._loadSound(this.url);\n    },\n\n    /**\n    * Start playback of audio signal\n    *\n    * @param {number} [pos] - Position from which the playback shall start\n    * (optional)\n    */\n    play: function(pos){\n        if ((this._playing == false) && (this.canplay)){\n            this._initBuffer();\n            this._startTime = this.audio.context.currentTime;\n            console.debug(\"Start time: \" + this._startTime);\n            if (typeof pos != 'number'){        // detection with _.isNumber() could be more robust\n                var buffer_duration = this._buffer.duration;\n                var offset = (this._rangeStart + this._startOffset) % buffer_duration;\n                var duration = this._rangeEnd - offset;\n                console.debug(\"Offset: \" + offset + \"   Duration: \" + duration);\n\n                // Passing a duration to start() causes undefined\n                // situation in current versions of Chrome. FF, Safari\n                // and Opera seem to treat this situation properly. See\n                // also https://github.com/WebAudio/web-audio-api/issues/421\n                this.audio.start(0, offset, duration);\n                //this.audio.start(0, offset);\n            } else {\n                console.debug(\"Starting playback at \" + pos);\n                this._startOffset = pos;\n                var duration = this._rangeEnd - pos;\n                this.audio.start(0, pos, duration);\n            }\n            // workaround to force looping in Chrome. see comment above.\n            // Chrome seems to ignore looping state if duration is\n            // passed. --> init() with loop = false, then set \"real\"\n            // loop state here:\n            //this.audio.loop = this._looping;\n            this._playing = true;\n        }\n    },\n\n    /**\n     * Pause playback  - will only be executed if {@link\n     * AudioData#_playing} flag is true.\n     *\n     */\n    pause: function(){\n        if (this._playing == true){\n            this.audio.stop(0);\n            // Measure how much time passed since the last pause.\n            this._startOffset += this.audio.context.currentTime - this._startTime;\n            this._playing = false;\n            console.debug(\"Start offset: \"+ this._startOffset);\n        }\n    },\n\n\n    /**\n     * Stops playback - if method is called during the playback\n     * is stopped, the thrown error will be catched.\n     */\n    stop: function(){\n        try {\n            this.audio.stop(0);\n            this._startOffset = 0;\n            this._playing = false;\n        } catch (err) {\n            console.warn(\"Can't stop audio.. \" + err);\n        }\n    },\n\n    /**\n     * Sets gain of {@link AudioData} instance\n     *\n     * @param {float} gain - Value between 0.0 and 1.0\n     */\n    setGain: function(gain){\n        if ((gain >= 0.0) && (gain <= 1.0)){\n            this.gainNode.gain.value = gain;\n            this.gain = this.gainNode.gain.value;  // avoids that we accept uncompatible values\n        }\n        else {\n            console.warn(\"Gain values must be between 0 and 1\");\n        }\n    },\n\n    /**\n     * Returns current gain value of {@link AudioData} instance\n     *\n     * @return {float} value - Float gain value\n     */\n    getGain: function(){\n        return this.gainNode.gain.value;  // or do we trust in this.gain ??\n    },\n\n    /**\n     * Disables / enables the loop of the {@link AudioData} instance\n     */\n    toggleLoop: function() {\n        if (this._looping == false){\n            this._looping = true;\n        } else {\n            this._looping = false;\n        }\n        try {\n            //this.pause();\n            this.audio.loop = this._looping;\n            //this.play();\n        } catch (err) {\n            console.warn(\"Can't set loop state: \" + err);\n        }\n    },\n\n    /**\n     * Disables / enables the loop of the {@link AudioData} instance\n     */\n    setLoopState: function(bool) {\n        this._looping = bool;\n        try {\n            //this.pause();\n            this.audio.loop = this._looping;\n            //this.play();\n        } catch (err) {\n            console.warn(\"Can't set loop state: \" + err);\n        }\n    },\n\n    /**\n     * Sets start position for playback\n     *\n     * @param {float} pos  - Start playback always at passed\n     * position\n     */\n    setRangeStart: function(pos){\n        pos = parseFloat(pos);\n        if (pos >= 0) {\n            pos = pos;\n        } else {\n            pos = 0;\n        }\n        this._rangeStart = pos;\n        try {\n            this.audio.loopStart = this._rangeStart;\n            console.debug(\"Loop start: \" + pos);\n        } catch (err) {\n            console.warn(\"Can't set loop start yet..\" + err);\n        }\n    },\n\n    /**\n     * Sets end position for playback\n     *\n     * @param {float} pos  - Playback end always at passed\n     * position\n     */\n    setRangeEnd: function(pos){\n        pos = parseFloat(pos);\n        if (pos <= this._buffer.duration) {\n            pos = pos;\n        } else {\n            pos = this._buffer.duration;\n        }\n        this._rangeEnd = pos;\n        try {\n            this.audio.loopEnd = this._rangeEnd;\n            console.debug(\"Loop end: \" + pos);\n        } catch (err){\n            console.warn(\"Can't set loop start yet..\" + err);\n        }\n    },\n\n    /**\n     * Mutes {@link AudioData} instance\n     */\n    mute: function(){\n        this.setGain(0.0);\n    },\n\n    /**\n     * Unmutes {@link AudioData} instance\n     */\n    unmute: function(){\n        this.setGain(1.0);\n    },\n\n    /**\n     * Jump to passed position during playback\n     *\n     * @param {float} pos  - Must be between 0 and {@link\n     * AudioData._rangeEnd}\n     */\n    setTime: function(pos){\n        if ((pos >= 0) && (pos <= this._rangeEnd)){\n            this.stop();\n            this.play(pos);\n        }\n    },\n\n    /**\n     * Returns current playback position\n     *\n     * @return {number} value - Current playback position\n     */\n    getTime: function(){\n        if (this._playing) {\n            return this.audio.context.currentTime - this._startTime + this._startOffset;\n        } else {\n            return this._startOffset;\n        }\n    },\n\n    /**\n    * Disconnects and reconnects {@link AudioData} instance to passed\n    * AudioNode(s)\n    *\n    * @param {...Object} nodes - Variable number of AudioNodes to which\n    * the {@link AudioData} instance shall be reconnected.\n    */\n    reconnect: function(nodes){\n        this.disconnect();\n        if (Object.prototype.toString.call(nodes) != \"[object Array]\"){          // == single Node\n            this.gainNode.connect(nodes);\n        }\n        else {                                          // == array of Nodes\n            for (var i=0; i < nodes.length; i++){\n                this.gainNode.connect(nodes[i]);\n            }\n        }\n    },\n\n    /**\n    * This method will disconnect the {@link AudioData} instance from\n    * all connected nodes (afterwards). Should be mostly\n    * ctx.destination.\n    */\n    disconnect: function(){\n        this.gainNode.disconnect();\n    },\n\n    /**\n     * Method will check whether the passed URL has an extension.\n     * Additionaly, {@link AudioData#_checkSupport} will be executed to\n     * identify the possible containers / codecs.\n     *\n     * @protected\n     * @param {string} url - URL\n     *\n     * @return {string} src - URL including file type extension which should be\n     * compatible with browser\n     */\n    _checkExtension: function(url){\n        var supports = this._checkSupport();\n\n        var re = /\\.[0-9a-z]{3,4}$/i;   // strips the file extension (must be 3 or 4 characters)\n        var ext = re.exec(url);\n        if (ext == null){\n            if (supports.indexOf(\".opus\") > -1) {\n                var src = url + \".opus\";\n            }\n            else if (supports.indexOf(\".mp4\") > -1) {\n                var src = url + \".mp4\";\n            }\n            /*\n            else if (supports.indexOf(\".m4a\") > -1) {\n                var src = url + \".m4a\";\n            }*/\n            else if (supports.indexOf(\".ogg\") > -1) {\n                var src = url + \".ogg\";\n            }\n            else if (supports.indexOf(\".mp3\") > -1) {\n                var src = url + \".mp3\";\n            }\n            else if (supports.indexOf(\".wav\") > -1) {\n                var src = url + \".wav\";\n            }\n        } else {\n            if (supports.indexOf(ext[0]) > -1){\n                var src = url;\n            } else {\n                console.error(\"ERROR: Your browser does not support the needed audio codec (\" + ext[0] + \")!\");\n                var src = \"\";\n            }\n        }\n        return src\n    },\n\n    /**\n     * Detects whether the browser can play one of the listed containers\n     * / codecs\n     *\n     * @protected\n     * @return {string[]} support - An array containing all compatible\n     * formats\n     */\n    _checkSupport: function (){\n        var supports = [];\n        if (document.createElement('audio').canPlayType(\"audio/ogg codecs=opus\") != \"\"){\n            supports.push(\".opus\");\n        }\n        if (document.createElement('audio').canPlayType(\"audio/ogg\") != \"\"){\n            supports.push(\".ogg\");\n        }\n        if (document.createElement('audio').canPlayType(\"audio/x-wav\") != \"\"){\n            supports.push(\".wav\");\n        }\n        if (document.createElement('audio').canPlayType(\"audio/mpeg\") != \"\"){\n            supports.push(\".mp3\");\n        }\n        if (document.createElement('audio').canPlayType('audio/mp4') != \"\"){\n            supports.push(\".mp4\");\n        }\n        if (document.createElement('audio').canPlayType('audio/mp4; codecs=\"mp4a.40.5\"') != \"\"){\n            supports.push(\".m4a\");\n        }\n        console.debug(\"Your browser seems to support these containers: \" + supports);\n        return supports;\n    },\n\n    /**\n     * Load passed audio signal\n     *\n     * @protected\n     * @param {string} url - URL\n     */\n    _loadSound: function(url) {\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n\n        // Decode asynchronously\n        var that = this;\n        request.onload = function() {\n            that.ctx.decodeAudioData(request.response, function(buffer) {\n                that._buffer = buffer;\n                that.canplay = true;\n                that._rangeEnd = that._buffer.duration;\n                that.duration = that._buffer.duration;\n                console.debug(\"audio loaded & decoded!\");\n\n                /**\n                 * Will be fired if the audio data has been loaded &\n                 * decoded\n                 * @event module:irtPlayer~AudioData#audio_loaded\n                 */\n                $(that).triggerHandler(\"audio_loaded\");\n            });\n        };\n        request.send();\n    }\n}\n\n\n/**\n * Represents Controller class which has all the logic to control an\n * array of {@link AudioData} instances\n *\n * @constructor\n *\n * @param {Object} [ctx] - An AudioContext instance.\n * @param {string[]} [sounds] - Array with list of URLs of the audio sources (with or without\n * extension).\n * @param {boolean} [checkSupportFlag=true] - Enable / disable extension\n * support for passed url (see [AudioData._checkExtension]{@link AudioData#_checkExtension})\n *\n * @fires module:irtPlayer~IRTPlayer#player_ready\n * @fires module:irtPlayer~IRTPlayer#player_ended\n */\nvar IRTPlayer = function(ctx, sounds, checkSupportFlag){\n    if (typeof ctx === 'undefined') {\n        if (typeof AudioContext !== 'undefined') {\n            var ctx = new AudioContext();\n        } else if (typeof webkitAudioContext !== 'undefined') {\n            var ctx = new webkitAudioContext();\n        } else {\n            alert(\"Your browser doesn't support the Web Audio API!\");\n        }\n    }\n\n    var checkSupportFlag = typeof checkSupportFlag !== 'undefined' ? checkSupportFlag : true;\n    this._checkSupport = checkSupportFlag;\n    this.ctx = ctx;\n\n    /**\n     * @description Flag if audio signals will be looped\n     * @var {boolean} */\n    this.loopingState = true;\n\n    /**\n     * @description Array of {@link AudioData} instances\n     * @var {AudioData[]} */\n    this.signals = [];\n\n    /** @var {boolean} */\n    this.playing = false;\n    this.canplay = false;\n    this.init(sounds);\n\n    /**\n     * @description Global volume for all {@link AudioData} instances\n     * @var {float} */\n    this.vol = 1.0;\n\n    /**\n     * @description Has array entry integer of currently active file.\n     * See {@link IRTPlayer#muteOthers} or  {@link IRTPlayer#attenuateOthers}\n     * @var {integer}\n     */\n    this.activeSignal = null;\n    //this.muteOthers(0);\n    this._loaded_counter = 0;\n    this._ended_counter = 0;\n    }\n\nIRTPlayer.prototype = {\n\n    /**\n     * Adds all audio signals of passed array to the player\n     *\n     * @param {string[]} sounds - Array of URLs\n     */\n    init: function(sounds){\n        if (typeof sounds != \"undefined\"){\n            for (var i=0; i < sounds.length; i++) {\n                //this.signals[i] = new AudioData(this.ctx, sounds[i]); // can be also used to reset tracks array\n                this.addURL(sounds[i]);\n            }\n\n            // we must bind the event listeners here, because within\n            // addURL() it would fulfilled every time the event would\n            // be triggered, since the signals[] array does not yet\n            // contain all signals during addURL() calls here..\n            /*\n            for (var i=0; i < this.signals.length; i++){\n                this._addEventListener(this.signals[i]);\n            }\n            */\n        }\n        else {\n            console.warn('No urls for sounds passed');\n        }\n    },\n\n    /**\n     * Will add audio sources manually to the {@link IRTPlayer} instance\n     *\n     * @param {string} url - URL of to be added audio source\n     */\n    addURL: function(url){\n        var audio = new AudioData(this.ctx, url, this.ctx.destination, this._checkSupport);\n        this.addAudioData(audio);\n\n        // The event listener must be registered before the event trigger can be\n        // created! So we call the load() method explicitely afterwards.\n        audio.load();\n    },\n\n    /**\n     * Will add {@link AudioData} instances to the {@link IRTPlayer} instance\n     *\n     * @param {AudioData} audioData - instance of to be added audio data object\n     */\n    addAudioData: function(audioData){\n        this._addEventListener(audioData);\n        audioData.setLoopState(false);\n        this.signals.push(audioData);\n    },\n\n    _addEventListener: function(audioData){\n        // NOTE: This is likely working only due to the delayed loading of\n        // the audio files. As we all know, the event listener must be already registered\n        // before the event trigger can be registered as well. So in the worst case,\n        // the audio files will be loaded and decoded _before_ the listener is\n        // registered which means that NO event will be triggered and received..!\n        // TODO: find a good workaround for this issue!\n        $(audioData).on(\"audio_loaded\", function(){\n            this._loaded_counter += 1;\n            if (this._loaded_counter == this.signals.length){\n                console.debug(\"All buffers are loaded & decoded\");\n                /**\n                 * Will be fired to the DOM once all audio signals are loaded.\n                 * This event is triggered to the DOM and not to the object instance\n                 * as this would mean that the listener would have to be registered on\n                 * the not yet exisiting object instance... ==> logic proplem.\n                 * TODO: find alternative solution with promises, callback, etc\n                 * @event module:irtPlayer~IRTPlayer#player_ready\n                 */\n                $(this).triggerHandler(\"player_ready\");\n                this.canplay = true;\n                this.duration = this.signals[0].duration;\n            }\n        }.bind(this));\n\n        $(audioData).on(\"audio_ended\", function(){\n            this._ended_counter += 1;\n            if (this._ended_counter == this.signals.length){\n                this.playing = false;\n                console.debug(\"All buffers ended\");\n                /**\n                 * Will be fired to the DOM once all audio signals are loaded.\n                 * This event is triggered to the DOM and not to the object instance\n                 * as this would mean that the listener would have to be registered on\n                 * the not yet exisiting object instance... ==> logic proplem.\n                 * TODO: find alternative solution with promises, callback, etc\n                 * @event module:irtPlayer~IRTPlayer#player_ended\n                 */\n                $(this).triggerHandler(\"player_ended\");\n            }\n        }.bind(this));\n    },\n\n    /**\n     * Toggles play / pause of playback\n     */\n    togglePlay: function(){\n        if (this.playing == false){\n            this.play();\n        }\n        else {\n            this.pause();\n        }\n    },\n\n    /**\n     * Starts playback of all audio sources in {@link IRTPlayer#signals}\n     */\n    play: function(){\n        this._do('play');\n        this.playing = true;\n        this._do('setLoopState', this.loopingState);\n        this._ended_counter = 0;\n    },\n\n    /**\n     * Pauses playback of all audio sources in {@link IRTPlayer#signals}\n     */\n    pause: function(){\n        this._do('pause');\n        this.playing = false;\n    },\n\n    /**\n     * Stops playback of all audio sources in {@link IRTPlayer#signals}\n     */\n    stop: function(){\n        this._do('stop');\n        this.playing = false;\n        this._do(\"setLoopState\", false);\n    },\n\n    /**\n     * Will mute all audio sources of {@link IRTPlayer#signals} but the\n     * one with the passed index\n     *\n     * @param {integer} id - Array index number of active audio source\n     */\n    muteOthers: function(id){\n        id = parseInt(id);\n        if ((id < this.signals.length) && (id >= 0)){\n            this._do('mute');\n            this.signals[id].unmute();\n            this.activeSignal = id;\n        }\n        else{\n            console.error(\"Passed array index invalid!\")\n        }\n    },\n\n    /**\n     * Will unmute all audio sources in {@link IRTPlayer#signals}\n     */\n    unmuteAll: function(){\n        this._do('unmute');\n        this.activeSignal = null;\n    },\n\n    /**\n     * Will attenuate all audio sources of {@link IRTPlayer#signals} but the\n     * one with the passed index. The active one will have gain value of\n     * {@link IRTPlayer#vol}\n     *\n     * @param {integer} id - Array index number of active audio source\n     * @param {float} attenuation - Gain value for other (attenuated)\n     * audio sources\n     */\n    attenuateOthers: function(id, attenuation){\n        id = parseInt(id);\n        if ((id < this.signals.length) && (id >= 0)){\n            this._do('setGain', attenuation);\n            this.signals[id].setGain(this.vol);\n            this.activeSignal = id;\n        }\n        else{\n            console.error(\"Passed array index invalid!\")\n        }\n    },\n\n    /**\n     * Disables / enables looping of the audio sources\n     */\n    toggleLoop: function() {\n        if (this.loopingState == false){\n            this.loopingState = true;\n        }\n        else {\n            this.loopingState = false;\n        }\n        this._do('toggleLoop');\n    },\n\n    /**\n     * Sets start position for playback\n     *\n     * @param {float} pos  - Start playback always at passed\n     * position for all audio sources in {@link IRTPlayer#signals}\n     */\n    setRangeStart: function(pos){\n        console.info(\"Range start: \" + pos);\n        this._do('setRangeStart', pos);\n    },\n\n    /**\n     * Sets end position for playback\n     *\n     * @param {float} pos  - End playback always at passed\n     * position for all audio sources in {@link IRTPlayer#signals}\n     */\n    setRangeEnd: function(pos){\n        console.info(\"Range end: \" + pos);\n        this._do('setRangeEnd', pos);\n    },\n\n    /**\n     * Jump to passed position during playback\n     *\n     * @param {float} time  - Must be between 0 and {@link\n     * AudioData#_rangeEnd}\n     */\n    setTime: function(time){\n        this._do('setTime', time);\n    },\n\n    /**\n     * Returns current position of playback\n     * @return {number} pos - Current playback position\n     */\n    getTime: function(){\n        return this.signals[0].getTime();\n    },\n\n    /**\n     * Helper function to apply AudioData methods for all instances in\n     * {@link IRTPlayer#signals} array\n     * @param {string} func - Name of the method to be executed\n     * @param {...args} args - variable number of additional arguments that\n     * should be passed to the method\n     * @protected\n     */\n    _do: function(func){\n        if (arguments.length == 2){\n            var args = arguments[1];    // prevents that a single argument will be passed as array with one entry\n        } else {\n            var args = Array.prototype.splice.call(arguments, 1);\n        }\n        for (var i=0; i < this.signals.length; i++){\n            this.signals[i][func](args);\n        }\n    }\n}\n\n\nexports.AudioData = AudioData;\nexports.IRTPlayer = IRTPlayer;\n",
    "/*jshint esversion: 6 */\n/**\n * @file media_controller.js\n * @author Michael Weitnauer: {@link weitnauer@irt.de}\n */\n\n/**\n * @module bogJS\n *\n */\n\nvar GainController = require('./gain_controller');\n\n/**\n * Represents MediaElementController class which has all the logic to control a HTML5 media element\n * Every track / channel of the media element can be controlled separately.\n *\n * @constructor\n *\n * @param {Object} ctx - An AudioContext instance.\n * @param {string} mediaElement - HTML5 media element\n * @param {Number} tracks - Number of media element channels\n * @param {Object} [targetNodeList=ctx.destination] - The audio node to which the MediaElementController\n * @fires module:bogJS~MediaElementController#audio_init\n * @fires module:bogJS~MediaElementController#audio_loaded\n * @fires module:bogJS~MediaElementController#audio_ended\n */\nvar MediaElementController = function(ctx, mediaElement, tracks, targetNodeList) {\n    /** @protected\n     * @var {boolean} */\n    this.canplay = false;\n\n    /** @var {Object.<AudioContext>} */\n    this.ctx = ctx;\n\n    this._mediaElement = mediaElement;\n    this._mediaSourceNode = this.ctx.createMediaElementSource(this._mediaElement);\n    this._tracks = tracks;\n    this._splitter = this.ctx.createChannelSplitter(this._tracks);\n    this._mediaSourceNode.connect(this._splitter);\n\n    this.gainController = [];\n    if (typeof targetNodeList === 'undefined') {\n        var targetNodeList = [];\n        for (var i = 0; i < this._tracks; i++){\n            targetNodeList.push(this.ctx.destination);\n        }\n    }\n    for (var i = 0; i < this._tracks; i++){\n        this.gainController[i] = new GainController(this.ctx, targetNodeList[i]);\n\n        // TODO: Workaround for wrong channel order of decoded bitstream\n        this._splitter.connect(this.gainController[i].gainNode, i);\n    }\n\n    this._mediaElement.onended = function(){\n        console.debug(\"Audio buffer has ended!\");\n        this._playing = false;\n\n        /**\n         * Will be fired once the playback has ended\n         * @event module:bogJS~MediaElementController#audio_ended\n         */\n        $(this).triggerHandler(\"audio_ended\");\n    }.bind(this);\n\n    this._mediaElement.onstalled = function(){\n        console.info(\"Pausing playback - need to buffer more\");\n        this.ctx.suspend();\n    }.bind(this);\n\n    this._mediaElement.onplaying = function(){\n        console.info(\"Resuming playback of media element\");\n        if (this.ctx.state === \"suspended\"){\n            this.ctx.resume();\n        }\n    }.bind(this);\n\n    this._mediaElement.oncanplaythrough = function(){\n        this.canplay = true;\n        console.info(\"Playback of media element can start\");\n\n        /**\n         * Will be fired if media element playback can start\n         * @event module:bogJS~MediaElementController#audio_loaded\n         */\n        $(this).triggerHandler('audio_loaded');\n        if (this.ctx.state === \"suspended\"){\n            this.ctx.resume();\n        }\n    }.bind(this);\n\n    this._mediaElement.load();\n    this._playing = false;\n    this._looping = false;\n}\n\nMediaElementController.prototype = {\n    /**\n    * Start playback of audio signal\n    *\n    * @param {number} [pos] - Position from which the playback shall start\n    * (optional)\n    */\n    play: function(pos){\n        if (typeof pos != 'number'){        // detection with _.isNumber() could be more robust\n            this._mediaElement.play();\n        } else {\n            console.debug(\"Starting playback at \" + pos);\n            this.setTime(pos);\n            this._mediaElement.play()\n        }\n        this._playing = true;\n    },\n\n    /**\n     * Pause playback.\n     *\n     */\n    pause: function(){\n        this._mediaElement.pause();\n        this._playing = false;\n    },\n\n    /**\n     * Stops playback.\n     */\n    stop: function(){\n        this._mediaElement.pause();\n        this._playing = false;\n        this._mediaElement.currentTime = 0;\n    },\n\n    /**\n     * Sets gain of {@link MediaElementController} instance\n     *\n     * @param {float} gain - Value between 0.0 and 1.0\n     */\n    setVolume: function(vol){\n        this._mediaElement.volume = vol;\n    },\n\n    /**\n     * Returns current gain value of {@link MediaElementController} instance\n     *\n     * @return {float} value - Float gain value\n     */\n    getVolume: function(){\n        return this._mediaElement.volume;\n    },\n\n    /**\n     * Disables / enables the loop of the {@link MediaElementController} instance\n     */\n    toggleLoop: function() {\n        if (this._looping == false){\n            this._looping = true;\n        } else {\n            this._looping = false;\n        }\n        this._mediaElement.loop = this._looping;\n    },\n\n    /**\n     * Disables / enables the loop of the {@link MediaElementController} instance\n     */\n    setLoopState: function(bool) {\n        this._looping = bool;\n        this._mediaElement.loop = this._looping;\n    },\n\n    /**\n     * Mutes {@link MediaElementController} instance\n     */\n    mute: function(){\n        this._mediaElement.muted = true;\n    },\n\n    /**\n     * Unmutes {@link MediaElementController} instance\n     */\n    unmute: function(){\n        this._mediaElement.muted = false;\n    },\n\n    /**\n     * Jump to passed position during playback\n     *\n     * @param {float} pos  - Must be >= 0\n     */\n    setTime: function(pos){\n        if (pos >= 0){\n            this._mediaElement.currentTime = pos;\n        }\n    },\n\n    /**\n     * Returns current playback position\n     *\n     * @return {number} value - Current playback position\n     */\n    getTime: function(){\n        return this._mediaElement.currentTime;\n    }\n}\n\nmodule.exports = MediaElementController;\n",
    "/*jshint esversion: 6 */\n/**\n * @file object.js\n * @author Michael Weitnauer [weitnauer@irt.de]\n */\n\n/**\n * @module bogJS\n */\n\nvar GainController = require('./gain_controller');\n\n/**\n * Represents ObjectController class which has all the logic to control an\n * audio object\n *\n * @constructor\n *\n * @param {Object} ctx - An AudioContext instance.\n * @param {AudioData} sourceNode - Instance of an {@link\n * module:irtPlayer~AudioData|AudioData} object.\n * @param {AudioData} [targetNode=ctx.destination] - Instance of an\n * Web Audio API node to which the output of the ObjectController\n * shall be connected to.\n */\n\nvar ObjectController = function(ctx, sourceNode, targetNode=ctx.destination) {\n    /**\n     * Instance of Web Audio Panner node\n     * @var {Object.<AudioContext.PannerNode>}\n     */\n    this.panner = ctx.createPanner();\n\n    // Experimental highpass to avoid sizzling noinse while chaning view / angle\n    //this.highpass = ctx.createBiquadFilter();\n    //this.highpass.type = \"highpass\";\n    //this.setHighpassFreq(80);\n    //this.highpass.connect(this.panner);\n\n    /**\n     * Has the current panning mode of the object\n     * @readonly\n     */\n    this.panningType = \"equalpower\";\n    this.panner.maxDistance = 10;\n\n    this.setPanningType(this.panningType);\n    this.position = [0, 0, 0];  // FIXME: make private and use set and get methods\n    this.gain = 1;  // valid values between 0 and 1  // FIXME: make private and use set and get methods\n\n    this._state = false;\n    this.stateNode = new GainController(ctx, this.panner);\n    this.interactiveGain = new GainController(ctx, this.stateNode.gainNode);\n\n    this.setAudio(sourceNode);\n    this.panner.connect(targetNode);\n};\n\nObjectController.prototype = {\n\n    /**\n     * Change position of panner object within 3D space\n     *\n     * @param {Float[]} xyz - An array with three entries: [x, y, z]\n\n     * @see Interpolation as per AudioParam Interface not possible with\n     * current WAA version. The PannerNode will be deprecated in V1\n     * and a new SpatializerNode will be introduced that should\n     * support interpolation _and_ loading own HRTF databases!!\n     * {@link https://github.com/WebAudio/web-audio-api/issues/372| GitHub issue 372}\n     */\n    setPosition: function(xyz){\n        var my_xyz = [parseFloat(xyz[0]), parseFloat(xyz[1]), parseFloat(xyz[2])];\n        this.panner.setPosition(xyz[0], xyz[1], xyz[2]);\n        console.debug(\"New Position: \" + my_xyz);\n        this.position = xyz;\n    },\n\n    /**\n     * Get current Position of object\n     * @return {Float[]} position - Array with current [x, y, z] values\n     */\n    getPosition: function(){\n        return this.position;\n    },\n\n    /**\n     * Enabling / disabling the object\n     *\n     * @param {Boolean} state - Enables / disables the panner object\n     * instance\n     */\n    setStatus: function(state){\n        if ((state === true) || (state == 1)){\n            this.stateNode.unmute();\n            this._state = true;\n        }\n        else if ((state === false) || (state == 0)){\n            this.stateNode.mute();\n            this._state = false;\n        }\n        console.info(\"Setting state to \" + this._state);\n    },\n\n    /**\n     * Sets gain value of {@link\n     * module:bogJS~GainController#gainNode|GainController.gainNode}\n     * Separate GainNode to be used for interactive Gain control, aka\n     * cross-fading between one group and another.\n     * @param {Float} gain - Must be between 0.0 and 1.0\n     */\n    setInteractiveGain: function(gain){\n        this.interactiveGain.setGain(gain);\n        this._interactiveGain = gain;\n    },\n\n    /**\n     * Returns current object state\n     * @return {Boolean} status\n     */\n    getStatus: function(){\n        return this._state;\n    },\n\n    /**\n     * Sets gain value of {@link\n     * module:irtPlayer~AudioData#gainNode|AudioData.gainNode}\n     *\n     * @param {Float} gain - Must be between 0.0 and 1.0\n     * @param {Float} [time=Now] - At which time shall the gain value be applied\n     * @param {Boolean} [interpolation=false] - Set to true if gain\n     * value shall be linear faded to passed gain value from passed time on. If\n     * false, the gain value will be applied immediately.\n     */\n    setGain: function(gain, time=\"now\", interpolation=false){\n        if (time === \"now\") {\n            this.audio.setGain(gain);\n            this.gain = gain;\n        }\n        else if ((time !== \"now\") && (interpolation === false)) {\n            this.audio.gainNode.gain.setValueAtTime(gain, time);\n        }\n        else if ((time !== \"now\") && (interpolation !== false)){\n            this.audio.gainNode.gain.linearRampToValueAtTime(gain, time);\n        }\n    },\n\n    /**\n     * Get current gain value of {@link\n     * module:irtPlayer~AudioData#gainNode|AudioData.gainNode}\n     *\n     * @return {Float} gain\n     */\n    getGain: function(){\n        return this.audio.getGain();  // or do we trust in this.gain ??\n    },\n\n    /**\n     * Set panning type of Panner object instance.\n     * Currently, \"equalpower\" only supports Stereo (2ch) panning.\n     *\n     * @param {(\"HRTF\"|\"equalpower\")} panningType - Choose \"HRTF\" for binaural\n     * rendering or \"equalpower\" for Stereo rendering.\n     */\n    setPanningType: function(panningType){\n        if ((panningType === \"HRTF\") || (panningType === \"equalpower\")){\n            this.panner.panningModel = panningType;\n            this.panningType = this.panner.panningModel;\n        }\n        else {\n            console.error(\"Only >>HRTF<< or >>equalpower<< are valid types\");\n        }\n    },\n\n    /**\n     * Get panning type\n     * @return {(\"HRTF\"|\"equalpower\")} panningType - Either \"HRTF\" or \"equalpower\"\n     */\n    getPanningType: function(){\n        return this.panner.panningModel;\n    },\n\n    /**\n     * Sets the double value describing how quickly the volume is reduced\n     * as the source moves away from the listener. The initial default value\n     * is 1. This value is used by all distance models.\n     *\n     * @param {Float} factor\n     */\n    setRollOffFactor: function(factor){\n        this.panner.rolloffFactor = factor;\n    },\n\n    /**\n     * Sets the value determining which algorithm to use to reduce the\n     * volume of the audio source as it moves away from the listener. The\n     * initial default value is \"inverse\" which should be equivalent to 1/r.\n     *\n     * @param {(\"inverse\"|\"exponential\"|\"linear\")} model - \"inverse\" is the default setting\n     */\n    setDistanceModel: function(model){\n        this.panner.distanceModel = model;\n    },\n\n    /**\n     * Sets the value representing the reference distance for reducing volume\n     * as the audio source moves further from the listener. The initial\n     * default value is 1. This value is used by all distance models.\n     *\n     * @param {float} refDistance\n     */\n    setRefDistance: function(refDistance){\n        this.panner.refDistance = refDistance;\n    },\n\n    /**\n     * Sets the value representing the maximum distance between the audio\n     * source and the listener, after which the volume is not reduced any\n     * further. The initial default value is 10000. This value is used\n     * only by the linear distance model.\n     *\n     * @param {float} maxDistance\n     */\n    setMaxDistance: function(maxDistance){\n        this.panner.maxDistance = maxDistance;\n    },\n\n    /**\n     * Connects the input of the ObjectController instance\n     * with the output of the passed audioNode.\n     *\n     * @param {AudioData} audioNode - Instance of an {@link\n     * module:irtPlayer~AudioData|AudioData} or GainController object.\n     */\n    setAudio: function(audioNode){\n        // call disconnect only if this.audio exists\n        // it is absolutely essential to disconnect the old audio instance\n        // before the new one can be assigned!\n        /* FIXME: clarify the expected behaviour of a setAudio() method!\n        if (this.audio){\n            this.audio.disconnect(this.panner);\n        }\n        */\n        this.audio = audioNode;\n        // just to make sure we assigned a valid audioNode..\n        if (this.audio){\n            // FIXME: AudioData() class should also have a connect method.\n            // Better would be to use derived class mechanisms.\n            if(this.audio.connect) {\n                this.audio.connect(this.interactiveGain.gainNode);\n            }\n            else {\n                this.audio.reconnect(this.interactiveGain.gainNode);\n            }\n        }\n    },\n\n    setHighpassFreq: function(freq){\n        this.highpass.frequency.value = freq;\n    }\n};\n\nmodule.exports = ObjectController;\n",
    "/*jshint esversion: 6 */\n/**\n * @file object_manager.js\n * @author Michael Weitnauer [weitnauer@irt.de]\n */\n\n/**\n * @module bogJS\n */\n\n/**\n * @typedef keyframes\n * @type {object}\n * @example\n * keyframes = {0.0: [{obj: \"Cello\", cmd: \"position\", params: [3.2, 4, 0]},\n *                    {obj: \"Cembalo\", cmd: \"gain\", params: 0.5}],\n *              0.4: [{obj: \"Cembalo\", cmd: \"is_present\", params: 0},\n *                    {obj: \"Cello\", cmd: \"gain\", params: 1.0}],\n *              235: [{obj: \"Viola\", cmd: \"is_present\", params: 1},\n *                    {obj: \"Viola\", cmd: \"position\", params: [0.5, 3.2, 0.5]}]};\n */\n\n/**\n * @typedef audioURLs\n * @type {object}\n * @example\n * audioURLs = {Cello: \"http://sounds.myserver.com/Cello.ogg\",\n *              Cembalo: \"http://sounds.myserver.com/Cembalo.wav\",\n *              Viola: \"../../Viola.m4a\"}\n */\n\n/**\n * @typedef sceneInfo\n * @type {object}\n * @example\n * sceneInfo = {name: \"My fancy scene\",\n *              listener_position: [0, 0, 0],\n *              listener_orientation: [0, 1, 0],\n *              object_count: 3,\n *              room_dimensions: [10, 10, 3]}\n */\n\n/**\n * @typedef singleObjects\n * @type {object}\n * @example\n * singleObjects = {\"70.754\":[\"Birds1_L\",\"Birds1_R\"],\n *                  \"72.0\":[\"Birds2_L\",\"Birds2_R\"],\n *                  \"79.29\":[\"Birds3\"],\n *                  \"90.65\":[\"Crows\"],\n *                  \"102.55\":[\"Vulcano_L\",\"Vulcano_R\"],\n *                  \"117.55\":[\"Stones_L\",\"Stones_R\"]}\n */\n\n/**\n * @typedef groupObjects\n * @type {object}\n * @example\n * groupObjects = {\"78.2\":[\"Birds1_L\",\"Birds1_R\"],\n *                  \"90.65\":[\"Birds\"],\n *                  \"117.55\":[\"Stones_L\",\"Stones_R\"]}\n */\n\n/**\n * @typedef audiobeds\n * @type {object}\n * @example\n * audiobeds =  {Bed0: \"bed_0\", Bed1: \"bed_1\", Bed2: \"bed_2\", Bed3: \"bed_3\", Bed4: \"bed_4\"}\n */\n\nwindow._ = require('underscore');\nvar WAAClock = require('waaclock');\nvar ChannelOrderTest = require('./channelorder_test');\nvar AudioData = require('./html5_player/core').AudioData;\nvar IRTPlayer = require('./html5_player/core').IRTPlayer;\nvar ObjectController = require('./object');\nvar GainController = require('./gain_controller');\nvar MediaElementController = require('./media_controller');\nvar SceneReader = require('./scene_reader');\n\n/**\n * Represents ObjectManager class which has all the logic to control\n * several {@link module:bogJS~ObjectController|ObjectController} instances along with metadata\n *\n * @constructor\n *\n * @param {string} url - URL of the metadata source.\n * @param {Object} [ctx] - An AudioContext instance.\n * @param {Object} [reader] - A reader instance that has a load() method\n * and will fire a event called \"scene_loaded\". The event must also pass\n * {@link module:bogJS~keyframes|keyframes}, {@link module:bogJS~audioURLs|audioURLs}\n * and {@link module:bogJS~sceneInfo|sceneInfo}. See {@link\n * module:bogJS~SceneReader#load|SceneReader.load()}\n * @param {Object} [mediaElement] - A HMTL5 media element instance to be used as\n * audio bed. If passed, any potentially other given audio bed from the scene\n * file will be ignored.\n * @param {Number} [audiobed_tracks] - If mediaElement is passed, the expected\n * channel number must be passed as well.\n * @param {String} [channelorder_root] - Path to encoded channel order detection\n * test files. See also [ChannelOrderTest]{@link module:bogJS~ChannelOrderTest}\n * and the README.md file.\n * @fires module:bogJS~ObjectManager#om_newGain\n * @fires module:bogJS~ObjectManager#om_newPosition\n * @fires module:bogJS~ObjectManager#om_newTrackMapping\n * @fires module:bogJS~ObjectManager#om_isActive\n *\n */\nvar ObjectManager = function(url, ctx, reader, mediaElement, audiobed_tracks, channelorder_root){\n    if (typeof ctx === 'undefined') {\n        if (typeof AudioContext !== 'undefined') {\n            var ctx = new AudioContext();\n        } else if (typeof webkitAudioContext !== 'undefined') {\n            var ctx = new webkitAudioContext();\n        } else {\n            alert(\"Your browser doesn't support the Web Audio API!\");\n        }\n    }\n    /**\n     * Instance of Web Audio AudioContext\n     * @var {Object.<AudioContext>}\n     */\n    this.ctx = ctx;\n    this.masterGain = new GainController(this.ctx, ctx.destination);\n    /**\n     * Instance of {@link SceneReader}\n     * @var {(CustomReaderInstance|Object.<module:bogJS~SceneReader>)}\n     */\n    this.reader = reader || new SceneReader();\n\n    this._mediaElement = mediaElement;\n    this._mediaElementTracks = audiobed_tracks;\n    this._channorder_root = channelorder_root;\n\n    /**\n     * Instance of {@link module:irtPlayer~IRTPlayer|IRTPlayer}\n     * @var {Object.<module:irtPlayer~IRTPlayer>}\n     */\n    this._clock = new WAAClock(this.ctx);\n    this._evts = {};\n    this._timer_evt = false;\n    this._audioURLs = {};\n    this._currentKeyframeIndex = 0;\n    this._kfMapping = {};\n    this._last_kfMapping = {};\n\n    this._audiobedTracks = {};\n    this._groupObjURLs = {};\n    this._singleObjURLs = {};\n    this._audiobed = false;\n    this._groupObjPlayers = {};\n    this._singleObjAudios = {};\n    this._kf_canplay = {};\n\n    /**\n     * Array of all {@link module:bogJS~ObjectController|ObjectController} instances that are controlled\n     * by the {@link module:bogJS~ObjectManager|ObjectManager}\n     * @var {module:bogJS~ObjectController[]}\n     */\n    this.objects = {};\n    this._audioInstances = {};\n    this._panningType = \"equalpower\";\n\n    /**\n     * If set to true, the ObjectManager will ignore keyframe updates!\n     * @var {boolean}\n     * @default false\n     */\n    this.interactive = false;\n    this.playing = false;\n\n    this._listenerOrientation = [0, 0, -1];\n    this.setListenerOrientation(0, 0, -1);\n\n    $(this.reader).on('scene_loaded', function(e, keyframes, audioURLs, sceneInfo, groupObjects, singleObjects, audiobeds, interactiveInfo){\n        console.debug('Scene data loaded!');\n\n        /**\n         * 'Dictionary' containing keyframes + commands triplets per keyframe.\n         * @abstract\n         * @var {module:bogJS~keyframes}\n         */\n        this._keyframes = keyframes;\n\n        /**\n         * 'Dictionary' containing mapping for objects and URLs.\n         * @abstract\n         * @var {module:bogJS~audioURLs}\n         */\n        this._audioURLs = audioURLs;\n\n        /**\n         * 'Dictionary' containing additional scene info\n         * @abstract\n         * @var {module:bogJS~sceneInfo}\n         */\n        this._sceneInfo = sceneInfo;\n        /**\n         * 'Dictionary' containing interactive info\n         * @abstract\n         * @var {module:bogJS~interactiveInfo}\n         */\n        this.interactiveInfo = interactiveInfo;\n        this.object_count = sceneInfo.object_count || 0;\n        this.roomDimensions = sceneInfo.room_dimensions || [10, 10, 3];\n        this._listenerPosition = sceneInfo.listener_position || [0, 0, 0];\n\n        /**\n         * 'Dictionary' containing mapping for objects and audiobed tracks\n         * @abstract\n         * @var {module:bogJS~audiobeds}\n         */\n        this._audiobedTracks = audiobeds;\n\n        /**\n         * 'Dictionary' containing info to identify grouped objects\n         * @abstract\n         * @var {module:bogJS~groupObjects}\n         */\n        this._groupObjURLs = groupObjects;\n\n        /**\n         * 'Dictionary' containing info to identify single objects\n         * @abstract\n         * @var {module:bogJS~singleObjects}\n         */\n        this._singleObjURLs = singleObjects;\n\n        this.init();\n    }.bind(this));\n    this.reader.load(url);\n};\n\nObjectManager.prototype = {\n\n    /**\n     * Creates [AudioData]{@link module:irtPlayer~AudioData} and\n     * [ObjectController]{@link module:bogJS~ObjectController} instances and\n     * adds the AudioData instances to the {@link module:bogJS~ObjectManager#player}\n     */\n    init: function(){\n        if (typeof this._mediaElement !== 'undefined'){\n            this._audiobed = new MediaElementController(this.ctx, this._mediaElement, this._mediaElementTracks);\n        } else if (this._sceneInfo.audiobed_url){\n            var a = document.createElement(\"audio\");\n            var src = this._sceneInfo.audiobed_url;\n            if (/\\.[0-9a-z]{3,4}$/i.exec(src) === null){  // if no file extension is stated\n                if (a.canPlayType('audio/ogg codecs=opus')) {\n                    a.type= 'audio/ogg codecs=opus';\n                    src = src + '.opus';\n                } else {\n                    a.type = 'audio/mp4';\n                    src = src + '.mp4';\n                }\n            }\n            a.src = src;\n            this._mediaElementTracks = parseInt(this._sceneInfo.audiobed_tracks);\n            this._audiobed = new MediaElementController(this.ctx, a, this._mediaElementTracks);\n        }\n        if (this._audiobed !== false){\n            // If there is an audiobed, we can trigger the om_ready event even\n            // though other keyframe assets are not yet ready. We need to trigger\n            // the event here in case NO other assets are used.\n            // This is for sure not really a sophisticated way to solve this but it\n            // should work. In the worst case, the playback will pause again if\n            // the assets are not yet loaded and decoded.\n            $(this._audiobed).on('audio_loaded', function(){\n                console.debug(\"Audiobed loaded, detect channel order..\");\n                var url = \"\";\n                if (this._audiobed._mediaElement.src !== \"\"){\n                    url = this._audiobed._mediaElement.src;\n                } else if (this._audiobed._mediaElement.currentSrc !== \"\") {\n                    url = this._audiobed._mediaElement.currentSrc;\n                } else {\n                    console.error(\"The src of the audiobed couldn't be detected!\");\n                }\n                var re = /\\.[0-9a-z]{3,4}$/i;  // strips the file extension (must be 3 or 4 characters)\n                var container = re.exec(url)[0];\n                container = container.split('.').join(\"\"); // removes dot from the string\n                this._chOrderTest = new ChannelOrderTest(container,\n                                                     this._mediaElementTracks,\n                                                     this.ctx,\n                                                     this._channorder_root);\n                $(document).triggerHandler('om_ready');\n                console.debug('Audiobed ready for playback');\n                //var chOrder = this._chOrderTest.testChs();\n            }.bind(this));\n\n            $(this._audiobed).on('audio_ended', function(){\n                $(document).triggerHandler('om_ended');\n                om.stop();\n            }.bind(this));\n\n            $(document).on('order_ready', function(e, order){\n                console.debug('Got channel order: ' + order);\n                this._chOrder = order;\n                // firstly, disconnect any connections to other nodes to avoid\n                // confusions and strange behaviours..\n                for (var i = 0; i < order.length; i++){\n                    this.objects[\"Bed\"+order[i]].audio.disconnect();\n                }\n                // now assign correct gainController to corresponding\n                // pannerNode\n                for (var i = 0; i < order.length; i++){\n                    console.debug(\"Reconnecting GainController \" + i + \" with Bed \" + order[i]);\n                    this.objects[\"Bed\"+order[i]].setAudio(this._audiobed.gainController[i]);\n                }\n            }.bind(this));\n\n        }\n\n        for (var obj in this._audiobedTracks){\n            var trackNr = parseInt(this._audiobedTracks[obj].split(\"_\")[1]);\n            this.objects[obj] = new ObjectController(this.ctx,\n                                                     this._audiobed.gainController[trackNr],\n                                                     this.masterGain.gainNode);\n            this.objects[obj].audio._id = obj;\n            this.objects[obj].panner._id = obj;\n        }\n\n        for (var kf in this._groupObjURLs){\n            this._groupObjPlayers[kf] = {};\n            this._kf_canplay[kf] = {};\n            for (var group in this._groupObjURLs[kf]){\n                this._kf_canplay[kf][group] = false;\n                var player = new IRTPlayer(this.ctx);\n                $(player).on('player_ready', this._loadedStateDelegate(kf, group));\n                for (var idx in this._groupObjURLs[kf][group]){\n                    var obj = this._groupObjURLs[kf][group][idx];\n                    var url = this._audioURLs[obj];\n                    var audioInstance = new AudioData(this.ctx, url);\n                    audioInstance.load();\n                    audioInstance.setLoopState(false);\n                    this.objects[obj] = new ObjectController(this.ctx,\n                                                             audioInstance,\n                                                             this.masterGain.gainNode);\n                    player.addAudioData(audioInstance);\n                    this._groupObjPlayers[kf][group] = player;\n                }\n            }\n        }\n\n        for (var kf in this._singleObjURLs){\n            this._singleObjAudios[kf] = {};\n            if (!this._kf_canplay[kf]){\n                this._kf_canplay[kf] = {};\n            }\n            for (var idx in this._singleObjURLs[kf]){\n                var obj = this._singleObjURLs[kf][idx];\n                var url = this._audioURLs[obj];\n                this._kf_canplay[kf][obj] = false;\n                var audioInstance = new AudioData(this.ctx, url);\n                $(audioInstance).on(\"audio_loaded\", this._loadedStateDelegate(kf, obj));\n                audioInstance.load();\n                audioInstance.setLoopState(false);\n                this.objects[obj] = new ObjectController(this.ctx,\n                                                         audioInstance,\n                                                         this.masterGain.gainNode);\n                this._singleObjAudios[kf][obj] = audioInstance;\n            }\n        }\n        this.setPanningType(this._panningType);\n        $(document).triggerHandler('om_initialized');\n        console.debug('Scene sucessfully initialized!');\n        if (this.interactiveInfo.switchGroups){\n            for (var g of Object.keys(this.interactiveInfo.switchGroups)){\n                this._initSwitchGroup(g);\n            }\n        }\n        //this.start();\n    },\n\n    /**\n     * Starts playback and rendering of audio scene\n     */\n    start: function(){\n        if ((this._checkReadyStart() === true) && (this.playing === false)) {\n            this._clock.start();\n            this._startTime = this.ctx.currentTime;\n            this._processCurrentKeyframes();\n            if (this._audiobed !== false){\n                this._audiobed.play();\n            }\n            var that = this;\n            if (!this._timer_evt){\n                this._timer_evt = this._clock.setTimeout(function(){\n                    console.debug(that.ctx.currentTime);\n                }, 1).repeat(1);\n            }\n            this.playing = true;\n            return true;\n        } else {\n            console.info(\"Audio signals not yet ready for playing.\");\n            return false;\n        }\n    },\n\n    /**\n     * Pauses playback\n     */\n    pause: function(){\n        this.ctx.suspend();\n        if (this._audiobed !== false){\n            this._audiobed.pause();\n        }\n        this.playing = false;\n    },\n\n    /**\n     * Resumes playback of all objects if paused.\n     *\n     */\n    resume: function(){\n        this.ctx.resume();\n        if (this._audiobed !== false){\n            this._audiobed.play();\n        }\n        this.playing = true;\n    },\n\n    /**\n     * togglePause\n     *\n     */\n    togglePause: function(){\n        if(this.ctx.state === 'running') {\n            this.pause();\n        }\n        else if(this.ctx.state === 'suspended') {\n            this.resume();\n        }\n    },\n\n    /**\n     * Stops playback and internal clock\n     */\n    stop: function(){\n        this._clock.stop();\n        if (this._audiobed !== false){\n            this._audiobed.stop();\n        }\n        for (var kf in this._groupObjPlayers){\n            for (var group in this._groupObjPlayers[kf]){\n                this._groupObjPlayers[kf][group].stop();\n            }\n        }\n        for (var kf in this._singleObjAudios){\n            for (var idx in this._singleObjAudios[kf]){\n                this._singleObjAudios[kf][idx].stop();\n            }\n        }\n        this.playing = false;\n    },\n\n    /**\n     * Will change the playback position of all single, group and audiobed\n     * signals. Further, the closes keyframe ahead of the passed time will be\n     * activated.\n     *\n     * @param {float} time - Desired playback position\n     */\n    setTime: function(time, set_audiobed_time=true){\n        // activate closest keyframe before time to avoid\n        // missing / \"forgetting\" object commands..\n        var times = Object.keys(this._keyframes);\n\n        // works even in case the keys are strings\n        var closest_kf = _.min(times); //Get the lowest numberin case it match nothing.\n        for(var i = 0; i < times.length; i++){\n            if ((times[i] <= time) && (times[i] > closest_kf)){\n                closest_kf = times[i];\n            }\n        }\n        this._handleKeyframe(closest_kf);\n\n        for (var key in this._evts){\n            var evt = this._evts[key];\n            var evt_time = parseFloat(key);\n            var newTime = evt_time - time + this.ctx.currentTime;\n            //console.debug(\"Evt \" + key + \" rescheduled from \" + evt.deadline + \" to \" + newTime);\n            evt.schedule(newTime);\n        }\n\n        // set single and grouped audio signals to the passed position and\n        // check if passed time > duration of the single and grouped audio\n        // signals:\n        var now = this.ctx.currentTime - this._startTime;\n        for (var kf in this._singleObjAudios){\n            var audioStartPos = parseFloat(kf);\n            for (var idx in this._singleObjAudios[kf]){\n                var duration = this._singleObjAudios[kf][idx].duration;\n                var audioNewPos = time - audioStartPos;\n                // negative time values shall stop the signal.\n                if (audioNewPos <= 0){\n                    this._singleObjAudios[kf][idx].stop();\n                } else {\n                    // should stop audio if audioNewPos > duration\n                    this._singleObjAudios[kf][idx].setTime(audioNewPos);\n                    console.debug(\"Set audio \" + idx + \" to position \" + audioNewPos);\n                }\n            }\n        }\n        for (var kf in this._groupObjPlayers){\n            var audioStartPos = parseFloat(kf);\n            for (var group in this._groupObjPlayers[kf]){\n                var duration = this._groupObjPlayers[kf][group].duration;\n                var audioNewPos = time - audioStartPos;\n                // negative time values shall stop the signal.\n                if (audioNewPos <= 0){\n                    this._groupObjPlayers[kf][group].stop();\n                } else {\n                    // should stop audio if audioNewPos > duration\n                    this._groupObjPlayers[kf][group].setTime(audioNewPos);\n                    console.debug(\"Set group \" + group + \" to position \" + audioNewPos);\n                }\n            }\n        }\n        if ((this._audiobed !== false) && (set_audiobed_time)){\n            this._audiobed.setTime(time);\n        }\n    },\n\n    /**\n     * Toggle panning type between Headphones (binaural) and Stereo rendering\n     */\n    togglePanningType: function(){\n        if (this._panningType === \"HRTF\"){\n            this.setPanningType(\"equalpower\");\n            this._panningType = \"equalpower\";\n        } else if (this._panningType === \"equalpower\"){\n            this.setPanningType(\"HRTF\");\n            this._panningType = \"HRTF\";\n        }\n    },\n\n    /**\n     * @param {(\"HRTF\"|\"equalpower\")} type - Panning type for all\n     * objects\n     */\n    setPanningType: function(type){\n        for (var key in this.objects){\n            this.objects[key].setPanningType(type);\n        }\n        this._panningType = type;\n    },\n\n    /**\n     * @returns {(\"HRTF\"|\"equalpower\")} panningType\n     */\n    getPanningType: function(){\n        return this._panningType;\n    },\n\n    /**\n     * Sets listener orientation. Coordinate usage as intended by the Web\n     * Audio API. See also {@link https://webaudio.github.io/web-audio-api/#the-audiolistener-interface}\n     * NOTE: This function currently takes only the head rotation but not the\n     * tilt into account.\n     *\n     * @param x\n     * @param y\n     * @param z\n     */\n    setListenerOrientation: function(x, y, z){\n        this._listenerOrientation = [x, y, z];\n        this.ctx.listener.setOrientation(x, y, z, 0, 1, 0);\n    },\n\n    /**\n     * getListenerOrientation\n     * @returns listenerOrientation\n     */\n    getListenerOrientation: function(){\n        return this._listenerOrientation;\n    },\n\n    /**\n     * setListenerPosition\n     * Coordinate usage as intended by the Web\n     * Audio API. See also {@link https://webaudio.github.io/web-audio-api/#the-audiolistener-interface}\n     * @param x\n     * @param y\n     * @param z\n     */\n    setListenerPosition: function(x, y, z){\n        this._listenerPosition = [x, y, z];\n        this.ctx.listener.setPosition(x, y, 0);\n    },\n\n    /**\n     * getListenerPosition\n     * @returns listenerPosition\n     */\n    getListenerPosition: function(){\n        return this._listenerPosition;\n    },\n\n    _handleKeyframe: function(key){\n        console.debug(\"Activating keyframe: \" + key);\n        var keyframe = this._keyframes[key];\n        //this._kfMapping = {};\n        if (this.interactive === false){\n            for (var i = 0; i < keyframe.length; i++){\n                var triplet = keyframe[i];\n                var obj = triplet.obj;\n                var cmd = triplet.cmd;\n                var params = triplet.params;\n                if (cmd === \"position\"){\n                    this.objects[obj].setPosition(params);\n                    /**\n                     * Will be fired if object from list gets new Position as per\n                     * the scene data\n                     * @event module:bogJS~ObjectManager#om_newPosition\n                     * @property {string} obj - Name of object\n                     * @property {float[]} pos - New position values as array [x, y, z]\n                     */\n                    $(this).triggerHandler('om_newPosition', [obj, params]);\n                }\n                else if (cmd === \"gain\"){\n                    this.objects[obj].setGain(params);\n                    /**\n                     * Will be fired if object from list gets new Gain\n                     * value as per scene data / {@link module:bogJS~ObjectManager#_keyframes}\n                     * @event module:bogJS~ObjectManager#om_newGain\n                     * @property {string} obj - Name of object\n                     * @property {number} gain - New gain value\n                     */\n                    $(this).triggerHandler('om_newGain', [obj, params]);\n                }\n                else if (cmd === \"track_mapping\"){\n                    var url = params;\n                    if (url in this._kfMapping === false){\n                        this._kfMapping[url] = obj;\n                    }\n                    else if ((url in this._kfMapping === true) && (this._kfMapping[url] !== obj)){\n                        var objs = [];\n                        var alreadyThere = [this._kfMapping[url]];\n                        this._kfMapping[url] = objs.concat.apply(obj, alreadyThere);\n                    }\n                }\n                else if (cmd === \"is_present\"){\n                    var state;\n                    if (params === 0) {\n                        state = false;\n                    } else if (params === 1) {\n                        state = true;\n                    } else {\n                        state = params;\n                    }\n                    // Removing as it was never really used and conflicts with switchGroups??\n                    this.objects[obj].setStatus(state);\n                    /**\n                     * Will be fired if object from list has new State\n                     * @event module:bogJS~ObjectManager#om_isActive\n                     * @property {string} obj - Name of object\n                     * @property {boolean} bool - Bool value if active or not\n                     */\n                    $(this).triggerHandler('om_isActive', [obj, state]);\n                }\n            }\n        }\n        this._handleKeyframeAssets(key);\n        //this._handleKeyframeMappings();\n    },\n\n    _handleKeyframeAssets: function(kf){\n        //this._kf_canplay = {};\n        if (kf in this._groupObjPlayers){\n            for (var group in this._groupObjPlayers[kf]){\n                var tmpGrp = this._groupObjPlayers[kf][group]; // TODO: does this cause additional delay?\n                if (tmpGrp.canplay === false){\n                    $(tmpGrp).on(\"audio_loaded\", this._loadedStateDelegate(kf, group));\n                }\n            }\n        }\n        if (kf in this._singleObjAudios){\n            for (var obj in this._singleObjAudios[kf]){\n                var tmpAudio = this._singleObjAudios[kf][obj]; // TODO: does this cause additional delay?\n                if (tmpAudio.canplay === false){\n                    $(tmpAudio).on(\"audio_loaded\", this._loadedStateDelegate(kf, obj));\n                }\n            }\n        }\n\n        // now check if all assets are ready for playing:\n        for (var el in this._kf_canplay[kf]){\n            console.debug(el);\n            if (this._kf_canplay[kf][el] === false){\n                console.debug(\"Pausing playback as not all assets are decoded yet.. \");\n                this.pause();\n                break;\n            }\n        }\n        // if we came to this point: start playback of all keyframe assets\n        this._startKeyframeAssets(kf);\n    },\n\n    _startKeyframeAssets: function(kf){\n        if (kf in this._groupObjPlayers){\n            for (var group in this._groupObjPlayers[kf]){\n                var tmpGrp = this._groupObjPlayers[kf][group]; // TODO: does this cause additional delay?\n                tmpGrp.play();\n            }\n        }\n        if (kf in this._singleObjAudios){\n            for (var obj in this._singleObjAudios[kf]){\n                var tmpAudio = this._singleObjAudios[kf][obj]; // TODO: does this cause additional delay?\n                tmpAudio.play();\n            }\n        }\n    },\n\n    _loadedStateDelegate: function(kf, obj){\n        return function(){\n            console.debug(\"Asset now ready: \" + obj);\n            this._kf_canplay[kf][obj] = true;\n            this._checkLoadedState(kf);\n        }.bind(this);\n    },\n\n    _checkLoadedState: function(kf){\n        console.debug(this._kf_canplay[kf]);\n        for (var obj in this._kf_canplay[kf]) {\n            if (this._kf_canplay[kf][obj] !== true){\n                console.debug(\"We still need to wait for decoding of asset(s)\");\n                return;  // break loop and return in case any of the objects is not yet ready\n            }\n        }\n\n        var first_kf = _.min(Object.keys(this._keyframes)); //Get the first keyframe\n        if (kf === first_kf){\n            $(document).triggerHandler('om_ready');\n        }\n        if (this.ctx.state === \"suspended\"){\n            console.debug(\"Resuming playback - all assets are decoded now\");\n            this.resume();\n        }\n    },\n\n    _handleKeyframeMappings: function(){\n        if (JSON.stringify(this._last_kfMapping) !== JSON.stringify(this._kfMapping)){\n            console.info(\"Track mapping has changed\" + JSON.stringify(this._kfMapping));\n            // Firstly disconnect everything to make sure that no old\n            // mappings stay connected\n            // That means that changes have to be made explicitely and\n            // not implicitely!\n            for (var key in this._audioInstances){\n                this._audioInstances[key].disconnect();\n            }\n            /*\n            TODO: Irgendwie herausfinden, was sich zum aktuellen Mapping geändert hat.\n            Dann dementsprechend connecten /disconnecten.\n            */\n\n            // And now connect all the mappings as per the keyframe\n            for (var key in this._kfMapping){\n                var pannerObjects = [];\n                var objs = this._kfMapping[key];\n                if (typeof objs === \"string\"){    // == attribute\n                    pannerObjects = this.objects[objs].highpass;\n                }\n                else if (typeof objs === \"object\"){   // == array\n                    for (var i = 0; i < objs.length; i++){\n                        console.trace(\"Adding \" + objs[i] + \" to the pannerObject array\");\n                        pannerObjects.push(this.objects[objs[i]].highpass);\n                    }\n                }\n                this._audioInstances[key].reconnect(pannerObjects);\n                console.debug(\"Reconnecting \" + key + \" with \" + objs);\n\n                /**\n                 * Will be fired if track mapping for object from list changes\n                 * @event module:bogJS~ObjectManager#om_newTrackMapping\n                 * @property {string} obj - Name of object\n                 * @property {string[]} objs - Array of to be connected objects\n                 */\n                $(this).triggerHandler('om_newTrackMapping', [key, objs]);\n            }\n        }\n        this._last_kfMapping = JSON.parse(JSON.stringify(this._kfMapping));  // making a \"copy\" and not a reference\n    },\n\n    _processCurrentKeyframes: function(){\n        for (var key in this._keyframes){\n            console.debug(\"Processing keyframe \" + key);\n            var relTime = parseFloat(this.ctx.currentTime - this._startTime + parseFloat(key));\n            this._evts[key] = this._clock.setTimeout(this._buildKeyframeCallback(key, relTime),relTime);\n        }\n    },\n\n    _buildKeyframeCallback: function(key, relTime){\n        var that = this;\n        return function(){\n            that._handleKeyframe(key);\n            that._currentKeyframeIndex = parseFloat(key);\n            console.debug('Keyframe ' + key + ' reached at context time: ' + relTime);\n        };\n    },\n\n    /*\n    update: function(){\n        console.trace(\"Updating scene..\")\n        // neue metadaten lesen\n        // aktuelle Zeit vom AudioContext holen\n        // Objekt-Eigenschaften entsprechend ändern\n        // this.readMetadata();\n        // this.processCurrentKeyframes();\n    },\n    */\n\n    _checkReadyStart: function(){\n        if (this._audiobed !== false){\n            return this._audiobed.canplay;\n        } else {\n            return true;\n        }\n    },\n\n\n    /**\n     * Sets RollOffFactor for all objects via\n     * {@link module:bogJS~ObjectController#setRollOffFactor}\n     * @param factor\n     */\n    setRollOffFactor: function(factor){\n        for (var key in this.objects){\n            this.objects[key].setRollOffFactor(factor);\n        }\n        this._triggerChange();\n    },\n\n    /**\n     * Sets DistanceModel for all objects via\n     * {@link module:bogJS~ObjectController#setDistanceModel}\n     * @param model\n     */\n    setDistanceModel: function(model){\n        for (var key in this.objects){\n            this.objects[key].setDistanceModel(model);\n        }\n        this._triggerChange();\n    },\n\n    /**\n     * Sets RefDistance for all objects via\n     * {@link module:bogJS~ObjectController#setRefDistance}\n     * @param refDistance\n     */\n    setRefDistance: function(refDistance){\n        for (var key in this.objects){\n            this.objects[key].setRefDistance(refDistance);\n        }\n        this._triggerChange();\n    },\n\n    /**\n     * Sets MaxDistance for all objects via\n     * {@link module:bogJS~ObjectController#setMaxDistance}\n     * @param maxDistance\n     */\n    setMaxDistance: function(maxDistance){\n        for (var key in this.objects){\n            this.objects[key].setMaxDistance(maxDistance);\n        }\n        this._triggerChange();\n    },\n\n    setHighpassFreq: function(freq){\n        for (var key in this.objects){\n            this.objects[key].setHighpassFreq(freq);\n        }\n    },\n\n    _initSwitchGroup: function(groupName){\n        var item = this.interactiveInfo.switchGroups[groupName].default;\n        this.switchGroup(groupName, item);\n    },\n\n    switchGroup: function(groupName, item){\n        var objects = Object.values(this.interactiveInfo.switchGroups[groupName].items);\n        for (var obj of objects){\n            this.objects[obj].setStatus(false);\n        }\n        var active_obj = this.interactiveInfo.switchGroups[groupName].items[item];\n        console.info(\"SwitchGroup \" + groupName + \" enable \" + active_obj);\n        this.objects[active_obj].setStatus(true);\n    },\n\n    setInteractiveGain: function(groupName, dBValue){\n        var minLogGain = parseFloat(this.interactiveInfo.gain[groupName].range[0]);\n        var maxLogGain = parseFloat(this.interactiveInfo.gain[groupName].range[1]);\n        var gainValue;\n        if (parseFloat(dBValue) > maxLogGain) {\n            gainValue = maxLogGain;\n        } else if(parseFloat(dBValue) < minLogGain) {\n            gainValue = minLogGain;\n        } else {\n            gainValue = dBValue;\n        }\n        // Crossfading\n        //var range = Math.abs(minLogGain) * 0.5 + maxLogGain * 0.5;\n        var gainGroup = Math.pow(10, (gainValue * 0.5) / 20);\n        var gainOther = Math.pow(10, ((-1 * gainValue) * 0.5) / 20);\n        var groupObjects = this.interactiveInfo.gain[groupName].objects;\n        for (var obj of groupObjects){\n            this.objects[obj].setInteractiveGain(gainGroup);\n        }\n        // find other objects\n        var otherObjects = _.difference(Object.keys(this.objects), groupObjects);\n        for (var oth of otherObjects){\n            this.objects[oth].setInteractiveGain(gainOther);\n        }\n        console.debug(\"Set group \" + groupName + \" gain to \" + gainGroup + \" and other objects to \" + gainOther);\n    },\n\n    /**\n     * @private\n     * As Chrome (FF works) does not automatically use the new paramters of\n     * distanceModle, refDistance and maxDistance, we need to trigger a change\n     * by ourself. The additional value of 0.000001 for x seems to be the\n     * threshold for Chrome to change the rendering.\n     */\n    _triggerChange: function(){\n        var pos = this.getListenerPosition();\n        this.setListenerPosition(pos[0] + 0.000001, pos[1], pos[2]);\n        this.setListenerPosition(pos[0], pos[1], pos[2]);\n    }\n};\n\n\n\nmodule.exports = ObjectManager;\n",
    "/**\n * @file scene_reader.js\n * @author Michael Weitnauer [weitnauer@irt.de]\n */\n\n/**\n * @module bogJS\n */\n\n/**\n * @callback loaded_callback\n */\n\n\n/**\n * Represents SceneReader class. Will load and parse scene data from URL for the\n * {@link module:bogJS~ObjectManager|ObjectManager} instance\n *\n * @constructor\n * @abstract\n *\n * @param {loaded_callback} [loaded_callback=undefined] - Callback that will be executed\n * if scene data is loaded and parsed.\n * @fires module:bogJS~SceneReader#scene_loaded\n *\n */\nvar SceneReader = function(loaded_callback){\n    //this.load(url);\n    this.callback = loaded_callback || undefined;\n}\n\nSceneReader.prototype = {\n\n    /**\n     * Executes XHR to load and parse the scene data from the passed URL\n     *\n     * @param {string} url - URL to scene data target\n     * @fires module:bogJS~SceneReader#scene_loaded\n     */\n    load: function(url){\n        // we need to do this as within the anonymous success function of the ajax call,\n        // 'this' will refer to the window object and NOT to the SceneReader instance!\n        var that = this;\n        $.ajax({\n            type: \"GET\",\n\t        url: url,\n    \t    dataType: \"text\",\n\t        success: function(text) {\n                that.parse(text);\n                if (that.callback !== undefined){\n                    that.callback.call();\n                }\n\t        }\n        });\n    },\n\n    parse: function(rawText) {\n        var commands = this._tokenize(rawText);\n        var data = this._parseSpatdif(commands);\n        var keyframes = data[0];\n        var audioURLs = data[1];\n        var sceneInfo = data[2];\n        var groupObjects = data[3];\n        var audiobeds = data[4];\n        var extraObjects = data[5];\n        var interactiveInfo = data[6];\n        var singleObjects = {};\n        for (var kf in extraObjects){\n            for (var group in groupObjects[kf]){\n                for (var el in groupObjects[kf][group]){\n                    var obj = groupObjects[kf][group][el];\n                    var idx = extraObjects[kf].indexOf(obj);\n                    console.debug('Checking for double entry for object ' + obj);\n                    if (idx > -1) {\n                        extraObjects[kf].splice(idx, 1);\n                        console.debug('Found group object ' + obj + ' also as single objects entry. Removing if from the list.');\n                    }\n                }\n            }\n        }\n        singleObjects = extraObjects;\n\n        /**\n         * Will be fired if scene data is loaded and parsed\n         * @event module:bogJS~SceneReader#scene_loaded\n         * @abstract\n         *\n         * @property {module:bogJS~keyframes} keyframes - 'Dictionary' with keyframes\n         * (Array with commands per detected keyframe in scene)\n         *\n         * @property {module:bogJS~audioURLs} audioURLs - 'Dictionary' with audioURLs\n         * per Object in Scene (to be used for mapping of objects to\n         * audio signals)\n         *\n         * @property {module:bogJS~sceneInfo} sceneInfo - 'Dictionary' with additional sceneInfo\n         * (Can contain 'name', 'object_count', 'listener_orientation',\n         * 'listener_position' and / or 'room_dimensions')\n         *\n         * @property {module:bogJS~groupObjects} groupObjects - 'Dictionary'\n         * containing info to identify grouped objects\n         *\n         * @property {module:bogJS~singleObjects} singleObjects - 'Dictionary'\n         * containing info to identify single objects\n         *\n         * @property {module:bogJS~audiobeds} audiobeds - 'Dictionary'\n         * containing objects and their \"track mapping\" info\n         *\n         * @property {module:bogJS~interactiveInfo} interactiveInfo - 'Dictionary'\n         * containing info for interactive objects and groups\n         */\n        $(this).triggerHandler('scene_loaded', [keyframes, audioURLs, sceneInfo, groupObjects, singleObjects, audiobeds, interactiveInfo])\n    },\n\n    _tokenize: function(d){\n        var lines = [];\n        var data = d.split('\\n');\n        for (var i = 0; i < data.length; i++){\n            if (data[i].indexOf(\"/spatdif\") === 0){   //String.prototype.startsWith() not yet widely supported\n                var l = {};\n                var line = data[i].split(' ');\n                var command = line[0].split('/');\n                l.cmd = command.slice(1, command.length);\n                l.params = line.slice(1, line.length);\n                if (l.params.length === 1){\n                    l.params = l.params[0];  // avoids having an array for a single value\n                }\n                lines[lines.length] = l;     // makes sure that we append the data at the end and won't skip indices\n            }\n        }\n        return lines;\n    },\n\n    _parseSpatdif: function(m){\n        var keyframes = {};\n        var audioURLs = {};\n        var sceneInfo = {};\n        var interactiveInfo = {};\n        interactiveInfo.switchGroups = {};\n        interactiveInfo.gain = {};\n        var groups = {};\n        var extraObjects = {};\n        var audiobeds = {};\n        var keyframe = null;\n        for (var i = 0; i < m.length; i++) {\n            if (m[i].cmd[0] === \"spatdif\"){  // darauf verzichten um die lesbarkeit des codes zu verbesern?\n                if (m[i].cmd[1] === \"meta\"){\n                    var meta = m[i];\n                    if (meta.cmd[3] === \"name\") {\n                        sceneInfo.name = meta.params;\n                    } else if (meta.cmd[2] === \"objects\") {\n                        sceneInfo.object_count = meta.params;\n                    } else if ((meta.cmd[2] === \"reference\") && (meta.cmd[3] === \"orientation\")){\n                        sceneInfo.listener_orientation = this._parseFloatArray(meta.params);\n                    } else if ((meta.cmd[2] === \"room\") && (meta.cmd[3] === \"origin\")){\n                        sceneInfo.listener_position = this._parseFloatArray(meta.params);\n                    } else if ((meta.cmd[2] === \"room\") && (meta.cmd[3] === \"dimension\")){\n                        sceneInfo.room_dimensions = this._parseFloatArray(meta.params);\n                    } else if ((meta.cmd[2] === \"audiobed\") && (meta.cmd[3] === \"url\")) {\n                        sceneInfo.audiobed_url = meta.params;\n                    } else if ((meta.cmd[2] === \"audiobed\") && (meta.cmd[3] === \"tracks\")) {\n                        sceneInfo.audiobed_tracks = meta.params;\n                    } else if (meta.cmd[2] === \"interactive\") {\n                        if (meta.cmd[3] === \"switchGroup\") {\n                            if (meta.cmd[4] === \"label\") {\n                                var label = meta.params[0];\n                                interactiveInfo.switchGroups[label] = {};\n                                interactiveInfo.switchGroups[label].default = meta.params[1];\n                                interactiveInfo.switchGroups[label].items = {};\n                            } else {\n                                var item_label = meta.params[0];\n                                interactiveInfo.switchGroups[label].items[item_label] = meta.params[1];\n                            }\n                        } else if (meta.cmd[3] === \"gain\"){\n                            if (meta.cmd[4] === \"label\") {\n                                var label = meta.params[0];\n                                interactiveInfo.gain[label] = {};\n                                interactiveInfo.gain[label].range = [meta.params[1], meta.params[2]];\n                                interactiveInfo.gain[label].objects = [];\n                            } else {\n                                interactiveInfo.gain[label].objects.push(meta.params);\n                            }\n                        }\n                    }\n\n                } else if (m[i].cmd[1] === \"time\") {\n                    keyframe = m[i].params;\n                    keyframes[keyframe] = [];\n                } else if ((m[i].cmd[1] === \"source\") && (keyframe !== null)) {\n                    // ignore the commands until the first keyframe appears\n                    var obj = m[i].cmd[2];\n                    var cmd = m[i].cmd[3];\n                    var params = m[i].params;\n\n                    if (cmd === \"track_mapping\"){\n                        if ((params.startsWith(\"bed_\")) && (obj in audiobeds ===  false)){\n                            audiobeds[obj] = params;\n                        } else if ((params.startsWith(\"bed_\") === false) && (obj in audioURLs === false)) {\n                            audioURLs[obj] = params;\n                            if (keyframe in extraObjects ===  false){\n                                extraObjects[keyframe] = [];\n                            }\n                            extraObjects[keyframe].push(obj);\n                        }\n                    }\n\n                    if (cmd === \"group\") {\n                        if (keyframe in groups === false){\n                            groups[keyframe] = {};\n                        }\n                        if (params in groups[keyframe] === false){\n                            groups[keyframe][params] = [];\n                        }\n                        if (groups[keyframe][params].indexOf(obj) === -1){\n                            groups[keyframe][params].push(obj)  // == groups.keyframe.params.push(obj)\n                            console.debug(\"Adding \" + obj + \" to group \" + params + \" at keyframe \" + keyframe);\n                        }\n                    }\n                    var triplet = {};\n                    triplet.obj = obj;\n                    if (cmd === \"active\"){\n                        cmd = \"is_present\";\n                    }\n                    triplet.cmd = cmd;\n                    triplet.params = m[i].params;\n                    keyframes[keyframe].push(triplet);\n                }\n            }\n        }\n        return [keyframes, audioURLs, sceneInfo, groups, audiobeds, extraObjects, interactiveInfo];\n    },\n\n    _parseFloatArray: function(array){\n        var tmp_array = [];\n        for (var n in array){\n            var number = parseFloat(array[n]);\n            if (!isNaN(number)){\n                tmp_array[tmp_array.length] = number;\n            }\n        }\n        return tmp_array;\n    }\n\n}\n\n\nmodule.exports = SceneReader;\n"
  ]
}