{
  "version": 3,
  "sources": [
    "../node_modules/browser-pack/_prelude.js",
    "../index.js",
    "../node_modules/process/browser.js",
    "../node_modules/underscore/underscore.js",
    "../node_modules/waaclock/index.js",
    "../node_modules/waaclock/lib/WAAClock.js",
    "../src/channelorder_test.js",
    "../src/gain_controller.js",
    "../src/html5_player/core.js",
    "../src/media_controller.js",
    "../src/object.js",
    "../src/object_manager.js",
    "../src/scene_reader.js"
  ],
  "names": [],
  "mappings": "AAAA;;;;ACCA,OAAA,AAAO,sCAAP,AAA6C;AAC7C,OAAA,AAAO,qCAAP,AAA4C;;AAG5C;AACA,OAAA,AAAO,mBAAmB,QAA1B,AAA0B,AAAQ;AAClC,OAAA,AAAO,YAAY,QAAA,AAAQ,2BAA3B,AAAsD;AACtD,OAAA,AAAO,YAAY,QAAA,AAAQ,2BAA3B,AAAsD;AACtD,OAAA,AAAO,iBAAiB,QAAxB,AAAwB,AAAQ;AAChC,OAAA,AAAO,yBAAyB,QAAhC,AAAgC,AAAQ;AACxC,OAAA,AAAO,mBAAmB,QAA1B,AAA0B,AAAQ;AAClC,OAAA,AAAO,gBAAgB,QAAvB,AAAuB,AAAQ;AAC/B,OAAA,AAAO,cAAc,QAArB,AAAqB,AAAQ;AAC7B;;;;;ACdxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5gzOA;AACA;;;;;AAKA;;;;AAKA,IAAI,IAAI,QAAR,AAAQ,AAAQ;;AAGhB;;;;;;;;;AASA;;;;;;;;;;;;;;;AAeA,IAAI,mBAAmB,SAAnB,AAAmB,iBAAA,AAAS,WAAT,AAAoB,QAApB,AAA4B,KAA2B;QAAtB,AAAsB,2EAAjB,AAAiB,AAC1E;;QAAI,OAAA,AAAO,QAAX,AAAmB,aAAa,AAC5B;YAAI,OAAA,AAAO,iBAAX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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "\nglobal.__BROWSERIFY_META_DATA__GIT_VERSION = \"b251f86 v0.4.2\";\nglobal.__BROWSERIFY_META_DATA__CREATED_AT = \"Wed Sep 26 2018 15:01:39 GMT+0200 (Mitteleuropäische Sommerzeit)\";\n\n\n// making the objects globally available\nwindow.ChannelOrderTest = require('./src/channelorder_test');\nwindow.AudioData = require('./src/html5_player/core').AudioData;\nwindow.IRTPlayer = require('./src/html5_player/core').IRTPlayer;\nwindow.GainController = require('./src/gain_controller');\nwindow.MediaElementController = require('./src/media_controller');\nwindow.ObjectController = require('./src/object');\nwindow.ObjectManager = require('./src/object_manager');\nwindow.SceneReader = require('./src/scene_reader');\n//window.UIManager = require('./src/ui');\n",
    "// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n",
    "//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n",
    "var WAAClock = require('./lib/WAAClock')\n\nmodule.exports = WAAClock\nif (typeof window !== 'undefined') window.WAAClock = WAAClock\n",
    "var isBrowser = (typeof window !== 'undefined')\n\nvar CLOCK_DEFAULTS = {\n  toleranceLate: 0.10,\n  toleranceEarly: 0.001\n}\n\n// ==================== Event ==================== //\nvar Event = function(clock, deadline, func) {\n  this.clock = clock\n  this.func = func\n  this._cleared = false // Flag used to clear an event inside callback\n\n  this.toleranceLate = clock.toleranceLate\n  this.toleranceEarly = clock.toleranceEarly\n  this._latestTime = null\n  this._earliestTime = null\n  this.deadline = null\n  this.repeatTime = null\n\n  this.schedule(deadline)\n}\n\n// Unschedules the event\nEvent.prototype.clear = function() {\n  this.clock._removeEvent(this)\n  this._cleared = true\n  return this\n}\n\n// Sets the event to repeat every `time` seconds.\nEvent.prototype.repeat = function(time) {\n  if (time === 0)\n    throw new Error('delay cannot be 0')\n  this.repeatTime = time\n  if (!this.clock._hasEvent(this))\n    this.schedule(this.deadline + this.repeatTime)\n  return this\n}\n\n// Sets the time tolerance of the event.\n// The event will be executed in the interval `[deadline - early, deadline + late]`\n// If the clock fails to execute the event in time, the event will be dropped.\nEvent.prototype.tolerance = function(values) {\n  if (typeof values.late === 'number')\n    this.toleranceLate = values.late\n  if (typeof values.early === 'number')\n    this.toleranceEarly = values.early\n  this._refreshEarlyLateDates()\n  if (this.clock._hasEvent(this)) {\n    this.clock._removeEvent(this)\n    this.clock._insertEvent(this)\n  }\n  return this\n}\n\n// Returns true if the event is repeated, false otherwise\nEvent.prototype.isRepeated = function() { return this.repeatTime !== null }\n\n// Schedules the event to be ran before `deadline`.\n// If the time is within the event tolerance, we handle the event immediately.\n// If the event was already scheduled at a different time, it is rescheduled.\nEvent.prototype.schedule = function(deadline) {\n  this._cleared = false\n  this.deadline = deadline\n  this._refreshEarlyLateDates()\n\n  if (this.clock.context.currentTime >= this._earliestTime) {\n    this._execute()\n  \n  } else if (this.clock._hasEvent(this)) {\n    this.clock._removeEvent(this)\n    this.clock._insertEvent(this)\n  \n  } else this.clock._insertEvent(this)\n}\n\nEvent.prototype.timeStretch = function(tRef, ratio) {\n  if (this.isRepeated())\n    this.repeatTime = this.repeatTime * ratio\n\n  var deadline = tRef + ratio * (this.deadline - tRef)\n  // If the deadline is too close or past, and the event has a repeat,\n  // we calculate the next repeat possible in the stretched space.\n  if (this.isRepeated()) {\n    while (this.clock.context.currentTime >= deadline - this.toleranceEarly)\n      deadline += this.repeatTime\n  }\n  this.schedule(deadline)\n}\n\n// Executes the event\nEvent.prototype._execute = function() {\n  if (this.clock._started === false) return\n  this.clock._removeEvent(this)\n\n  if (this.clock.context.currentTime < this._latestTime)\n    this.func(this)\n  else {\n    if (this.onexpired) this.onexpired(this)\n    console.warn('event expired')\n  }\n  // In the case `schedule` is called inside `func`, we need to avoid\n  // overrwriting with yet another `schedule`.\n  if (!this.clock._hasEvent(this) && this.isRepeated() && !this._cleared)\n    this.schedule(this.deadline + this.repeatTime) \n}\n\n// Updates cached times\nEvent.prototype._refreshEarlyLateDates = function() {\n  this._latestTime = this.deadline + this.toleranceLate\n  this._earliestTime = this.deadline - this.toleranceEarly\n}\n\n// ==================== WAAClock ==================== //\nvar WAAClock = module.exports = function(context, opts) {\n  var self = this\n  opts = opts || {}\n  this.tickMethod = opts.tickMethod || 'ScriptProcessorNode'\n  this.toleranceEarly = opts.toleranceEarly || CLOCK_DEFAULTS.toleranceEarly\n  this.toleranceLate = opts.toleranceLate || CLOCK_DEFAULTS.toleranceLate\n  this.context = context\n  this._events = []\n  this._started = false\n}\n\n// ---------- Public API ---------- //\n// Schedules `func` to run after `delay` seconds.\nWAAClock.prototype.setTimeout = function(func, delay) {\n  return this._createEvent(func, this._absTime(delay))\n}\n\n// Schedules `func` to run before `deadline`.\nWAAClock.prototype.callbackAtTime = function(func, deadline) {\n  return this._createEvent(func, deadline)\n}\n\n// Stretches `deadline` and `repeat` of all scheduled `events` by `ratio`, keeping\n// their relative distance to `tRef`. In fact this is equivalent to changing the tempo.\nWAAClock.prototype.timeStretch = function(tRef, events, ratio) {\n  events.forEach(function(event) { event.timeStretch(tRef, ratio) })\n  return events\n}\n\n// Removes all scheduled events and starts the clock \nWAAClock.prototype.start = function() {\n  if (this._started === false) {\n    var self = this\n    this._started = true\n    this._events = []\n\n    if (this.tickMethod === 'ScriptProcessorNode') {\n      var bufferSize = 256\n      // We have to keep a reference to the node to avoid garbage collection\n      this._clockNode = this.context.createScriptProcessor(bufferSize, 1, 1)\n      this._clockNode.connect(this.context.destination)\n      this._clockNode.onaudioprocess = function () {\n        process.nextTick(function() { self._tick() })\n      }\n    } else if (this.tickMethod === 'manual') null // _tick is called manually\n\n    else throw new Error('invalid tickMethod ' + this.tickMethod)\n  }\n}\n\n// Stops the clock\nWAAClock.prototype.stop = function() {\n  if (this._started === true) {\n    this._started = false\n    this._clockNode.disconnect()\n  }  \n}\n\n// ---------- Private ---------- //\n\n// This function is ran periodically, and at each tick it executes\n// events for which `currentTime` is included in their tolerance interval.\nWAAClock.prototype._tick = function() {\n  var event = this._events.shift()\n\n  while(event && event._earliestTime <= this.context.currentTime) {\n    event._execute()\n    event = this._events.shift()\n  }\n\n  // Put back the last event\n  if(event) this._events.unshift(event)\n}\n\n// Creates an event and insert it to the list\nWAAClock.prototype._createEvent = function(func, deadline) {\n  return new Event(this, deadline, func)\n}\n\n// Inserts an event to the list\nWAAClock.prototype._insertEvent = function(event) {\n  this._events.splice(this._indexByTime(event._earliestTime), 0, event)\n}\n\n// Removes an event from the list\nWAAClock.prototype._removeEvent = function(event) {\n  var ind = this._events.indexOf(event)\n  if (ind !== -1) this._events.splice(ind, 1)\n}\n\n// Returns true if `event` is in queue, false otherwise\nWAAClock.prototype._hasEvent = function(event) {\n return this._events.indexOf(event) !== -1\n}\n\n// Returns the index of the first event whose deadline is >= to `deadline`\nWAAClock.prototype._indexByTime = function(deadline) {\n  // performs a binary search\n  var low = 0\n    , high = this._events.length\n    , mid\n  while (low < high) {\n    mid = Math.floor((low + high) / 2)\n    if (this._events[mid]._earliestTime < deadline)\n      low = mid + 1\n    else high = mid\n  }\n  return low\n}\n\n// Converts from relative time to absolute time\nWAAClock.prototype._absTime = function(relTime) {\n  return relTime + this.context.currentTime\n}\n\n// Converts from absolute time to relative time \nWAAClock.prototype._relTime = function(absTime) {\n  return absTime - this.context.currentTime\n}",
    "/*jshint esversion: 6 */\n/**\n * @file channelorder_test.js\n * @author Michael Weitnauer: {@link weitnauer@irt.de}\n */\n\n/**\n * @module bogJS\n */\n\n\nvar _ = require('underscore');\n\n\n/**\n * GainController\n * @constructor\n *\n * @param ctx - Web Audio API Audio Context instance\n * @param [targetNode=ctx.destination] - Web Audio API node to which the\n * output of the GainController shall be connected to.\n */\n\n/**\n * ChannelOrderTest will start loading, deconding and playing as soon as the\n * instance of the class is created. The test files will be looped and for\n * each loop, the [testChs]{@link module:bogJS~ChannelOrderTest#testChs} method\n * is called. If the test file has been played five times and no order could\n * be detected, the default order will be triggered.\n * @constructor\n *\n * @param {String} container - to be tested file extension w/o dot (\"mp4\")\n * @param {Number} tracks - To be tested channel number for container\n * @param {Object.<AudioContext>} [ctx=AudioContext] - if no AudioContext\n *      instance is passed, it will be created.\n * @param {String} [root=\"signals/order\"] - path to test encoded files\n * @fires module:bogJS~ChannelOrderTest#order_ready\n */\nvar ChannelOrderTest = function(container, tracks, ctx, root=\"signals/order/\"){\n    if (typeof ctx === 'undefined') {\n        if (typeof AudioContext !== 'undefined') {\n            var ctx = new AudioContext();\n        } else if (typeof webkitAudioContext !== 'undefined') {\n            var ctx = new webkitAudioContext();\n        } else {\n            alert(\"Your browser doesn't support the Web Audio API!\");\n        }\n    }\n    /** @var {Object.<AudioContext>} */\n    this.ctx = ctx;\n\n    this._tracks = parseInt(tracks);\n    this._splitter = this.ctx.createChannelSplitter(this._tracks);\n    this.analysers = [];\n    this.gainNode = this.ctx.createGain();\n    this.gainNode.gain.value = 0;\n    this.gainNode.connect(this.ctx.destination);\n\n    for (var i = 0; i < this._tracks; i++){\n        this.analysers[i] = this.ctx.createAnalyser();\n        this.analysers[i].fftSize = 2048;  // \"hard-coded\" due to Safari -> analyser chrashes if fftSize value is greater than 2048\n        this._splitter.connect(this.analysers[i], i);\n        this.analysers[i].connect(this.gainNode);\n    }\n    //var root = root || \"http://lab.irt.de/demos/order/\";\n    if (container === \"webm\"){   // we assume opus if webm is used\n        container = \"opus\";\n    }\n    var url = root+tracks+\"chs.\"+container;\n    this._loadSound(url);\n};\n\n\nChannelOrderTest.prototype = {\n    /**\n     * Load and test passed audio signal\n     *\n     * @protected\n     * @param {string} url - URL\n     */\n    _loadSound: function(url){\n        this.audio = document.createElement('audio');\n        this.audio.src = url;\n        this.audio.loop = true;\n        this.audio.load();\n        this.mediaElement = this.ctx.createMediaElementSource(this.audio);\n        this.mediaElement.connect(this._splitter);\n        this.audio.play();\n        var last_unique = [];\n\n        this.audio.onended = function(){\n          console.debug(\"ChannelOrderTest Playback ended\");\n        }\n\n        // onplay will be fired once the audio playback started\n        $(this.audio).on(\"play\", function(){\n            console.debug(\"Channel order testfile started...\");\n            // this is a fix to make the channel order test working on Firefox\n            // the initial attempt (listen on \"playing\") did no more in FF after\n            // an update.\n            for (let i = 0, p = Promise.resolve(); i < 10; i++) {\n                p = p.then(() => new Promise(resolve =>\n                    setTimeout(function () {\n                        var order = this.testChs();\n                        var unique = _.unique(order);\n                        // the returned order should be identical for two consecutive calls\n                        // to make sure we have a reliable result\n                        if ((unique.length === this._tracks) && (_.isEqual(last_unique, unique))) {\n                            console.info('Channel order detected: ' + order);\n                            /**\n                             * If channel order was detected and ensured, the event is\n                             * fired with channel order as array.\n                             * @event module:bogJS~ChannelOrderTest#order_ready\n                             * @property {Number[]} order - Array containing the detected\n                             * order\n                             */\n                            $(document).triggerHandler('order_ready', [order]);\n                            this.audio.pause();\n                            return;\n                        } else if (unique.length === this._tracks){\n                            last_unique = unique;\n                        }\n                        console.debug(\"Channel order not yet detected. Iteration:  \" + i);\n                        if (i >= 9){\n                            console.warn(\"Channel order not detectable. Stopping indentfication and trigger default values.\");\n                            order = _.range(this._tracks);\n                            $(document).triggerHandler('order_ready', [order]);\n                            this.audio.pause();\n                        }\n                        resolve();\n                    }.bind(this), 500)\n                ));\n            }\n        }.bind(this, last_unique));\n    },\n\n    /**\n     * Save frequency bins to arrays for later analysis\n     * @protected\n     * @returns {Number[]}  Nested array (Float32Array) containing the frequency\n     * bins for each channel\n     */\n    _getFreqData: function(){\n        var freqBins = [];\n        var freqBinaryBins = [];\n        for (var i = 0; i < this._tracks; i++){\n            // Float32Array should be the same length as the frequencyBinCount\n            freqBins[i] = new Float32Array(this.analysers[i].frequencyBinCount);\n            // fill the Float32Array with data returned from getFloatFrequencyData()\n            this.analysers[i].getFloatFrequencyData(freqBins[i]);\n        }\n        return freqBins;\n    },\n\n    /**\n     * Will conduct the detection of the channel order.\n     * @returns {Number[]}  Array containing the detected. e.g. [0, 3, 1, 2]\n     * channel order\n     */\n    testChs: function(){\n        var freqBins = this._getFreqData();\n        var indices = [];\n        for (var i = 0; i < freqBins.length; i++){\n            var idx = _.indexOf(freqBins[i], _.max(freqBins[i]));\n            indices[i] = idx;\n        }\n        console.debug(\"Decoded indices: \" + indices);\n        // to avoid the array is mutated and numerical sorted\n        var sorted_indices = indices.concat().sort(function(a, b){return a-b;});\n        console.debug(\"Sorted indices: \" + sorted_indices);\n        var normalized_indices = [];\n        for (var i = 0; i < indices.length; i++){\n            normalized_indices[i] = _.indexOf(sorted_indices, indices[i]);\n        }\n        return normalized_indices;\n    },\n\n    /**\n    * Explicit play function for mobile devices which will not start the media\n    * element automatically without user gesture.\n    */\n    playAudio: function(){\n        this.audio.play();\n    }\n};\n\nmodule.exports = ChannelOrderTest;\n",
    "/*jshint esversion: 6 */\n/**\n * @file media_controller.js\n * @author Michael Weitnauer: {@link weitnauer@irt.de}\n */\n\n/**\n * @module bogJS\n *\n */\n\n/**\n * GainController\n * @constructor\n *\n * @param ctx - Web Audio API Audio Context instance\n * @param [targetNode=ctx.destination] - Web Audio API node to which the\n * output of the GainController shall be connected to.\n */\nvar GainController = function(ctx, targetNode=ctx.destination){\n    this._gain = 1;\n    this.gainNode = ctx.createGain();\n\n    // Experimental highpass to avoid sizzling noinse while chaning view / angle\n    //this.highpass = ctx.createBiquadFilter();\n    //this.highpass.type = \"highpass\";\n    //this.highpass.connect(this.gainNode);\n    //this.setHighpassFreq(80);\n\n    // FIXME: if applied here, the gainNode stays\n    // connected with ctx.destination:\n    this.connect(targetNode);\n};\n\nGainController.prototype = {\n\n    /**\n     * Mutes the node object\n     *\n     */\n    mute: function(){\n        this.setGain(0);\n    },\n\n    /**\n     * Unmutes node object\n     *\n     */\n    unmute: function(){\n        this.setGain(1);\n    },\n\n    /**\n     * setGain\n     *\n     * @param {Float} val - Values between 0 and 1\n     */\n    setGain: function(val){\n        this.gainNode.gain.value = val;\n        this._gain = this.getGain();\n    },\n\n    /**\n     * getGain\n     *\n     * @returns {Float} gain - Float value between 0 and 1\n     */\n    getGain: function(){\n        return this.gainNode.gain.value;\n    },\n\n    /**\n    * Disconnects and reconnects {@link GainController} instance to passed\n    * AudioNode(s)\n    *\n    * @param {(Object|Object[])} nodes - Single of array of AudioNodes to which\n    * the {@link MediaElementController} instance shall be reconnected.\n    */\n    reconnect: function(nodes){\n        this.disconnect();\n        this.connect(nodes);\n    },\n\n    /**\n     * connect\n     *\n     * @param {(Object|Object[])} nodes - one or multple Web Audio API nodes to\n     * which the output of the GainController instance shall be connected to.\n     */\n    connect: function(nodes) {\n        console.debug(\"Connecting GainController to \" + nodes);\n        if (Object.prototype.toString.call(nodes) != \"[object Array]\"){          // == single Node\n            this.gainNode.connect(nodes);\n        } else {                                          // == array of Nodes\n            for (var i=0; i < nodes.length; i++){\n                this.gainNode.connect(nodes[i]);\n            }\n        }\n    },\n\n    /**\n    * This method will disconnect output of the {@link GainController} instance from\n    * a given node or all connected nodes if node is not given/undefined.\n    */\n    disconnect: function(node){\n        //console.debug(\"Disconnecting \", this, \" from \", node);\n        this.gainNode.disconnect(node);\n    },\n\n    setHighpassFreq: function(freq){\n        //this.highpass.frequency.value = freq;\n    }\n};\n\nmodule.exports = GainController;\n",
    "/**\n * @file irtPlayer_new.js\n * @author Michael Weitnauer: {@link weitnauer@irt.de}\n */\n\n/**\n * @license\n * ----------------------------------------------------------------------------\n * irtPlayer, a Javascript HTML5 Audio library for comparing audio files gaplessly\n * v2.0.0\n * Licensed under the MIT license.\n * http://www.irt.de\n * ----------------------------------------------------------------------------\n * Copyright (C) 2015 Institut für Rundfunktechnik GmbH\n * http://www.irt.de\n * ----------------------------------------------------------------------------\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files ( the \"Software\" ), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * ----------------------------------------------------------------------------\n */\n\n/**\n * @module irtPlayer\n *\n */\n\n\n/**\n * Represents AudioData class which has all the logic to control an\n * audio signal\n *\n * @constructor\n *\n * @param {Object} ctx - An AudioContext instance.\n * @param {string} url - URL of the audio source (with or without\n * extension).\n * @param {Object} [targetNode=ctx.destination] - The audio node to which the AudioData\n * instance shall be connected\n * @param {boolean} [checkSupportFlag=true] - Enable / disable extension\n * support for passed url (see [AudioData._checkExtension]{@link AudioData#_checkExtension})\n *\n * @fires module:irtPlayer~AudioData#audio_init\n * @fires module:irtPlayer~AudioData#audio_loaded\n * @fires module:irtPlayer~AudioData#audio_ended\n */\nvar AudioData = function(ctx, url, targetNode, checkSupportFlag) {\n    /** @protected\n     * @var {boolean} */\n    this.canplay = false;\n    var checkSupportFlag = checkSupportFlag || true;\n    if (checkSupportFlag == true){\n        var url = this._checkExtension(url);\n    }\n    /** @var {Object.<AudioContext>} */\n    this.ctx = ctx;\n    this.url = url;\n\n    this._playing = false;\n    this._looping = true;\n    this._rangeStart = 0;\n    this._rangeEnd = 0;\n    this._startTime = 0;\n    this._startOffset = 0;\n\n    /** @var {Object.<GainNode>} */\n    this.gainNode = this.ctx.createGain();\n    this.gain = this.getGain();\n    var targetNode = targetNode || this.ctx.destination;\n    this.gainNode.connect(targetNode);  // FF either refuses to break this connection or simply displays a no more existing connection..\n}\n\nAudioData.prototype = {\n\n    /**\n     * Create instance of new AudioBufferSource every time {@link\n     * AudioData#play} is called and initialize it.\n     *\n     * @protected\n     */\n    _initBuffer: function(){\n        this.audio = this.ctx.createBufferSource();\n        this.audio.loop = this._looping;\n        //this.audio.loop = false;  // workaround to compensate Chrome behavior. see comment in play()\n        this.audio.buffer = this._buffer;\n        this.audio.connect(this.gainNode);\n        this.audio.loopStart = this._rangeStart;\n        this.audio.loopEnd = this._rangeEnd;\n        this.audio.onended = this._onendedHandler.bind(this);\n\n        /**\n         * Will be fired once the new AudioBufferSource has been\n         * initilized.\n         * @event module:irtPlayer~AudioData#audio_init\n         */\n        $(this).triggerHandler(\"audio_init\");\n    },\n\n    /**\n     * Will be called if AudioBufferSource instance has ended\n     *\n     * @protected\n     */\n    _onendedHandler: function(){\n        //console.debug(\"Audio buffer has ended!\");\n        this._playing = false;\n        //this._startOffset = 0;\n\n        /**\n         * Will be fired once the playback has ended\n         * @event module:irtPlayer~AudioData#audio_ended\n         */\n        $(this).triggerHandler(\"audio_ended\");\n    },\n\n    load: function(){\n        this._loadSound(this.url);\n    },\n\n    /**\n    * Start playback of audio signal\n    *\n    * @param {number} [pos] - Position from which the playback shall start\n    * (optional)\n    */\n    play: function(pos){\n        if ((this._playing == false) && (this.canplay)){\n            this._initBuffer();\n            this._startTime = this.audio.context.currentTime;\n            console.debug(\"Start time: \" + this._startTime);\n            if (typeof pos != 'number'){        // detection with _.isNumber() could be more robust\n                var buffer_duration = this._buffer.duration;\n                var offset = (this._rangeStart + this._startOffset) % buffer_duration;\n                var duration = this._rangeEnd - offset;\n                console.debug(\"Offset: \" + offset + \"   Duration: \" + duration);\n\n                // Passing a duration to start() causes undefined\n                // situation in current versions of Chrome. FF, Safari\n                // and Opera seem to treat this situation properly. See\n                // also https://github.com/WebAudio/web-audio-api/issues/421\n                this.audio.start(0, offset, duration);\n                //this.audio.start(0, offset);\n            } else {\n                console.debug(\"Starting playback at \" + pos);\n                this._startOffset = pos;\n                var duration = this._rangeEnd - pos;\n                this.audio.start(0, pos, duration);\n            }\n            // workaround to force looping in Chrome. see comment above.\n            // Chrome seems to ignore looping state if duration is\n            // passed. --> init() with loop = false, then set \"real\"\n            // loop state here:\n            //this.audio.loop = this._looping;\n            this._playing = true;\n        }\n    },\n\n    /**\n     * Pause playback  - will only be executed if {@link\n     * AudioData#_playing} flag is true.\n     *\n     */\n    pause: function(){\n        if (this._playing == true){\n            this.audio.stop(0);\n            // Measure how much time passed since the last pause.\n            this._startOffset += this.audio.context.currentTime - this._startTime;\n            this._playing = false;\n            console.debug(\"Start offset: \"+ this._startOffset);\n        }\n    },\n\n\n    /**\n     * Stops playback - if method is called during the playback\n     * is stopped, the thrown error will be catched.\n     */\n    stop: function(){\n        try {\n            this.audio.stop(0);\n            this._startOffset = 0;\n            this._playing = false;\n        } catch (err) {\n            console.warn(\"Can't stop audio.. \" + err);\n        }\n    },\n\n    /**\n     * Sets gain of {@link AudioData} instance\n     *\n     * @param {float} gain - Value between 0.0 and 1.0\n     */\n    setGain: function(gain){\n        if ((gain >= 0.0) && (gain <= 1.0)){\n            this.gainNode.gain.value = gain;\n            this.gain = this.gainNode.gain.value;  // avoids that we accept uncompatible values\n        }\n        else {\n            console.warn(\"Gain values must be between 0 and 1\");\n        }\n    },\n\n    /**\n     * Returns current gain value of {@link AudioData} instance\n     *\n     * @return {float} value - Float gain value\n     */\n    getGain: function(){\n        return this.gainNode.gain.value;  // or do we trust in this.gain ??\n    },\n\n    /**\n     * Disables / enables the loop of the {@link AudioData} instance\n     */\n    toggleLoop: function() {\n        if (this._looping == false){\n            this._looping = true;\n        } else {\n            this._looping = false;\n        }\n        try {\n            //this.pause();\n            this.audio.loop = this._looping;\n            //this.play();\n        } catch (err) {\n            console.warn(\"Can't set loop state: \" + err);\n        }\n    },\n\n    /**\n     * Disables / enables the loop of the {@link AudioData} instance\n     */\n    setLoopState: function(bool) {\n        this._looping = bool;\n        try {\n            //this.pause();\n            this.audio.loop = this._looping;\n            //this.play();\n        } catch (err) {\n            console.warn(\"Can't set loop state: \" + err);\n        }\n    },\n\n    /**\n     * Sets start position for playback\n     *\n     * @param {float} pos  - Start playback always at passed\n     * position\n     */\n    setRangeStart: function(pos){\n        pos = parseFloat(pos);\n        if (pos >= 0) {\n            pos = pos;\n        } else {\n            pos = 0;\n        }\n        this._rangeStart = pos;\n        try {\n            this.audio.loopStart = this._rangeStart;\n            console.debug(\"Loop start: \" + pos);\n        } catch (err) {\n            console.warn(\"Can't set loop start yet..\" + err);\n        }\n    },\n\n    /**\n     * Sets end position for playback\n     *\n     * @param {float} pos  - Playback end always at passed\n     * position\n     */\n    setRangeEnd: function(pos){\n        pos = parseFloat(pos);\n        if (pos <= this._buffer.duration) {\n            pos = pos;\n        } else {\n            pos = this._buffer.duration;\n        }\n        this._rangeEnd = pos;\n        try {\n            this.audio.loopEnd = this._rangeEnd;\n            console.debug(\"Loop end: \" + pos);\n        } catch (err){\n            console.warn(\"Can't set loop start yet..\" + err);\n        }\n    },\n\n    /**\n     * Mutes {@link AudioData} instance\n     */\n    mute: function(){\n        this.setGain(0.0);\n    },\n\n    /**\n     * Unmutes {@link AudioData} instance\n     */\n    unmute: function(){\n        this.setGain(1.0);\n    },\n\n    /**\n     * Jump to passed position during playback\n     *\n     * @param {float} pos  - Must be between 0 and {@link\n     * AudioData._rangeEnd}\n     */\n    setTime: function(pos){\n        if ((pos >= 0) && (pos <= this._rangeEnd)){\n            this.stop();\n            this.play(pos);\n        }\n    },\n\n    /**\n     * Returns current playback position\n     *\n     * @return {number} value - Current playback position\n     */\n    getTime: function(){\n        if (this._playing) {\n            return this.audio.context.currentTime - this._startTime + this._startOffset;\n        } else {\n            return this._startOffset;\n        }\n    },\n\n    /**\n    * Disconnects and reconnects {@link AudioData} instance to passed\n    * AudioNode(s)\n    *\n    * @param {...Object} nodes - Variable number of AudioNodes to which\n    * the {@link AudioData} instance shall be reconnected.\n    */\n    reconnect: function(nodes){\n        this.disconnect();\n        if (Object.prototype.toString.call(nodes) != \"[object Array]\"){          // == single Node\n            this.gainNode.connect(nodes);\n        }\n        else {                                          // == array of Nodes\n            for (var i=0; i < nodes.length; i++){\n                this.gainNode.connect(nodes[i]);\n            }\n        }\n    },\n\n    /**\n    * This method will disconnect the {@link AudioData} instance from\n    * all connected nodes (afterwards). Should be mostly\n    * ctx.destination.\n    */\n    disconnect: function(){\n        this.gainNode.disconnect();\n    },\n\n    /**\n     * Method will check whether the passed URL has an extension.\n     * Additionaly, {@link AudioData#_checkSupport} will be executed to\n     * identify the possible containers / codecs.\n     *\n     * @protected\n     * @param {string} url - URL\n     *\n     * @return {string} src - URL including file type extension which should be\n     * compatible with browser\n     */\n    _checkExtension: function(url){\n        var supports = this._checkSupport();\n\n        var re = /\\.[0-9a-z]{3,4}$/i;   // strips the file extension (must be 3 or 4 characters)\n        var ext = re.exec(url);\n        if (ext == null){\n            if (supports.indexOf(\".opus\") > -1) {\n                var src = url + \".opus\";\n            }\n            else if (supports.indexOf(\".mp4\") > -1) {\n                var src = url + \".mp4\";\n            }\n            /*\n            else if (supports.indexOf(\".m4a\") > -1) {\n                var src = url + \".m4a\";\n            }*/\n            else if (supports.indexOf(\".ogg\") > -1) {\n                var src = url + \".ogg\";\n            }\n            else if (supports.indexOf(\".mp3\") > -1) {\n                var src = url + \".mp3\";\n            }\n            else if (supports.indexOf(\".wav\") > -1) {\n                var src = url + \".wav\";\n            }\n        } else {\n            if (supports.indexOf(ext[0]) > -1){\n                var src = url;\n            } else {\n                console.error(\"ERROR: Your browser does not support the needed audio codec (\" + ext[0] + \")!\");\n                var src = \"\";\n            }\n        }\n        return src\n    },\n\n    /**\n     * Detects whether the browser can play one of the listed containers\n     * / codecs\n     *\n     * @protected\n     * @return {string[]} support - An array containing all compatible\n     * formats\n     */\n    _checkSupport: function (){\n        var supports = [];\n        if (document.createElement('audio').canPlayType(\"audio/ogg codecs=opus\") != \"\"){\n            supports.push(\".opus\");\n        }\n        if (document.createElement('audio').canPlayType(\"audio/ogg\") != \"\"){\n            supports.push(\".ogg\");\n        }\n        if (document.createElement('audio').canPlayType(\"audio/x-wav\") != \"\"){\n            supports.push(\".wav\");\n        }\n        if (document.createElement('audio').canPlayType(\"audio/mpeg\") != \"\"){\n            supports.push(\".mp3\");\n        }\n        if (document.createElement('audio').canPlayType('audio/mp4') != \"\"){\n            supports.push(\".mp4\");\n        }\n        if (document.createElement('audio').canPlayType('audio/mp4; codecs=\"mp4a.40.5\"') != \"\"){\n            supports.push(\".m4a\");\n        }\n        console.debug(\"Your browser seems to support these containers: \" + supports);\n        return supports;\n    },\n\n    /**\n     * Load passed audio signal\n     *\n     * @protected\n     * @param {string} url - URL\n     */\n    _loadSound: function(url) {\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n\n        // Decode asynchronously\n        var that = this;\n        request.onload = function() {\n            that.ctx.decodeAudioData(request.response, function(buffer) {\n                that._buffer = buffer;\n                that.canplay = true;\n                that._rangeEnd = that._buffer.duration;\n                that.duration = that._buffer.duration;\n                console.debug(\"audio loaded & decoded!\");\n\n                /**\n                 * Will be fired if the audio data has been loaded &\n                 * decoded\n                 * @event module:irtPlayer~AudioData#audio_loaded\n                 */\n                $(that).triggerHandler(\"audio_loaded\");\n            });\n        };\n        request.send();\n    }\n}\n\n\n/**\n * Represents Controller class which has all the logic to control an\n * array of {@link AudioData} instances\n *\n * @constructor\n *\n * @param {Object} [ctx] - An AudioContext instance.\n * @param {string[]} [sounds] - Array with list of URLs of the audio sources (with or without\n * extension).\n * @param {boolean} [checkSupportFlag=true] - Enable / disable extension\n * support for passed url (see [AudioData._checkExtension]{@link AudioData#_checkExtension})\n *\n * @fires module:irtPlayer~IRTPlayer#player_ready\n * @fires module:irtPlayer~IRTPlayer#player_ended\n */\nvar IRTPlayer = function(ctx, sounds, checkSupportFlag){\n    if (typeof ctx === 'undefined') {\n        if (typeof AudioContext !== 'undefined') {\n            var ctx = new AudioContext();\n        } else if (typeof webkitAudioContext !== 'undefined') {\n            var ctx = new webkitAudioContext();\n        } else {\n            alert(\"Your browser doesn't support the Web Audio API!\");\n        }\n    }\n\n    var checkSupportFlag = typeof checkSupportFlag !== 'undefined' ? checkSupportFlag : true;\n    this._checkSupport = checkSupportFlag;\n    this.ctx = ctx;\n\n    /**\n     * @description Flag if audio signals will be looped\n     * @var {boolean} */\n    this.loopingState = true;\n\n    /**\n     * @description Array of {@link AudioData} instances\n     * @var {AudioData[]} */\n    this.signals = [];\n\n    /** @var {boolean} */\n    this.playing = false;\n    this.canplay = false;\n    this.init(sounds);\n\n    /**\n     * @description Global volume for all {@link AudioData} instances\n     * @var {float} */\n    this.vol = 1.0;\n\n    /**\n     * @description Has array entry integer of currently active file.\n     * See {@link IRTPlayer#muteOthers} or  {@link IRTPlayer#attenuateOthers}\n     * @var {integer}\n     */\n    this.activeSignal = null;\n    //this.muteOthers(0);\n    this._loaded_counter = 0;\n    this._ended_counter = 0;\n    }\n\nIRTPlayer.prototype = {\n\n    /**\n     * Adds all audio signals of passed array to the player\n     *\n     * @param {string[]} sounds - Array of URLs\n     */\n    init: function(sounds){\n        if (typeof sounds != \"undefined\"){\n            for (var i=0; i < sounds.length; i++) {\n                //this.signals[i] = new AudioData(this.ctx, sounds[i]); // can be also used to reset tracks array\n                this.addURL(sounds[i]);\n            }\n\n            // we must bind the event listeners here, because within\n            // addURL() it would fulfilled every time the event would\n            // be triggered, since the signals[] array does not yet\n            // contain all signals during addURL() calls here..\n            /*\n            for (var i=0; i < this.signals.length; i++){\n                this._addEventListener(this.signals[i]);\n            }\n            */\n        }\n        else {\n            console.warn('No urls for sounds passed');\n        }\n    },\n\n    /**\n     * Will add audio sources manually to the {@link IRTPlayer} instance\n     *\n     * @param {string} url - URL of to be added audio source\n     */\n    addURL: function(url){\n        var audio = new AudioData(this.ctx, url, this.ctx.destination, this._checkSupport);\n        this.addAudioData(audio);\n\n        // The event listener must be registered before the event trigger can be\n        // created! So we call the load() method explicitely afterwards.\n        audio.load();\n    },\n\n    /**\n     * Will add {@link AudioData} instances to the {@link IRTPlayer} instance\n     *\n     * @param {AudioData} audioData - instance of to be added audio data object\n     */\n    addAudioData: function(audioData){\n        this._addEventListener(audioData);\n        audioData.setLoopState(false);\n        this.signals.push(audioData);\n    },\n\n    _addEventListener: function(audioData){\n        // NOTE: This is likely working only due to the delayed loading of\n        // the audio files. As we all know, the event listener must be already registered\n        // before the event trigger can be registered as well. So in the worst case,\n        // the audio files will be loaded and decoded _before_ the listener is\n        // registered which means that NO event will be triggered and received..!\n        // TODO: find a good workaround for this issue!\n        $(audioData).on(\"audio_loaded\", function(){\n            this._loaded_counter += 1;\n            if (this._loaded_counter == this.signals.length){\n                console.debug(\"All buffers are loaded & decoded\");\n                /**\n                 * Will be fired to the DOM once all audio signals are loaded.\n                 * This event is triggered to the DOM and not to the object instance\n                 * as this would mean that the listener would have to be registered on\n                 * the not yet exisiting object instance... ==> logic proplem.\n                 * TODO: find alternative solution with promises, callback, etc\n                 * @event module:irtPlayer~IRTPlayer#player_ready\n                 */\n                $(this).triggerHandler(\"player_ready\");\n                this.canplay = true;\n                this.duration = this.signals[0].duration;\n            }\n        }.bind(this));\n\n        $(audioData).on(\"audio_ended\", function(){\n            this._ended_counter += 1;\n            if (this._ended_counter == this.signals.length){\n                this.playing = false;\n                console.debug(\"All buffers ended\");\n                /**\n                 * Will be fired to the DOM once all audio signals are loaded.\n                 * This event is triggered to the DOM and not to the object instance\n                 * as this would mean that the listener would have to be registered on\n                 * the not yet exisiting object instance... ==> logic proplem.\n                 * TODO: find alternative solution with promises, callback, etc\n                 * @event module:irtPlayer~IRTPlayer#player_ended\n                 */\n                $(this).triggerHandler(\"player_ended\");\n            }\n        }.bind(this));\n    },\n\n    /**\n     * Toggles play / pause of playback\n     */\n    togglePlay: function(){\n        if (this.playing == false){\n            this.play();\n        }\n        else {\n            this.pause();\n        }\n    },\n\n    /**\n     * Starts playback of all audio sources in {@link IRTPlayer#signals}\n     */\n    play: function(){\n        this._do('play');\n        this.playing = true;\n        this._do('setLoopState', this.loopingState);\n        this._ended_counter = 0;\n    },\n\n    /**\n     * Pauses playback of all audio sources in {@link IRTPlayer#signals}\n     */\n    pause: function(){\n        this._do('pause');\n        this.playing = false;\n    },\n\n    /**\n     * Stops playback of all audio sources in {@link IRTPlayer#signals}\n     */\n    stop: function(){\n        this._do('stop');\n        this.playing = false;\n        this._do(\"setLoopState\", false);\n    },\n\n    /**\n     * Will mute all audio sources of {@link IRTPlayer#signals} but the\n     * one with the passed index\n     *\n     * @param {integer} id - Array index number of active audio source\n     */\n    muteOthers: function(id){\n        id = parseInt(id);\n        if ((id < this.signals.length) && (id >= 0)){\n            this._do('mute');\n            this.signals[id].unmute();\n            this.activeSignal = id;\n        }\n        else{\n            console.error(\"Passed array index invalid!\")\n        }\n    },\n\n    /**\n     * Will unmute all audio sources in {@link IRTPlayer#signals}\n     */\n    unmuteAll: function(){\n        this._do('unmute');\n        this.activeSignal = null;\n    },\n\n    /**\n     * Will attenuate all audio sources of {@link IRTPlayer#signals} but the\n     * one with the passed index. The active one will have gain value of\n     * {@link IRTPlayer#vol}\n     *\n     * @param {integer} id - Array index number of active audio source\n     * @param {float} attenuation - Gain value for other (attenuated)\n     * audio sources\n     */\n    attenuateOthers: function(id, attenuation){\n        id = parseInt(id);\n        if ((id < this.signals.length) && (id >= 0)){\n            this._do('setGain', attenuation);\n            this.signals[id].setGain(this.vol);\n            this.activeSignal = id;\n        }\n        else{\n            console.error(\"Passed array index invalid!\")\n        }\n    },\n\n    /**\n     * Disables / enables looping of the audio sources\n     */\n    toggleLoop: function() {\n        if (this.loopingState == false){\n            this.loopingState = true;\n        }\n        else {\n            this.loopingState = false;\n        }\n        this._do('toggleLoop');\n    },\n\n    /**\n     * Sets start position for playback\n     *\n     * @param {float} pos  - Start playback always at passed\n     * position for all audio sources in {@link IRTPlayer#signals}\n     */\n    setRangeStart: function(pos){\n        console.info(\"Range start: \" + pos);\n        this._do('setRangeStart', pos);\n    },\n\n    /**\n     * Sets end position for playback\n     *\n     * @param {float} pos  - End playback always at passed\n     * position for all audio sources in {@link IRTPlayer#signals}\n     */\n    setRangeEnd: function(pos){\n        console.info(\"Range end: \" + pos);\n        this._do('setRangeEnd', pos);\n    },\n\n    /**\n     * Jump to passed position during playback\n     *\n     * @param {float} time  - Must be between 0 and {@link\n     * AudioData#_rangeEnd}\n     */\n    setTime: function(time){\n        this._do('setTime', time);\n    },\n\n    /**\n     * Returns current position of playback\n     * @return {number} pos - Current playback position\n     */\n    getTime: function(){\n        return this.signals[0].getTime();\n    },\n\n    /**\n     * Helper function to apply AudioData methods for all instances in\n     * {@link IRTPlayer#signals} array\n     * @param {string} func - Name of the method to be executed\n     * @param {...args} args - variable number of additional arguments that\n     * should be passed to the method\n     * @protected\n     */\n    _do: function(func){\n        if (arguments.length == 2){\n            var args = arguments[1];    // prevents that a single argument will be passed as array with one entry\n        } else {\n            var args = Array.prototype.splice.call(arguments, 1);\n        }\n        for (var i=0; i < this.signals.length; i++){\n            this.signals[i][func](args);\n        }\n    }\n}\n\n\nexports.AudioData = AudioData;\nexports.IRTPlayer = IRTPlayer;\n",
    "/*jshint esversion: 6 */\n/**\n * @file media_controller.js\n * @author Michael Weitnauer: {@link weitnauer@irt.de}\n */\n\n/**\n * @module bogJS\n *\n */\n\nvar GainController = require('./gain_controller');\n\n/**\n * Represents MediaElementController class which has all the logic to control a HTML5 media element\n * Every track / channel of the media element can be controlled separately.\n *\n * @constructor\n *\n * @param {Object} ctx - An AudioContext instance.\n * @param {string} mediaElement - HTML5 media element\n * @param {Number} tracks - Number of media element channels\n * @param {Object} [targetNodeList=ctx.destination] - The audio node to which the MediaElementController\n * @fires module:bogJS~MediaElementController#audio_init\n * @fires module:bogJS~MediaElementController#audio_loaded\n * @fires module:bogJS~MediaElementController#audio_ended\n */\nvar MediaElementController = function(ctx, mediaElement, tracks, targetNodeList) {\n    /** @protected\n     * @var {boolean} */\n    this.canplay = false;\n\n    /** @var {Object.<AudioContext>} */\n    this.ctx = ctx;\n\n    this._mediaElement = mediaElement;\n    this._mediaSourceNode = this.ctx.createMediaElementSource(this._mediaElement);\n    this._tracks = tracks;\n    this._splitter = this.ctx.createChannelSplitter(this._tracks);\n    this._mediaSourceNode.connect(this._splitter);\n\n    this.gainController = [];\n    if (typeof targetNodeList === 'undefined') {\n        var targetNodeList = [];\n        for (var i = 0; i < this._tracks; i++){\n            targetNodeList.push(this.ctx.destination);\n        }\n    }\n    for (var i = 0; i < this._tracks; i++){\n        this.gainController[i] = new GainController(this.ctx, targetNodeList[i]);\n\n        // TODO: Workaround for wrong channel order of decoded bitstream\n        this._splitter.connect(this.gainController[i].gainNode, i);\n    }\n\n    this._mediaElement.onended = function(){\n        console.debug(\"Audio buffer has ended!\");\n        this._playing = false;\n\n        /**\n         * Will be fired once the playback has ended\n         * @event module:bogJS~MediaElementController#audio_ended\n         */\n        $(this).triggerHandler(\"audio_ended\");\n    }.bind(this);\n\n    this._mediaElement.onstalled = function(){\n        console.info(\"Pausing playback - need to buffer more\");\n        this.ctx.suspend();\n    }.bind(this);\n\n    this._mediaElement.onplaying = function(){\n        console.info(\"Resuming playback of media element\");\n        if (this.ctx.state === \"suspended\"){\n            this.ctx.resume();\n        }\n    }.bind(this);\n\n    this._mediaElement.oncanplaythrough = function(){\n        this.canplay = true;\n        console.info(\"Playback of media element can start\");\n\n        /**\n         * Will be fired if media element playback can start\n         * @event module:bogJS~MediaElementController#audio_loaded\n         */\n        $(this).triggerHandler('audio_loaded');\n        if (this.ctx.state === \"suspended\"){\n            this.ctx.resume();\n        }\n    }.bind(this);\n\n    this._mediaElement.load();\n    this._playing = false;\n    this._looping = false;\n}\n\nMediaElementController.prototype = {\n    /**\n    * Start playback of audio signal\n    *\n    * @param {number} [pos] - Position from which the playback shall start\n    * (optional)\n    */\n    play: function(pos){\n        if (typeof pos != 'number'){        // detection with _.isNumber() could be more robust\n            this._mediaElement.play();\n        } else {\n            console.debug(\"Starting playback at \" + pos);\n            this.setTime(pos);\n            this._mediaElement.play()\n        }\n        this._playing = true;\n    },\n\n    /**\n     * Pause playback.\n     *\n     */\n    pause: function(){\n        this._mediaElement.pause();\n        this._playing = false;\n    },\n\n    /**\n     * Stops playback.\n     */\n    stop: function(){\n        this._mediaElement.pause();\n        this._playing = false;\n        this._mediaElement.currentTime = 0;\n    },\n\n    /**\n     * Sets gain of {@link MediaElementController} instance\n     *\n     * @param {float} gain - Value between 0.0 and 1.0\n     */\n    setVolume: function(vol){\n        this._mediaElement.volume = vol;\n    },\n\n    /**\n     * Returns current gain value of {@link MediaElementController} instance\n     *\n     * @return {float} value - Float gain value\n     */\n    getVolume: function(){\n        return this._mediaElement.volume;\n    },\n\n    /**\n     * Disables / enables the loop of the {@link MediaElementController} instance\n     */\n    toggleLoop: function() {\n        if (this._looping == false){\n            this._looping = true;\n        } else {\n            this._looping = false;\n        }\n        this._mediaElement.loop = this._looping;\n    },\n\n    /**\n     * Disables / enables the loop of the {@link MediaElementController} instance\n     */\n    setLoopState: function(bool) {\n        this._looping = bool;\n        this._mediaElement.loop = this._looping;\n    },\n\n    /**\n     * Mutes {@link MediaElementController} instance\n     */\n    mute: function(){\n        this._mediaElement.muted = true;\n    },\n\n    /**\n     * Unmutes {@link MediaElementController} instance\n     */\n    unmute: function(){\n        this._mediaElement.muted = false;\n    },\n\n    /**\n     * Jump to passed position during playback\n     *\n     * @param {float} pos  - Must be >= 0\n     */\n    setTime: function(pos){\n        if (pos >= 0){\n            this._mediaElement.currentTime = pos;\n        }\n    },\n\n    /**\n     * Returns current playback position\n     *\n     * @return {number} value - Current playback position\n     */\n    getTime: function(){\n        return this._mediaElement.currentTime;\n    }\n}\n\nmodule.exports = MediaElementController;\n",
    "/*jshint esversion: 6 */\n/**\n * @file object.js\n * @author Michael Weitnauer [weitnauer@irt.de]\n */\n\n/**\n * @module bogJS\n */\n\nvar GainController = require('./gain_controller');\n\n/**\n * Represents ObjectController class which has all the logic to control an\n * audio object\n *\n * @constructor\n *\n * @param {Object} ctx - An AudioContext instance.\n * @param {AudioData} sourceNode - Instance of an {@link\n * module:irtPlayer~AudioData|AudioData} object.\n * @param {AudioData} [targetNode=ctx.destination] - Instance of an\n * Web Audio API node to which the output of the ObjectController\n * shall be connected to.\n */\n\nvar ObjectController = function(ctx, sourceNode, targetNode=ctx.destination) {\n    /**\n     * Instance of Web Audio Panner node\n     * @var {Object.<AudioContext.PannerNode>}\n     */\n    this.panner = ctx.createPanner();\n\n    // Experimental highpass to avoid sizzling noinse while chaning view / angle\n    //this.highpass = ctx.createBiquadFilter();\n    //this.highpass.type = \"highpass\";\n    //this.setHighpassFreq(80);\n    //this.highpass.connect(this.panner);\n\n    /**\n     * Has the current panning mode of the object\n     * @readonly\n     */\n    this.panningType = \"equalpower\";\n    this.panner.maxDistance = 10;\n\n    this.setPanningType(this.panningType);\n    this.position = [0, 0, 0];  // FIXME: make private and use set and get methods\n    this.gain = 1;  // valid values between 0 and 1  // FIXME: make private and use set and get methods\n\n    this._state = false;\n    this.stateNode = new GainController(ctx, this.panner);\n    this.interactiveGain = new GainController(ctx, this.stateNode.gainNode);\n\n    this.setAudio(sourceNode);\n    this.panner.connect(targetNode);\n};\n\nObjectController.prototype = {\n\n    /**\n     * Change position of panner object within 3D space\n     *\n     * @param {Float[]} xyz - An array with three entries: [x, y, z]\n\n     * @see Interpolation as per AudioParam Interface not possible with\n     * current WAA version. The PannerNode will be deprecated in V1\n     * and a new SpatializerNode will be introduced that should\n     * support interpolation _and_ loading own HRTF databases!!\n     * {@link https://github.com/WebAudio/web-audio-api/issues/372| GitHub issue 372}\n     */\n    setPosition: function(xyz){\n        var my_xyz = [parseFloat(xyz[0]), parseFloat(xyz[1]), parseFloat(xyz[2])];\n        this.panner.setPosition(xyz[0], xyz[1], xyz[2]);\n        console.debug(\"New Position: \" + my_xyz);\n        this.position = xyz;\n    },\n\n    /**\n     * Get current Position of object\n     * @return {Float[]} position - Array with current [x, y, z] values\n     */\n    getPosition: function(){\n        return this.position;\n    },\n\n    /**\n     * Enabling / disabling the object\n     *\n     * @param {Boolean} state - Enables / disables the panner object\n     * instance\n     */\n    setStatus: function(state){\n        if ((state === true) || (state == 1)){\n            this.stateNode.unmute();\n            this._state = true;\n        }\n        else if ((state === false) || (state == 0)){\n            this.stateNode.mute();\n            this._state = false;\n        }\n        console.info(\"Setting state to \" + this._state);\n    },\n\n    /**\n     * Sets gain value of {@link\n     * module:bogJS~GainController#gainNode|GainController.gainNode}\n     * Separate GainNode to be used for interactive Gain control, aka\n     * cross-fading between one group and another.\n     * @param {Float} gain - Must be between 0.0 and 1.0\n     */\n    setInteractiveGain: function(gain){\n        this.interactiveGain.setGain(gain);\n        this._interactiveGain = gain;\n    },\n\n    /**\n     * Returns current object state\n     * @return {Boolean} status\n     */\n    getStatus: function(){\n        return this._state;\n    },\n\n    /**\n     * Sets gain value of {@link\n     * module:irtPlayer~AudioData#gainNode|AudioData.gainNode}\n     *\n     * @param {Float} gain - Must be between 0.0 and 1.0\n     * @param {Float} [time=Now] - At which time shall the gain value be applied\n     * @param {Boolean} [interpolation=false] - Set to true if gain\n     * value shall be linear faded to passed gain value from passed time on. If\n     * false, the gain value will be applied immediately.\n     */\n    setGain: function(gain, time=\"now\", interpolation=false){\n        if (time === \"now\") {\n            this.audio.setGain(gain);\n            this.gain = gain;\n        }\n        else if ((time !== \"now\") && (interpolation === false)) {\n            this.audio.gainNode.gain.setValueAtTime(gain, time);\n        }\n        else if ((time !== \"now\") && (interpolation !== false)){\n            this.audio.gainNode.gain.linearRampToValueAtTime(gain, time);\n        }\n    },\n\n    /**\n     * Get current gain value of {@link\n     * module:irtPlayer~AudioData#gainNode|AudioData.gainNode}\n     *\n     * @return {Float} gain\n     */\n    getGain: function(){\n        return this.audio.getGain();  // or do we trust in this.gain ??\n    },\n\n    /**\n     * Set panning type of Panner object instance.\n     * Currently, \"equalpower\" only supports Stereo (2ch) panning.\n     *\n     * @param {(\"HRTF\"|\"equalpower\")} panningType - Choose \"HRTF\" for binaural\n     * rendering or \"equalpower\" for Stereo rendering.\n     */\n    setPanningType: function(panningType){\n        if ((panningType === \"HRTF\") || (panningType === \"equalpower\")){\n            this.panner.panningModel = panningType;\n            this.panningType = this.panner.panningModel;\n        }\n        else {\n            console.error(\"Only >>HRTF<< or >>equalpower<< are valid types\");\n        }\n    },\n\n    /**\n     * Get panning type\n     * @return {(\"HRTF\"|\"equalpower\")} panningType - Either \"HRTF\" or \"equalpower\"\n     */\n    getPanningType: function(){\n        return this.panner.panningModel;\n    },\n\n    /**\n     * Sets the double value describing how quickly the volume is reduced\n     * as the source moves away from the listener. The initial default value\n     * is 1. This value is used by all distance models.\n     *\n     * @param {Float} factor\n     */\n    setRollOffFactor: function(factor){\n        this.panner.rolloffFactor = factor;\n    },\n\n    /**\n     * Sets the value determining which algorithm to use to reduce the\n     * volume of the audio source as it moves away from the listener. The\n     * initial default value is \"inverse\" which should be equivalent to 1/r.\n     *\n     * @param {(\"inverse\"|\"exponential\"|\"linear\")} model - \"inverse\" is the default setting\n     */\n    setDistanceModel: function(model){\n        this.panner.distanceModel = model;\n    },\n\n    /**\n     * Sets the value representing the reference distance for reducing volume\n     * as the audio source moves further from the listener. The initial\n     * default value is 1. This value is used by all distance models.\n     *\n     * @param {float} refDistance\n     */\n    setRefDistance: function(refDistance){\n        this.panner.refDistance = refDistance;\n    },\n\n    /**\n     * Sets the value representing the maximum distance between the audio\n     * source and the listener, after which the volume is not reduced any\n     * further. The initial default value is 10000. This value is used\n     * only by the linear distance model.\n     *\n     * @param {float} maxDistance\n     */\n    setMaxDistance: function(maxDistance){\n        this.panner.maxDistance = maxDistance;\n    },\n\n    /**\n     * Connects the input of the ObjectController instance\n     * with the output of the passed audioNode.\n     *\n     * @param {AudioData} audioNode - Instance of an {@link\n     * module:irtPlayer~AudioData|AudioData} or GainController object.\n     */\n    setAudio: function(audioNode){\n        // call disconnect only if this.audio exists\n        // it is absolutely essential to disconnect the old audio instance\n        // before the new one can be assigned!\n        /* FIXME: clarify the expected behaviour of a setAudio() method!\n        if (this.audio){\n            this.audio.disconnect(this.panner);\n        }\n        */\n        this.audio = audioNode;\n        // just to make sure we assigned a valid audioNode..\n        if (this.audio){\n            // FIXME: AudioData() class should also have a connect method.\n            // Better would be to use derived class mechanisms.\n            if(this.audio.connect) {\n                this.audio.connect(this.interactiveGain.gainNode);\n            }\n            else {\n                this.audio.reconnect(this.interactiveGain.gainNode);\n            }\n        }\n    },\n\n    setHighpassFreq: function(freq){\n        this.highpass.frequency.value = freq;\n    }\n};\n\nmodule.exports = ObjectController;\n",
    "/*jshint esversion: 6 */\n/**\n * @file object_manager.js\n * @author Michael Weitnauer [weitnauer@irt.de]\n */\n\n/**\n * @module bogJS\n */\n\n/**\n * @typedef keyframes\n * @type {object}\n * @example\n * keyframes = {0.0: [{obj: \"Cello\", cmd: \"position\", params: [3.2, 4, 0]},\n *                    {obj: \"Cembalo\", cmd: \"gain\", params: 0.5}],\n *              0.4: [{obj: \"Cembalo\", cmd: \"is_present\", params: 0},\n *                    {obj: \"Cello\", cmd: \"gain\", params: 1.0}],\n *              235: [{obj: \"Viola\", cmd: \"is_present\", params: 1},\n *                    {obj: \"Viola\", cmd: \"position\", params: [0.5, 3.2, 0.5]}]};\n */\n\n/**\n * @typedef audioURLs\n * @type {object}\n * @example\n * audioURLs = {Cello: \"http://sounds.myserver.com/Cello.ogg\",\n *              Cembalo: \"http://sounds.myserver.com/Cembalo.wav\",\n *              Viola: \"../../Viola.m4a\"}\n */\n\n/**\n * @typedef sceneInfo\n * @type {object}\n * @example\n * sceneInfo = {name: \"My fancy scene\",\n *              listener_position: [0, 0, 0],\n *              listener_orientation: [0, 1, 0],\n *              object_count: 3,\n *              room_dimensions: [10, 10, 3]}\n */\n\n/**\n * @typedef singleObjects\n * @type {object}\n * @example\n * singleObjects = {\"70.754\":[\"Birds1_L\",\"Birds1_R\"],\n *                  \"72.0\":[\"Birds2_L\",\"Birds2_R\"],\n *                  \"79.29\":[\"Birds3\"],\n *                  \"90.65\":[\"Crows\"],\n *                  \"102.55\":[\"Vulcano_L\",\"Vulcano_R\"],\n *                  \"117.55\":[\"Stones_L\",\"Stones_R\"]}\n */\n\n/**\n * @typedef groupObjects\n * @type {object}\n * @example\n * groupObjects = {\"78.2\":[\"Birds1_L\",\"Birds1_R\"],\n *                  \"90.65\":[\"Birds\"],\n *                  \"117.55\":[\"Stones_L\",\"Stones_R\"]}\n */\n\n/**\n * @typedef audiobeds\n * @type {object}\n * @example\n * audiobeds =  {Bed0: \"bed_0\", Bed1: \"bed_1\", Bed2: \"bed_2\", Bed3: \"bed_3\", Bed4: \"bed_4\"}\n */\n\nwindow._ = require('underscore');\nvar WAAClock = require('waaclock');\nvar ChannelOrderTest = require('./channelorder_test');\nvar AudioData = require('./html5_player/core').AudioData;\nvar IRTPlayer = require('./html5_player/core').IRTPlayer;\nvar ObjectController = require('./object');\nvar GainController = require('./gain_controller');\nvar MediaElementController = require('./media_controller');\nvar SceneReader = require('./scene_reader');\n\n/**\n * Represents ObjectManager class which has all the logic to control\n * several {@link module:bogJS~ObjectController|ObjectController} instances along with metadata\n *\n * @constructor\n *\n * @param {string} url - URL of the metadata source.\n * @param {Object} [ctx] - An AudioContext instance.\n * @param {Object} [reader] - A reader instance that has a load() method\n * and will fire a event called \"scene_loaded\". The event must also pass\n * {@link module:bogJS~keyframes|keyframes}, {@link module:bogJS~audioURLs|audioURLs}\n * and {@link module:bogJS~sceneInfo|sceneInfo}. See {@link\n * module:bogJS~SceneReader#load|SceneReader.load()}\n * @param {Object} [mediaElement] - A HMTL5 media element instance to be used as\n * audio bed. If passed, any potentially other given audio bed from the scene\n * file will be ignored.\n * @param {Number} [audiobed_tracks] - If mediaElement is passed, the expected\n * channel number must be passed as well.\n * @param {String} [channelorder_root] - Path to encoded channel order detection\n * test files. See also [ChannelOrderTest]{@link module:bogJS~ChannelOrderTest}\n * and the README.md file.\n * @fires module:bogJS~ObjectManager#om_newGain\n * @fires module:bogJS~ObjectManager#om_newPosition\n * @fires module:bogJS~ObjectManager#om_newTrackMapping\n * @fires module:bogJS~ObjectManager#om_isActive\n *\n */\nvar ObjectManager = function(url, ctx, reader, mediaElement, audiobed_tracks, channelorder_root){\n    if (typeof ctx === 'undefined') {\n        if (typeof AudioContext !== 'undefined') {\n            var ctx = new AudioContext();\n        } else if (typeof webkitAudioContext !== 'undefined') {\n            var ctx = new webkitAudioContext();\n        } else {\n            alert(\"Your browser doesn't support the Web Audio API!\");\n        }\n    }\n    /**\n     * Instance of Web Audio AudioContext\n     * @var {Object.<AudioContext>}\n     */\n    this.ctx = ctx;\n    this.masterGain = new GainController(this.ctx, ctx.destination);\n    /**\n     * Instance of {@link SceneReader}\n     * @var {(CustomReaderInstance|Object.<module:bogJS~SceneReader>)}\n     */\n    this.reader = reader || new SceneReader();\n\n    this._mediaElement = mediaElement;\n    this._mediaElementTracks = audiobed_tracks;\n    this._channorder_root = channelorder_root;\n\n    /**\n     * Instance of {@link module:irtPlayer~IRTPlayer|IRTPlayer}\n     * @var {Object.<module:irtPlayer~IRTPlayer>}\n     */\n    this._clock = new WAAClock(this.ctx);\n    this._evts = {};\n    this._timer_evt = false;\n    this._audioURLs = {};\n    this._currentKeyframeIndex = 0;\n    this._kfMapping = {};\n    this._last_kfMapping = {};\n\n    this._audiobedTracks = {};\n    this._groupObjURLs = {};\n    this._singleObjURLs = {};\n    this._audiobed = false;\n    this._groupObjPlayers = {};\n    this._singleObjAudios = {};\n    this._kf_canplay = {};\n\n    /**\n     * Array of all {@link module:bogJS~ObjectController|ObjectController} instances that are controlled\n     * by the {@link module:bogJS~ObjectManager|ObjectManager}\n     * @var {module:bogJS~ObjectController[]}\n     */\n    this.objects = {};\n    this._audioInstances = {};\n    this._panningType = \"equalpower\";\n\n    /**\n     * If set to true, the ObjectManager will ignore keyframe updates!\n     * @var {boolean}\n     * @default false\n     */\n    this.interactive = false;\n    this.playing = false;\n\n    this._listenerOrientation = [0, 0, -1];\n    this.setListenerOrientation(0, 0, -1);\n\n    $(this.reader).on('scene_loaded', function(e, keyframes, audioURLs, sceneInfo, groupObjects, singleObjects, audiobeds, interactiveInfo){\n        console.debug('Scene data loaded!');\n\n        /**\n         * 'Dictionary' containing keyframes + commands triplets per keyframe.\n         * @abstract\n         * @var {module:bogJS~keyframes}\n         */\n        this._keyframes = keyframes;\n\n        /**\n         * 'Dictionary' containing mapping for objects and URLs.\n         * @abstract\n         * @var {module:bogJS~audioURLs}\n         */\n        this._audioURLs = audioURLs;\n\n        /**\n         * 'Dictionary' containing additional scene info\n         * @abstract\n         * @var {module:bogJS~sceneInfo}\n         */\n        this._sceneInfo = sceneInfo;\n        /**\n         * 'Dictionary' containing interactive info\n         * @abstract\n         * @var {module:bogJS~interactiveInfo}\n         */\n        this.interactiveInfo = interactiveInfo;\n        this.object_count = sceneInfo.object_count || 0;\n        this.roomDimensions = sceneInfo.room_dimensions || [10, 10, 3];\n        this._listenerPosition = sceneInfo.listener_position || [0, 0, 0];\n\n        /**\n         * 'Dictionary' containing mapping for objects and audiobed tracks\n         * @abstract\n         * @var {module:bogJS~audiobeds}\n         */\n        this._audiobedTracks = audiobeds;\n\n        /**\n         * 'Dictionary' containing info to identify grouped objects\n         * @abstract\n         * @var {module:bogJS~groupObjects}\n         */\n        this._groupObjURLs = groupObjects;\n\n        /**\n         * 'Dictionary' containing info to identify single objects\n         * @abstract\n         * @var {module:bogJS~singleObjects}\n         */\n        this._singleObjURLs = singleObjects;\n\n        this.init();\n    }.bind(this));\n    this.reader.load(url);\n};\n\nObjectManager.prototype = {\n\n    /**\n     * Creates [AudioData]{@link module:irtPlayer~AudioData} and\n     * [ObjectController]{@link module:bogJS~ObjectController} instances and\n     * adds the AudioData instances to the {@link module:bogJS~ObjectManager#player}\n     */\n    init: function(){\n        if (typeof this._mediaElement !== 'undefined'){\n            this._audiobed = new MediaElementController(this.ctx, this._mediaElement, this._mediaElementTracks);\n        } else if (this._sceneInfo.audiobed_url){\n            var a = document.createElement(\"audio\");\n            var src = this._sceneInfo.audiobed_url;\n            if (/\\.[0-9a-z]{3,4}$/i.exec(src) === null){  // if no file extension is stated\n                if (a.canPlayType('audio/ogg codecs=opus')) {\n                    a.type= 'audio/ogg codecs=opus';\n                    src = src + '.opus';\n                } else {\n                    a.type = 'audio/mp4';\n                    src = src + '.mp4';\n                }\n            }\n            a.src = src;\n            this._mediaElementTracks = parseInt(this._sceneInfo.audiobed_tracks);\n            this._audiobed = new MediaElementController(this.ctx, a, this._mediaElementTracks);\n        }\n        if (this._audiobed !== false){\n            // If there is an audiobed, we can trigger the om_ready event even\n            // though other keyframe assets are not yet ready. We need to trigger\n            // the event here in case NO other assets are used.\n            // This is for sure not really a sophisticated way to solve this but it\n            // should work. In the worst case, the playback will pause again if\n            // the assets are not yet loaded and decoded.\n            $(this._audiobed).on('audio_loaded', function(){\n                console.debug(\"Audiobed loaded, detect channel order..\");\n                var url = \"\";\n                if (this._audiobed._mediaElement.src !== \"\"){\n                    url = this._audiobed._mediaElement.src;\n                } else if (this._audiobed._mediaElement.currentSrc !== \"\") {\n                    url = this._audiobed._mediaElement.currentSrc;\n                } else {\n                    console.error(\"The src of the audiobed couldn't be detected!\");\n                }\n                var re = /\\.[0-9a-z]{3,4}$/i;  // strips the file extension (must be 3 or 4 characters)\n                var container = re.exec(url)[0];\n                container = container.split('.').join(\"\"); // removes dot from the string\n                this._chOrderTest = new ChannelOrderTest(container,\n                                                     this._mediaElementTracks,\n                                                     this.ctx,\n                                                     this._channorder_root);\n                $(document).triggerHandler('om_ready');\n                console.debug('Audiobed ready for playback');\n                //var chOrder = this._chOrderTest.testChs();\n            }.bind(this));\n\n            $(this._audiobed).on('audio_ended', function(){\n                $(document).triggerHandler('om_ended');\n                om.stop();\n            }.bind(this));\n\n            $(document).on('order_ready', function(e, order){\n                console.debug('Got channel order: ' + order);\n                this._chOrder = order;\n                // firstly, disconnect any connections to other nodes to avoid\n                // confusions and strange behaviours..\n                for (var i = 0; i < order.length; i++){\n                    this.objects[\"Bed\"+order[i]].audio.disconnect();\n                }\n                // now assign correct gainController to corresponding\n                // pannerNode\n                for (var i = 0; i < order.length; i++){\n                    console.debug(\"Reconnecting GainController \" + i + \" with Bed \" + order[i]);\n                    this.objects[\"Bed\"+order[i]].setAudio(this._audiobed.gainController[i]);\n                }\n            }.bind(this));\n\n        }\n\n        for (var obj in this._audiobedTracks){\n            var trackNr = parseInt(this._audiobedTracks[obj].split(\"_\")[1]);\n            this.objects[obj] = new ObjectController(this.ctx,\n                                                     this._audiobed.gainController[trackNr],\n                                                     this.masterGain.gainNode);\n            this.objects[obj].audio._id = obj;\n            this.objects[obj].panner._id = obj;\n        }\n\n        for (var kf in this._groupObjURLs){\n            this._groupObjPlayers[kf] = {};\n            this._kf_canplay[kf] = {};\n            for (var group in this._groupObjURLs[kf]){\n                this._kf_canplay[kf][group] = false;\n                var player = new IRTPlayer(this.ctx);\n                $(player).on('player_ready', this._loadedStateDelegate(kf, group));\n                for (var idx in this._groupObjURLs[kf][group]){\n                    var obj = this._groupObjURLs[kf][group][idx];\n                    var url = this._audioURLs[obj];\n                    var audioInstance = new AudioData(this.ctx, url);\n                    audioInstance.load();\n                    audioInstance.setLoopState(false);\n                    this.objects[obj] = new ObjectController(this.ctx,\n                                                             audioInstance,\n                                                             this.masterGain.gainNode);\n                    player.addAudioData(audioInstance);\n                    this._groupObjPlayers[kf][group] = player;\n                }\n            }\n        }\n\n        for (var kf in this._singleObjURLs){\n            this._singleObjAudios[kf] = {};\n            if (!this._kf_canplay[kf]){\n                this._kf_canplay[kf] = {};\n            }\n            for (var idx in this._singleObjURLs[kf]){\n                var obj = this._singleObjURLs[kf][idx];\n                var url = this._audioURLs[obj];\n                this._kf_canplay[kf][obj] = false;\n                var audioInstance = new AudioData(this.ctx, url);\n                $(audioInstance).on(\"audio_loaded\", this._loadedStateDelegate(kf, obj));\n                audioInstance.load();\n                audioInstance.setLoopState(false);\n                this.objects[obj] = new ObjectController(this.ctx,\n                                                         audioInstance,\n                                                         this.masterGain.gainNode);\n                this._singleObjAudios[kf][obj] = audioInstance;\n            }\n        }\n        this.setPanningType(this._panningType);\n        $(document).triggerHandler('om_initialized');\n        console.debug('Scene sucessfully initialized!');\n        if (this.interactiveInfo.switchGroups){\n            for (var g of Object.keys(this.interactiveInfo.switchGroups)){\n                this._initSwitchGroup(g);\n            }\n        }\n        //this.start();\n    },\n\n    /**\n     * Starts playback and rendering of audio scene\n     */\n    start: function(){\n        if ((this._checkReadyStart() === true) && (this.playing === false)) {\n            this._clock.start();\n            this._startTime = this.ctx.currentTime;\n            this._processCurrentKeyframes();\n            if (this._audiobed !== false){\n                this._audiobed.play();\n            }\n            var that = this;\n            if (!this._timer_evt){\n                this._timer_evt = this._clock.setTimeout(function(){\n                    console.debug(that.ctx.currentTime);\n                }, 1).repeat(1);\n            }\n            this.playing = true;\n            return true;\n        } else {\n            console.info(\"Audio signals not yet ready for playing.\");\n            return false;\n        }\n    },\n\n    /**\n     * Pauses playback\n     */\n    pause: function(){\n        this.ctx.suspend();\n        if (this._audiobed !== false){\n            this._audiobed.pause();\n        }\n        this.playing = false;\n    },\n\n    /**\n     * Resumes playback of all objects if paused.\n     *\n     */\n    resume: function(){\n        this.ctx.resume();\n        if (this._audiobed !== false){\n            this._audiobed.play();\n        }\n        this.playing = true;\n    },\n\n    /**\n     * togglePause\n     *\n     */\n    togglePause: function(){\n        if(this.ctx.state === 'running') {\n            this.pause();\n        }\n        else if(this.ctx.state === 'suspended') {\n            this.resume();\n        }\n    },\n\n    /**\n     * Stops playback and internal clock\n     */\n    stop: function(){\n        this._clock.stop();\n        if (this._audiobed !== false){\n            this._audiobed.stop();\n        }\n        for (var kf in this._groupObjPlayers){\n            for (var group in this._groupObjPlayers[kf]){\n                this._groupObjPlayers[kf][group].stop();\n            }\n        }\n        for (var kf in this._singleObjAudios){\n            for (var idx in this._singleObjAudios[kf]){\n                this._singleObjAudios[kf][idx].stop();\n            }\n        }\n        this.playing = false;\n    },\n\n    /**\n     * Will change the playback position of all single, group and audiobed\n     * signals. Further, the closes keyframe ahead of the passed time will be\n     * activated.\n     *\n     * @param {float} time - Desired playback position\n     */\n    setTime: function(time, set_audiobed_time=true){\n        // activate closest keyframe before time to avoid\n        // missing / \"forgetting\" object commands..\n        var times = Object.keys(this._keyframes);\n\n        // works even in case the keys are strings\n        var closest_kf = _.min(times); //Get the lowest numberin case it match nothing.\n        for(var i = 0; i < times.length; i++){\n            if ((times[i] <= time) && (times[i] > closest_kf)){\n                closest_kf = times[i];\n            }\n        }\n        this._handleKeyframe(closest_kf);\n\n        for (var key in this._evts){\n            var evt = this._evts[key];\n            var evt_time = parseFloat(key);\n            var newTime = evt_time - time + this.ctx.currentTime;\n            //console.debug(\"Evt \" + key + \" rescheduled from \" + evt.deadline + \" to \" + newTime);\n            evt.schedule(newTime);\n        }\n\n        // set single and grouped audio signals to the passed position and\n        // check if passed time > duration of the single and grouped audio\n        // signals:\n        var now = this.ctx.currentTime - this._startTime;\n        for (var kf in this._singleObjAudios){\n            var audioStartPos = parseFloat(kf);\n            for (var idx in this._singleObjAudios[kf]){\n                var duration = this._singleObjAudios[kf][idx].duration;\n                var audioNewPos = time - audioStartPos;\n                // negative time values shall stop the signal.\n                if (audioNewPos <= 0){\n                    this._singleObjAudios[kf][idx].stop();\n                } else {\n                    // should stop audio if audioNewPos > duration\n                    this._singleObjAudios[kf][idx].setTime(audioNewPos);\n                    console.debug(\"Set audio \" + idx + \" to position \" + audioNewPos);\n                }\n            }\n        }\n        for (var kf in this._groupObjPlayers){\n            var audioStartPos = parseFloat(kf);\n            for (var group in this._groupObjPlayers[kf]){\n                var duration = this._groupObjPlayers[kf][group].duration;\n                var audioNewPos = time - audioStartPos;\n                // negative time values shall stop the signal.\n                if (audioNewPos <= 0){\n                    this._groupObjPlayers[kf][group].stop();\n                } else {\n                    // should stop audio if audioNewPos > duration\n                    this._groupObjPlayers[kf][group].setTime(audioNewPos);\n                    console.debug(\"Set group \" + group + \" to position \" + audioNewPos);\n                }\n            }\n        }\n        if ((this._audiobed !== false) && (set_audiobed_time)){\n            this._audiobed.setTime(time);\n        }\n    },\n\n    /**\n     * Toggle panning type between Headphones (binaural) and Stereo rendering\n     */\n    togglePanningType: function(){\n        if (this._panningType === \"HRTF\"){\n            this.setPanningType(\"equalpower\");\n            this._panningType = \"equalpower\";\n        } else if (this._panningType === \"equalpower\"){\n            this.setPanningType(\"HRTF\");\n            this._panningType = \"HRTF\";\n        }\n    },\n\n    /**\n     * @param {(\"HRTF\"|\"equalpower\")} type - Panning type for all\n     * objects\n     */\n    setPanningType: function(type){\n        for (var key in this.objects){\n            this.objects[key].setPanningType(type);\n        }\n        this._panningType = type;\n    },\n\n    /**\n     * @returns {(\"HRTF\"|\"equalpower\")} panningType\n     */\n    getPanningType: function(){\n        return this._panningType;\n    },\n\n    /**\n     * Sets listener orientation. Coordinate usage as intended by the Web\n     * Audio API. See also {@link https://webaudio.github.io/web-audio-api/#the-audiolistener-interface}\n     * NOTE: This function currently takes only the head rotation but not the\n     * tilt into account.\n     *\n     * @param x\n     * @param y\n     * @param z\n     */\n    setListenerOrientation: function(x, y, z){\n        this._listenerOrientation = [x, y, z];\n        this.ctx.listener.setOrientation(x, y, z, 0, 1, 0);\n    },\n\n    /**\n     * getListenerOrientation\n     * @returns listenerOrientation\n     */\n    getListenerOrientation: function(){\n        return this._listenerOrientation;\n    },\n\n    /**\n     * setListenerPosition\n     * Coordinate usage as intended by the Web\n     * Audio API. See also {@link https://webaudio.github.io/web-audio-api/#the-audiolistener-interface}\n     * @param x\n     * @param y\n     * @param z\n     */\n    setListenerPosition: function(x, y, z){\n        this._listenerPosition = [x, y, z];\n        this.ctx.listener.setPosition(x, y, 0);\n    },\n\n    /**\n     * getListenerPosition\n     * @returns listenerPosition\n     */\n    getListenerPosition: function(){\n        return this._listenerPosition;\n    },\n\n    _handleKeyframe: function(key){\n        console.debug(\"Activating keyframe: \" + key);\n        var keyframe = this._keyframes[key];\n        //this._kfMapping = {};\n        if (this.interactive === false){\n            for (var i = 0; i < keyframe.length; i++){\n                var triplet = keyframe[i];\n                var obj = triplet.obj;\n                var cmd = triplet.cmd;\n                var params = triplet.params;\n                if (cmd === \"position\"){\n                    this.objects[obj].setPosition(params);\n                    /**\n                     * Will be fired if object from list gets new Position as per\n                     * the scene data\n                     * @event module:bogJS~ObjectManager#om_newPosition\n                     * @property {string} obj - Name of object\n                     * @property {float[]} pos - New position values as array [x, y, z]\n                     */\n                    $(this).triggerHandler('om_newPosition', [obj, params]);\n                }\n                else if (cmd === \"gain\"){\n                    this.objects[obj].setGain(params);\n                    /**\n                     * Will be fired if object from list gets new Gain\n                     * value as per scene data / {@link module:bogJS~ObjectManager#_keyframes}\n                     * @event module:bogJS~ObjectManager#om_newGain\n                     * @property {string} obj - Name of object\n                     * @property {number} gain - New gain value\n                     */\n                    $(this).triggerHandler('om_newGain', [obj, params]);\n                }\n                else if (cmd === \"track_mapping\"){\n                    var url = params;\n                    if (url in this._kfMapping === false){\n                        this._kfMapping[url] = obj;\n                    }\n                    else if ((url in this._kfMapping === true) && (this._kfMapping[url] !== obj)){\n                        var objs = [];\n                        var alreadyThere = [this._kfMapping[url]];\n                        this._kfMapping[url] = objs.concat.apply(obj, alreadyThere);\n                    }\n                }\n                else if (cmd === \"is_present\"){\n                    var state;\n                    if (params === 0) {\n                        state = false;\n                    } else if (params === 1) {\n                        state = true;\n                    } else {\n                        state = params;\n                    }\n                    // Removing as it was never really used and conflicts with switchGroups??\n                    this.objects[obj].setStatus(state);\n                    /**\n                     * Will be fired if object from list has new State\n                     * @event module:bogJS~ObjectManager#om_isActive\n                     * @property {string} obj - Name of object\n                     * @property {boolean} bool - Bool value if active or not\n                     */\n                    $(this).triggerHandler('om_isActive', [obj, state]);\n                }\n            }\n        }\n        this._handleKeyframeAssets(key);\n        //this._handleKeyframeMappings();\n    },\n\n    _handleKeyframeAssets: function(kf){\n        //this._kf_canplay = {};\n        if (kf in this._groupObjPlayers){\n            for (var group in this._groupObjPlayers[kf]){\n                var tmpGrp = this._groupObjPlayers[kf][group]; // TODO: does this cause additional delay?\n                if (tmpGrp.canplay === false){\n                    $(tmpGrp).on(\"audio_loaded\", this._loadedStateDelegate(kf, group));\n                }\n            }\n        }\n        if (kf in this._singleObjAudios){\n            for (var obj in this._singleObjAudios[kf]){\n                var tmpAudio = this._singleObjAudios[kf][obj]; // TODO: does this cause additional delay?\n                if (tmpAudio.canplay === false){\n                    $(tmpAudio).on(\"audio_loaded\", this._loadedStateDelegate(kf, obj));\n                }\n            }\n        }\n\n        // now check if all assets are ready for playing:\n        for (var el in this._kf_canplay[kf]){\n            console.debug(el);\n            if (this._kf_canplay[kf][el] === false){\n                console.debug(\"Pausing playback as not all assets are decoded yet.. \");\n                this.pause();\n                break;\n            }\n        }\n        // if we came to this point: start playback of all keyframe assets\n        this._startKeyframeAssets(kf);\n    },\n\n    _startKeyframeAssets: function(kf){\n        if (kf in this._groupObjPlayers){\n            for (var group in this._groupObjPlayers[kf]){\n                var tmpGrp = this._groupObjPlayers[kf][group]; // TODO: does this cause additional delay?\n                tmpGrp.play();\n            }\n        }\n        if (kf in this._singleObjAudios){\n            for (var obj in this._singleObjAudios[kf]){\n                var tmpAudio = this._singleObjAudios[kf][obj]; // TODO: does this cause additional delay?\n                tmpAudio.play();\n            }\n        }\n    },\n\n    _loadedStateDelegate: function(kf, obj){\n        return function(){\n            console.debug(\"Asset now ready: \" + obj);\n            this._kf_canplay[kf][obj] = true;\n            this._checkLoadedState(kf);\n        }.bind(this);\n    },\n\n    _checkLoadedState: function(kf){\n        console.debug(this._kf_canplay[kf]);\n        for (var obj in this._kf_canplay[kf]) {\n            if (this._kf_canplay[kf][obj] !== true){\n                console.debug(\"We still need to wait for decoding of asset(s)\");\n                return;  // break loop and return in case any of the objects is not yet ready\n            }\n        }\n\n        var first_kf = _.min(Object.keys(this._keyframes)); //Get the first keyframe\n        if (kf === first_kf){\n            $(document).triggerHandler('om_ready');\n        }\n        if (this.ctx.state === \"suspended\"){\n            console.debug(\"Resuming playback - all assets are decoded now\");\n            this.resume();\n        }\n    },\n\n    _handleKeyframeMappings: function(){\n        if (JSON.stringify(this._last_kfMapping) !== JSON.stringify(this._kfMapping)){\n            console.info(\"Track mapping has changed\" + JSON.stringify(this._kfMapping));\n            // Firstly disconnect everything to make sure that no old\n            // mappings stay connected\n            // That means that changes have to be made explicitely and\n            // not implicitely!\n            for (var key in this._audioInstances){\n                this._audioInstances[key].disconnect();\n            }\n            /*\n            TODO: Irgendwie herausfinden, was sich zum aktuellen Mapping geändert hat.\n            Dann dementsprechend connecten /disconnecten.\n            */\n\n            // And now connect all the mappings as per the keyframe\n            for (var key in this._kfMapping){\n                var pannerObjects = [];\n                var objs = this._kfMapping[key];\n                if (typeof objs === \"string\"){    // == attribute\n                    pannerObjects = this.objects[objs].highpass;\n                }\n                else if (typeof objs === \"object\"){   // == array\n                    for (var i = 0; i < objs.length; i++){\n                        console.trace(\"Adding \" + objs[i] + \" to the pannerObject array\");\n                        pannerObjects.push(this.objects[objs[i]].highpass);\n                    }\n                }\n                this._audioInstances[key].reconnect(pannerObjects);\n                console.debug(\"Reconnecting \" + key + \" with \" + objs);\n\n                /**\n                 * Will be fired if track mapping for object from list changes\n                 * @event module:bogJS~ObjectManager#om_newTrackMapping\n                 * @property {string} obj - Name of object\n                 * @property {string[]} objs - Array of to be connected objects\n                 */\n                $(this).triggerHandler('om_newTrackMapping', [key, objs]);\n            }\n        }\n        this._last_kfMapping = JSON.parse(JSON.stringify(this._kfMapping));  // making a \"copy\" and not a reference\n    },\n\n    _processCurrentKeyframes: function(){\n        for (var key in this._keyframes){\n            console.debug(\"Processing keyframe \" + key);\n            var relTime = parseFloat(this.ctx.currentTime - this._startTime + parseFloat(key));\n            this._evts[key] = this._clock.setTimeout(this._buildKeyframeCallback(key, relTime),relTime);\n        }\n    },\n\n    _buildKeyframeCallback: function(key, relTime){\n        var that = this;\n        return function(){\n            that._handleKeyframe(key);\n            that._currentKeyframeIndex = parseFloat(key);\n            console.debug('Keyframe ' + key + ' reached at context time: ' + relTime);\n        };\n    },\n\n    /*\n    update: function(){\n        console.trace(\"Updating scene..\")\n        // neue metadaten lesen\n        // aktuelle Zeit vom AudioContext holen\n        // Objekt-Eigenschaften entsprechend ändern\n        // this.readMetadata();\n        // this.processCurrentKeyframes();\n    },\n    */\n\n    _checkReadyStart: function(){\n        if (this._audiobed !== false){\n            return this._audiobed.canplay;\n        } else {\n            return true;\n        }\n    },\n\n\n    /**\n     * Sets RollOffFactor for all objects via\n     * {@link module:bogJS~ObjectController#setRollOffFactor}\n     * @param factor\n     */\n    setRollOffFactor: function(factor){\n        for (var key in this.objects){\n            this.objects[key].setRollOffFactor(factor);\n        }\n        this._triggerChange();\n    },\n\n    /**\n     * Sets DistanceModel for all objects via\n     * {@link module:bogJS~ObjectController#setDistanceModel}\n     * @param model\n     */\n    setDistanceModel: function(model){\n        for (var key in this.objects){\n            this.objects[key].setDistanceModel(model);\n        }\n        this._triggerChange();\n    },\n\n    /**\n     * Sets RefDistance for all objects via\n     * {@link module:bogJS~ObjectController#setRefDistance}\n     * @param refDistance\n     */\n    setRefDistance: function(refDistance){\n        for (var key in this.objects){\n            this.objects[key].setRefDistance(refDistance);\n        }\n        this._triggerChange();\n    },\n\n    /**\n     * Sets MaxDistance for all objects via\n     * {@link module:bogJS~ObjectController#setMaxDistance}\n     * @param maxDistance\n     */\n    setMaxDistance: function(maxDistance){\n        for (var key in this.objects){\n            this.objects[key].setMaxDistance(maxDistance);\n        }\n        this._triggerChange();\n    },\n\n    setHighpassFreq: function(freq){\n        for (var key in this.objects){\n            this.objects[key].setHighpassFreq(freq);\n        }\n    },\n\n    _initSwitchGroup: function(groupName){\n        var item = this.interactiveInfo.switchGroups[groupName].default;\n        this.switchGroup(groupName, item);\n    },\n\n    switchGroup: function(groupName, item){\n        var objects = Object.values(this.interactiveInfo.switchGroups[groupName].items);\n        for (var obj of objects){\n            this.objects[obj].setStatus(false);\n        }\n        var active_obj = this.interactiveInfo.switchGroups[groupName].items[item];\n        console.info(\"SwitchGroup \" + groupName + \" enable \" + active_obj);\n        this.objects[active_obj].setStatus(true);\n    },\n\n    setInteractiveGain: function(groupName, dBValue){\n        var minLogGain = parseFloat(this.interactiveInfo.gain[groupName].range[0]);\n        var maxLogGain = parseFloat(this.interactiveInfo.gain[groupName].range[1]);\n        var gainValue;\n        if (parseFloat(dBValue) > maxLogGain) {\n            gainValue = maxLogGain;\n        } else if(parseFloat(dBValue) < minLogGain) {\n            gainValue = minLogGain;\n        } else {\n            gainValue = dBValue;\n        }\n        // Crossfading\n        //var range = Math.abs(minLogGain) * 0.5 + maxLogGain * 0.5;\n        var gainGroup = Math.pow(10, (gainValue * 0.5) / 20);\n        var gainOther = Math.pow(10, ((-1 * gainValue) * 0.5) / 20);\n        var groupObjects = this.interactiveInfo.gain[groupName].objects;\n        for (var obj of groupObjects){\n            this.objects[obj].setInteractiveGain(gainGroup);\n        }\n        // find other objects\n        var otherObjects = _.difference(Object.keys(this.objects), groupObjects);\n        for (var oth of otherObjects){\n            this.objects[oth].setInteractiveGain(gainOther);\n        }\n        console.debug(\"Set group \" + groupName + \" gain to \" + gainGroup + \" and other objects to \" + gainOther);\n    },\n\n    /**\n     * @private\n     * As Chrome (FF works) does not automatically use the new paramters of\n     * distanceModle, refDistance and maxDistance, we need to trigger a change\n     * by ourself. The additional value of 0.000001 for x seems to be the\n     * threshold for Chrome to change the rendering.\n     */\n    _triggerChange: function(){\n        var pos = this.getListenerPosition();\n        this.setListenerPosition(pos[0] + 0.000001, pos[1], pos[2]);\n        this.setListenerPosition(pos[0], pos[1], pos[2]);\n    }\n};\n\n\n\nmodule.exports = ObjectManager;\n",
    "/**\n * @file scene_reader.js\n * @author Michael Weitnauer [weitnauer@irt.de]\n */\n\n/**\n * @module bogJS\n */\n\n/**\n * @callback loaded_callback\n */\n\n\n/**\n * Represents SceneReader class. Will load and parse scene data from URL for the\n * {@link module:bogJS~ObjectManager|ObjectManager} instance\n *\n * @constructor\n * @abstract\n *\n * @param {loaded_callback} [loaded_callback=undefined] - Callback that will be executed\n * if scene data is loaded and parsed.\n * @fires module:bogJS~SceneReader#scene_loaded\n *\n */\nvar SceneReader = function(loaded_callback){\n    //this.load(url);\n    this.callback = loaded_callback || undefined;\n}\n\nSceneReader.prototype = {\n\n    /**\n     * Executes XHR to load and parse the scene data from the passed URL\n     *\n     * @param {string} url - URL to scene data target\n     * @fires module:bogJS~SceneReader#scene_loaded\n     */\n    load: function(url){\n        // we need to do this as within the anonymous success function of the ajax call,\n        // 'this' will refer to the window object and NOT to the SceneReader instance!\n        var that = this;\n        $.ajax({\n            type: \"GET\",\n\t        url: url,\n    \t    dataType: \"text\",\n\t        success: function(text) {\n                that.parse(text);\n                if (that.callback !== undefined){\n                    that.callback.call();\n                }\n\t        }\n        });\n    },\n\n    parse: function(rawText) {\n        var commands = this._tokenize(rawText);\n        var data = this._parseSpatdif(commands);\n        var keyframes = data[0];\n        var audioURLs = data[1];\n        var sceneInfo = data[2];\n        var groupObjects = data[3];\n        var audiobeds = data[4];\n        var extraObjects = data[5];\n        var interactiveInfo = data[6];\n        var singleObjects = {};\n        for (var kf in extraObjects){\n            for (var group in groupObjects[kf]){\n                for (var el in groupObjects[kf][group]){\n                    var obj = groupObjects[kf][group][el];\n                    var idx = extraObjects[kf].indexOf(obj);\n                    console.debug('Checking for double entry for object ' + obj);\n                    if (idx > -1) {\n                        extraObjects[kf].splice(idx, 1);\n                        console.debug('Found group object ' + obj + ' also as single objects entry. Removing if from the list.');\n                    }\n                }\n            }\n        }\n        singleObjects = extraObjects;\n\n        /**\n         * Will be fired if scene data is loaded and parsed\n         * @event module:bogJS~SceneReader#scene_loaded\n         * @abstract\n         *\n         * @property {module:bogJS~keyframes} keyframes - 'Dictionary' with keyframes\n         * (Array with commands per detected keyframe in scene)\n         *\n         * @property {module:bogJS~audioURLs} audioURLs - 'Dictionary' with audioURLs\n         * per Object in Scene (to be used for mapping of objects to\n         * audio signals)\n         *\n         * @property {module:bogJS~sceneInfo} sceneInfo - 'Dictionary' with additional sceneInfo\n         * (Can contain 'name', 'object_count', 'listener_orientation',\n         * 'listener_position' and / or 'room_dimensions')\n         *\n         * @property {module:bogJS~groupObjects} groupObjects - 'Dictionary'\n         * containing info to identify grouped objects\n         *\n         * @property {module:bogJS~singleObjects} singleObjects - 'Dictionary'\n         * containing info to identify single objects\n         *\n         * @property {module:bogJS~audiobeds} audiobeds - 'Dictionary'\n         * containing objects and their \"track mapping\" info\n         *\n         * @property {module:bogJS~interactiveInfo} interactiveInfo - 'Dictionary'\n         * containing info for interactive objects and groups\n         */\n        $(this).triggerHandler('scene_loaded', [keyframes, audioURLs, sceneInfo, groupObjects, singleObjects, audiobeds, interactiveInfo])\n    },\n\n    _tokenize: function(d){\n        var lines = [];\n        var data = d.split('\\n');\n        for (var i = 0; i < data.length; i++){\n            if (data[i].indexOf(\"/spatdif\") === 0){   //String.prototype.startsWith() not yet widely supported\n                var l = {};\n                var line = data[i].split(' ');\n                var command = line[0].split('/');\n                l.cmd = command.slice(1, command.length);\n                l.params = line.slice(1, line.length);\n                if (l.params.length === 1){\n                    l.params = l.params[0];  // avoids having an array for a single value\n                }\n                lines[lines.length] = l;     // makes sure that we append the data at the end and won't skip indices\n            }\n        }\n        return lines;\n    },\n\n    _parseSpatdif: function(m){\n        var keyframes = {};\n        var audioURLs = {};\n        var sceneInfo = {};\n        var interactiveInfo = {};\n        interactiveInfo.switchGroups = {};\n        interactiveInfo.gain = {};\n        var groups = {};\n        var extraObjects = {};\n        var audiobeds = {};\n        var keyframe = null;\n        for (var i = 0; i < m.length; i++) {\n            if (m[i].cmd[0] === \"spatdif\"){  // darauf verzichten um die lesbarkeit des codes zu verbesern?\n                if (m[i].cmd[1] === \"meta\"){\n                    var meta = m[i];\n                    if (meta.cmd[3] === \"name\") {\n                        sceneInfo.name = meta.params;\n                    } else if (meta.cmd[2] === \"objects\") {\n                        sceneInfo.object_count = meta.params;\n                    } else if ((meta.cmd[2] === \"reference\") && (meta.cmd[3] === \"orientation\")){\n                        sceneInfo.listener_orientation = this._parseFloatArray(meta.params);\n                    } else if ((meta.cmd[2] === \"room\") && (meta.cmd[3] === \"origin\")){\n                        sceneInfo.listener_position = this._parseFloatArray(meta.params);\n                    } else if ((meta.cmd[2] === \"room\") && (meta.cmd[3] === \"dimension\")){\n                        sceneInfo.room_dimensions = this._parseFloatArray(meta.params);\n                    } else if ((meta.cmd[2] === \"audiobed\") && (meta.cmd[3] === \"url\")) {\n                        sceneInfo.audiobed_url = meta.params;\n                    } else if ((meta.cmd[2] === \"audiobed\") && (meta.cmd[3] === \"tracks\")) {\n                        sceneInfo.audiobed_tracks = meta.params;\n                    } else if (meta.cmd[2] === \"interactive\") {\n                        if (meta.cmd[3] === \"switchGroup\") {\n                            if (meta.cmd[4] === \"label\") {\n                                var label = meta.params[0];\n                                interactiveInfo.switchGroups[label] = {};\n                                interactiveInfo.switchGroups[label].default = meta.params[1];\n                                interactiveInfo.switchGroups[label].items = {};\n                            } else {\n                                var item_label = meta.params[0];\n                                interactiveInfo.switchGroups[label].items[item_label] = meta.params[1];\n                            }\n                        } else if (meta.cmd[3] === \"gain\"){\n                            if (meta.cmd[4] === \"label\") {\n                                var label = meta.params[0];\n                                interactiveInfo.gain[label] = {};\n                                interactiveInfo.gain[label].range = [meta.params[1], meta.params[2]];\n                                interactiveInfo.gain[label].objects = [];\n                            } else {\n                                interactiveInfo.gain[label].objects.push(meta.params);\n                            }\n                        }\n                    }\n\n                } else if (m[i].cmd[1] === \"time\") {\n                    keyframe = m[i].params;\n                    keyframes[keyframe] = [];\n                } else if ((m[i].cmd[1] === \"source\") && (keyframe !== null)) {\n                    // ignore the commands until the first keyframe appears\n                    var obj = m[i].cmd[2];\n                    var cmd = m[i].cmd[3];\n                    var params = m[i].params;\n\n                    if (cmd === \"track_mapping\"){\n                        if ((params.startsWith(\"bed_\")) && (obj in audiobeds ===  false)){\n                            audiobeds[obj] = params;\n                        } else if ((params.startsWith(\"bed_\") === false) && (obj in audioURLs === false)) {\n                            audioURLs[obj] = params;\n                            if (keyframe in extraObjects ===  false){\n                                extraObjects[keyframe] = [];\n                            }\n                            extraObjects[keyframe].push(obj);\n                        }\n                    }\n\n                    if (cmd === \"group\") {\n                        if (keyframe in groups === false){\n                            groups[keyframe] = {};\n                        }\n                        if (params in groups[keyframe] === false){\n                            groups[keyframe][params] = [];\n                        }\n                        if (groups[keyframe][params].indexOf(obj) === -1){\n                            groups[keyframe][params].push(obj)  // == groups.keyframe.params.push(obj)\n                            console.debug(\"Adding \" + obj + \" to group \" + params + \" at keyframe \" + keyframe);\n                        }\n                    }\n                    var triplet = {};\n                    triplet.obj = obj;\n                    if (cmd === \"active\"){\n                        cmd = \"is_present\";\n                    }\n                    triplet.cmd = cmd;\n                    triplet.params = m[i].params;\n                    keyframes[keyframe].push(triplet);\n                }\n            }\n        }\n        return [keyframes, audioURLs, sceneInfo, groups, audiobeds, extraObjects, interactiveInfo];\n    },\n\n    _parseFloatArray: function(array){\n        var tmp_array = [];\n        for (var n in array){\n            var number = parseFloat(array[n]);\n            if (!isNaN(number)){\n                tmp_array[tmp_array.length] = number;\n            }\n        }\n        return tmp_array;\n    }\n\n}\n\n\nmodule.exports = SceneReader;\n"
  ]
}